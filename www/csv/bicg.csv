lut,dsp,error,latency,expression
445,5,0.0008866787538863719,160044000,"// bicg
#define N 4000
#define _PB_NX N
#define _PB_NY N

#pragma soap input \
    float A[_PB_NX][_PB_NY] = [0.0, 1.0], \
    float s[_PB_NY] = [0.0, 1.0], \
    float q[_PB_NX] = 0, \
    float p[_PB_NY] = [0.0, 1.0], \
    float r[_PB_NX] = [0.0, 1.0]
#pragma soap output q


int i; int j;

for (i = 0; i < _PB_NY; i++)
    s[i] = 0;
for (i = 0; i < _PB_NX; i++)
{
    q[i] = 0;
    for (j = 0; j < _PB_NY; j++)
    {
        s[j] = s[j] + r[i] * A[i][j];
        q[i] = q[i] + A[i][j] * p[j];
    }
}

// vim: ft=c
"
601,5,0.00025367739726789296,40168000,"void kernel_bicg(float A[4000][4000], float s[4000], float q[4000], float p[4000], float r[4000]) {
    #pragma soap input float A[4000][4000] = [0.0, 1.0], float s[4000] = [0.0, 1.0], float q[4000] = 0, float p[4000] = [0.0, 1.0], float r[4000] = [0.0, 1.0] 
    #pragma soap output q 
    int _t863_l877; 
    float _t861_l877; 
    float _t870_l877; 
    float _t866_l877; 
    float _t846_l877; 
    float _t862_l877; 
    int _t834_l880; 
    int _t855_l877; 
    int i_l880; 
    float _t847_l877; 
    float _t852_l877; 
    int _t835_l877; 
    int i_l877; 
    float _t860_l877; 
    float _t853_l877; 
    int _t848_l877; 
    int _t840_l877; 
    float _t868_l877; 
    int _t841_l877; 
    int _t835_l880; 
    float _t858_l877; 
    int _t830_l877; 
    int _t842_l877; 
    float _t844_l877; 
    float _t869_l877; 
    float _t872_l877; 
    int _t834_l877; 
    int _t864_l877; 
    int j_l877; 
    int _t836_l880; 
    int _t856_l877; 
    float _t850_l877; 
    float _t871_l877; 
    float _t854_l877; 
    int _t830_l880; 
    _t830_l880 = 0; 
    i_l880 = _t830_l880; 
    while (i_l880 < 4000) {
        _t834_l880 = i_l880; 
        _t834_l877 = _t834_l880; 
        _t830_l877 = 0; 
        q[_t834_l877] = _t830_l877; 
        j_l877 = _t830_l877; 
        i_l877 = _t834_l877; 
        while (j_l877 < 4000) {
            _t834_l877 = i_l877; 
            _t840_l877 = j_l877; 
            _t863_l877 = 2; 
            _t864_l877 = _t863_l877 + _t840_l877; 
            _t866_l877 = A[_t834_l877][_t864_l877]; 
            _t868_l877 = p[_t864_l877]; 
            _t869_l877 = _t866_l877 * _t868_l877; 
            _t855_l877 = 3; 
            _t856_l877 = _t855_l877 + _t840_l877; 
            _t858_l877 = A[_t834_l877][_t856_l877]; 
            _t860_l877 = p[_t856_l877]; 
            _t861_l877 = _t858_l877 * _t860_l877; 
            _t835_l877 = 1; 
            _t848_l877 = _t840_l877 + _t835_l877; 
            _t850_l877 = A[_t834_l877][_t848_l877]; 
            _t852_l877 = p[_t848_l877]; 
            _t853_l877 = _t850_l877 * _t852_l877; 
            _t846_l877 = p[_t840_l877]; 
            _t844_l877 = A[_t834_l877][_t840_l877]; 
            _t847_l877 = _t844_l877 * _t846_l877; 
            _t854_l877 = _t847_l877 + _t853_l877; 
            _t862_l877 = _t854_l877 + _t861_l877; 
            _t870_l877 = _t862_l877 + _t869_l877; 
            _t871_l877 = q[_t834_l877]; 
            _t872_l877 = _t870_l877 + _t871_l877; 
            q[_t834_l877] = _t872_l877; 
            _t841_l877 = 4; 
            _t842_l877 = _t840_l877 + _t841_l877; 
            j_l877 = _t842_l877; 
            i_l877 = _t834_l877;
        } 
        _t835_l880 = 1; 
        _t836_l880 = _t834_l880 + _t835_l880; 
        i_l880 = _t836_l880;
    }
}
"
653,5,0.0002067685272777453,32168000,"void kernel_bicg(float A[4000][4000], float s[4000], float q[4000], float p[4000], float r[4000]) {
    #pragma soap input float A[4000][4000] = [0.0, 1.0], float s[4000] = [0.0, 1.0], float q[4000] = 0, float p[4000] = [0.0, 1.0], float r[4000] = [0.0, 1.0] 
    #pragma soap output q 
    float _t927_l939; 
    float _t922_l939; 
    float _t913_l939; 
    int _t889_l942; 
    int _t884_l939; 
    float _t911_l939; 
    float _t930_l939; 
    int _t904_l939; 
    int _t897_l939; 
    float _t916_l939; 
    float _t931_l939; 
    float _t902_l939; 
    float _t921_l939; 
    float _t900_l939; 
    float _t923_l939; 
    int _t924_l939; 
    int i_l942; 
    int _t889_l939; 
    float _t934_l939; 
    int _t895_l939; 
    float _t903_l939; 
    float _t929_l939; 
    float _t933_l939; 
    int i_l939; 
    int _t888_l939; 
    float _t910_l939; 
    int _t917_l939; 
    int _t896_l939; 
    float _t919_l939; 
    float _t915_l939; 
    float _t909_l939; 
    int _t888_l942; 
    int _t898_l939; 
    int _t884_l942; 
    int _t925_l939; 
    int _t890_l942; 
    float _t907_l939; 
    int _t894_l939; 
    float _t932_l939; 
    int _t905_l939; 
    int j_l939; 
    _t884_l942 = 0; 
    i_l942 = _t884_l942; 
    while (i_l942 < 4000) {
        _t888_l942 = i_l942; 
        _t889_l942 = 1; 
        _t888_l939 = _t888_l942; 
        _t884_l939 = 0; 
        q[_t888_l939] = _t884_l939; 
        j_l939 = _t884_l939; 
        i_l939 = _t888_l939; 
        while (j_l939 < 4000) {
            _t894_l939 = j_l939; 
            _t897_l939 = 2; 
            _t898_l939 = _t897_l939 + _t894_l939; 
            _t915_l939 = p[_t894_l939]; 
            _t888_l939 = i_l939; 
            _t933_l939 = q[_t888_l939]; 
            _t924_l939 = 3; 
            _t925_l939 = _t924_l939 + _t894_l939; 
            _t929_l939 = p[_t925_l939]; 
            _t927_l939 = A[_t888_l939][_t925_l939]; 
            _t930_l939 = _t927_l939 * _t929_l939; 
            _t889_l939 = 1; 
            _t917_l939 = _t894_l939 + _t889_l939; 
            _t921_l939 = p[_t917_l939]; 
            _t919_l939 = A[_t888_l939][_t917_l939]; 
            _t922_l939 = _t919_l939 * _t921_l939; 
            _t913_l939 = A[_t888_l939][_t894_l939]; 
            _t916_l939 = _t913_l939 * _t915_l939; 
            _t923_l939 = _t916_l939 + _t922_l939; 
            _t931_l939 = _t923_l939 + _t930_l939; 
            _t904_l939 = 4; 
            _t905_l939 = _t904_l939 + _t894_l939; 
            _t909_l939 = p[_t905_l939]; 
            _t907_l939 = A[_t888_l939][_t905_l939]; 
            _t910_l939 = _t907_l939 * _t909_l939; 
            _t902_l939 = p[_t898_l939]; 
            _t900_l939 = A[_t888_l939][_t898_l939]; 
            _t903_l939 = _t900_l939 * _t902_l939; 
            _t911_l939 = _t903_l939 + _t910_l939; 
            _t932_l939 = _t911_l939 + _t931_l939; 
            _t934_l939 = _t932_l939 + _t933_l939; 
            q[_t888_l939] = _t934_l939; 
            _t895_l939 = 5; 
            _t896_l939 = _t894_l939 + _t895_l939; 
            j_l939 = _t896_l939; 
            i_l939 = _t888_l939;
        } 
        _t890_l942 = _t888_l942 + _t889_l942; 
        i_l942 = _t890_l942;
    }
}
"
913,5,0.00013196469808463007,16288000,"void kernel_bicg(float A[4000][4000], float s[4000], float q[4000], float p[4000], float r[4000]) {
    #pragma soap input float A[4000][4000] = [0.0, 1.0], float s[4000] = [0.0, 1.0], float q[4000] = 0, float p[4000] = [0.0, 1.0], float r[4000] = [0.0, 1.0] 
    #pragma soap output q 
    float _t1024_l1041; 
    float _t969_l1041; 
    float _t964_l1041; 
    float _t1035_l1041; 
    float _t997_l1041; 
    int _t1019_l1041; 
    float _t1005_l1041; 
    float _t980_l1041; 
    int _t975_l1041; 
    int _t946_l1041; 
    int _t1018_l1041; 
    float _t1031_l1041; 
    int _t995_l1041; 
    int _t1011_l1041; 
    int _t960_l1041; 
    int i_l1041; 
    float _t1017_l1041; 
    float _t1025_l1041; 
    float _t1009_l1041; 
    int _t951_l1041; 
    int _t952_l1044; 
    int _t1027_l1041; 
    int _t959_l1041; 
    float _t1001_l1041; 
    float _t989_l1041; 
    float _t1016_l1041; 
    float _t991_l1041; 
    float _t1015_l1041; 
    float _t971_l1041; 
    float _t1000_l1041; 
    float _t1013_l1041; 
    int _t956_l1041; 
    int j_l1041; 
    float _t999_l1041; 
    float _t985_l1041; 
    float _t972_l1041; 
    int _t958_l1041; 
    int _t950_l1041; 
    float _t1008_l1041; 
    int _t974_l1041; 
    int _t957_l1041; 
    int _t950_l1044; 
    int _t1010_l1041; 
    float _t977_l1041; 
    int _t983_l1041; 
    float _t988_l1041; 
    int i_l1044; 
    int _t982_l1041; 
    int _t966_l1041; 
    float _t1036_l1041; 
    int _t946_l1044; 
    float _t1023_l1041; 
    float _t1033_l1041; 
    float _t965_l1041; 
    float _t1021_l1041; 
    float _t981_l1041; 
    float _t1032_l1041; 
    int _t1003_l1041; 
    float _t962_l1041; 
    float _t993_l1041; 
    float _t994_l1041; 
    int _t1002_l1041; 
    float _t987_l1041; 
    float _t979_l1041; 
    int _t951_l1044; 
    float _t1029_l1041; 
    float _t1034_l1041; 
    int _t967_l1041; 
    int _t1026_l1041; 
    float _t973_l1041; 
    float _t1007_l1041; 
    _t946_l1044 = 0; 
    i_l1044 = _t946_l1044; 
    while (i_l1044 < 4000) {
        _t950_l1044 = i_l1044; 
        _t946_l1041 = 0; 
        _t950_l1041 = _t950_l1044; 
        q[_t950_l1041] = _t946_l1041; 
        j_l1041 = _t946_l1041; 
        i_l1041 = _t950_l1041; 
        while (j_l1041 < 4000) {
            _t956_l1041 = j_l1041; 
            _t951_l1041 = 1; 
            _t995_l1041 = _t956_l1041 + _t951_l1041; 
            _t966_l1041 = 4; 
            _t967_l1041 = _t966_l1041 + _t956_l1041; 
            _t959_l1041 = 2; 
            _t960_l1041 = _t959_l1041 + _t956_l1041; 
            _t950_l1041 = i_l1041; 
            _t962_l1041 = A[_t950_l1041][_t960_l1041]; 
            _t964_l1041 = p[_t960_l1041]; 
            _t965_l1041 = _t962_l1041 * _t964_l1041; 
            _t971_l1041 = p[_t967_l1041]; 
            _t969_l1041 = A[_t950_l1041][_t967_l1041]; 
            _t972_l1041 = _t969_l1041 * _t971_l1041; 
            _t973_l1041 = _t965_l1041 + _t972_l1041; 
            _t974_l1041 = 5; 
            _t975_l1041 = _t974_l1041 + _t956_l1041; 
            _t979_l1041 = p[_t975_l1041]; 
            _t977_l1041 = A[_t950_l1041][_t975_l1041]; 
            _t980_l1041 = _t977_l1041 * _t979_l1041; 
            _t981_l1041 = _t973_l1041 + _t980_l1041; 
            _t982_l1041 = 9; 
            _t983_l1041 = _t982_l1041 + _t956_l1041; 
            _t987_l1041 = p[_t983_l1041]; 
            _t985_l1041 = A[_t950_l1041][_t983_l1041]; 
            _t988_l1041 = _t985_l1041 * _t987_l1041; 
            _t989_l1041 = _t981_l1041 + _t988_l1041; 
            _t1026_l1041 = 8; 
            _t1027_l1041 = _t1026_l1041 + _t956_l1041; 
            _t1029_l1041 = A[_t950_l1041][_t1027_l1041]; 
            _t1031_l1041 = p[_t1027_l1041]; 
            _t1032_l1041 = _t1029_l1041 * _t1031_l1041; 
            _t1018_l1041 = 7; 
            _t1019_l1041 = _t1018_l1041 + _t956_l1041; 
            _t1021_l1041 = A[_t950_l1041][_t1019_l1041]; 
            _t1023_l1041 = p[_t1019_l1041]; 
            _t1024_l1041 = _t1021_l1041 * _t1023_l1041; 
            _t1010_l1041 = 6; 
            _t1011_l1041 = _t1010_l1041 + _t956_l1041; 
            _t1013_l1041 = A[_t950_l1041][_t1011_l1041]; 
            _t1015_l1041 = p[_t1011_l1041]; 
            _t1016_l1041 = _t1013_l1041 * _t1015_l1041; 
            _t1002_l1041 = 3; 
            _t1003_l1041 = _t1002_l1041 + _t956_l1041; 
            _t1005_l1041 = A[_t950_l1041][_t1003_l1041]; 
            _t1007_l1041 = p[_t1003_l1041]; 
            _t1008_l1041 = _t1005_l1041 * _t1007_l1041; 
            _t993_l1041 = p[_t956_l1041]; 
            _t991_l1041 = A[_t950_l1041][_t956_l1041]; 
            _t994_l1041 = _t991_l1041 * _t993_l1041; 
            _t997_l1041 = A[_t950_l1041][_t995_l1041]; 
            _t999_l1041 = p[_t995_l1041]; 
            _t1000_l1041 = _t997_l1041 * _t999_l1041; 
            _t1001_l1041 = _t994_l1041 + _t1000_l1041; 
            _t1009_l1041 = _t1001_l1041 + _t1008_l1041; 
            _t1017_l1041 = _t1009_l1041 + _t1016_l1041; 
            _t1025_l1041 = _t1017_l1041 + _t1024_l1041; 
            _t1033_l1041 = _t1025_l1041 + _t1032_l1041; 
            _t1034_l1041 = _t989_l1041 + _t1033_l1041; 
            _t1035_l1041 = q[_t950_l1041]; 
            _t1036_l1041 = _t1034_l1041 + _t1035_l1041; 
            q[_t950_l1041] = _t1036_l1041; 
            _t957_l1041 = 10; 
            _t958_l1041 = _t956_l1041 + _t957_l1041; 
            j_l1041 = _t958_l1041; 
            i_l1041 = _t950_l1041;
        } 
        _t951_l1044 = 1; 
        _t952_l1044 = _t950_l1044 + _t951_l1044; 
        i_l1044 = _t952_l1044;
    }
}
"
809,5,0.00015497209096793085,20248000,"void kernel_bicg(float A[4000][4000], float s[4000], float q[4000], float p[4000], float r[4000]) {
    #pragma soap input float A[4000][4000] = [0.0, 1.0], float s[4000] = [0.0, 1.0], float q[4000] = 0, float p[4000] = [0.0, 1.0], float r[4000] = [0.0, 1.0] 
    #pragma soap output q 
    float _t1096_l1127; 
    float _t1076_l1127; 
    float _t1094_l1127; 
    int i_l1130; 
    int _t1082_l1127; 
    float _t1103_l1127; 
    float _t1121_l1127; 
    int _t1060_l1127; 
    float _t1100_l1127; 
    float _t1122_l1127; 
    float _t1110_l1127; 
    int _t1090_l1127; 
    float _t1062_l1127; 
    int _t1052_l1130; 
    float _t1109_l1127; 
    float _t1070_l1127; 
    int _t1058_l1127; 
    int _t1105_l1127; 
    int j_l1127; 
    int _t1112_l1127; 
    float _t1071_l1127; 
    int _t1059_l1127; 
    float _t1078_l1127; 
    int _t1066_l1127; 
    float _t1111_l1127; 
    float _t1068_l1127; 
    float _t1065_l1127; 
    float _t1092_l1127; 
    float _t1064_l1127; 
    int _t1052_l1127; 
    int _t1081_l1127; 
    float _t1084_l1127; 
    int _t1097_l1127; 
    float _t1080_l1127; 
    float _t1107_l1127; 
    float _t1079_l1127; 
    int _t1089_l1127; 
    float _t1087_l1127; 
    int _t1053_l1127; 
    float _t1119_l1127; 
    int _t1053_l1130; 
    float _t1086_l1127; 
    float _t1120_l1127; 
    int _t1073_l1127; 
    int _t1098_l1127; 
    int _t1113_l1127; 
    int _t1048_l1127; 
    float _t1115_l1127; 
    int _t1048_l1130; 
    int _t1054_l1130; 
    float _t1117_l1127; 
    float _t1088_l1127; 
    float _t1118_l1127; 
    int _t1074_l1127; 
    float _t1102_l1127; 
    float _t1072_l1127; 
    int _t1104_l1127; 
    float _t1095_l1127; 
    int i_l1127; 
    _t1048_l1130 = 0; 
    i_l1130 = _t1048_l1130; 
    while (i_l1130 < 4000) {
        _t1052_l1130 = i_l1130; 
        _t1048_l1127 = 0; 
        _t1052_l1127 = _t1052_l1130; 
        q[_t1052_l1127] = _t1048_l1127; 
        j_l1127 = _t1048_l1127; 
        i_l1127 = _t1052_l1127; 
        while (j_l1127 < 4000) {
            _t1058_l1127 = j_l1127; 
            _t1073_l1127 = 3; 
            _t1074_l1127 = _t1073_l1127 + _t1058_l1127; 
            _t1064_l1127 = p[_t1058_l1127]; 
            _t1052_l1127 = i_l1127; 
            _t1062_l1127 = A[_t1052_l1127][_t1058_l1127]; 
            _t1065_l1127 = _t1062_l1127 * _t1064_l1127; 
            _t1053_l1127 = 1; 
            _t1066_l1127 = _t1058_l1127 + _t1053_l1127; 
            _t1070_l1127 = p[_t1066_l1127]; 
            _t1068_l1127 = A[_t1052_l1127][_t1066_l1127]; 
            _t1071_l1127 = _t1068_l1127 * _t1070_l1127; 
            _t1072_l1127 = _t1065_l1127 + _t1071_l1127; 
            _t1078_l1127 = p[_t1074_l1127]; 
            _t1076_l1127 = A[_t1052_l1127][_t1074_l1127]; 
            _t1079_l1127 = _t1076_l1127 * _t1078_l1127; 
            _t1080_l1127 = _t1072_l1127 + _t1079_l1127; 
            _t1081_l1127 = 6; 
            _t1082_l1127 = _t1081_l1127 + _t1058_l1127; 
            _t1086_l1127 = p[_t1082_l1127]; 
            _t1084_l1127 = A[_t1052_l1127][_t1082_l1127]; 
            _t1087_l1127 = _t1084_l1127 * _t1086_l1127; 
            _t1088_l1127 = _t1080_l1127 + _t1087_l1127; 
            _t1089_l1127 = 7; 
            _t1090_l1127 = _t1089_l1127 + _t1058_l1127; 
            _t1094_l1127 = p[_t1090_l1127]; 
            _t1092_l1127 = A[_t1052_l1127][_t1090_l1127]; 
            _t1095_l1127 = _t1092_l1127 * _t1094_l1127; 
            _t1096_l1127 = _t1088_l1127 + _t1095_l1127; 
            _t1112_l1127 = 5; 
            _t1113_l1127 = _t1112_l1127 + _t1058_l1127; 
            _t1117_l1127 = p[_t1113_l1127]; 
            _t1115_l1127 = A[_t1052_l1127][_t1113_l1127]; 
            _t1118_l1127 = _t1115_l1127 * _t1117_l1127; 
            _t1104_l1127 = 4; 
            _t1105_l1127 = _t1104_l1127 + _t1058_l1127; 
            _t1109_l1127 = p[_t1105_l1127]; 
            _t1107_l1127 = A[_t1052_l1127][_t1105_l1127]; 
            _t1110_l1127 = _t1107_l1127 * _t1109_l1127; 
            _t1097_l1127 = 2; 
            _t1098_l1127 = _t1097_l1127 + _t1058_l1127; 
            _t1102_l1127 = p[_t1098_l1127]; 
            _t1100_l1127 = A[_t1052_l1127][_t1098_l1127]; 
            _t1103_l1127 = _t1100_l1127 * _t1102_l1127; 
            _t1111_l1127 = _t1103_l1127 + _t1110_l1127; 
            _t1119_l1127 = _t1111_l1127 + _t1118_l1127; 
            _t1120_l1127 = _t1096_l1127 + _t1119_l1127; 
            _t1121_l1127 = q[_t1052_l1127]; 
            _t1122_l1127 = _t1120_l1127 + _t1121_l1127; 
            q[_t1052_l1127] = _t1122_l1127; 
            _t1059_l1127 = 8; 
            _t1060_l1127 = _t1058_l1127 + _t1059_l1127; 
            j_l1127 = _t1060_l1127; 
            i_l1127 = _t1052_l1127;
        } 
        _t1053_l1130 = 1; 
        _t1054_l1130 = _t1052_l1130 + _t1053_l1130; 
        i_l1130 = _t1054_l1130;
    }
}
"
1589,13,0.00019396452989894897,15212000,"void kernel_bicg(float A[4000][4000], float s[4000], float q[4000], float p[4000], float r[4000]) {
    #pragma soap input float A[4000][4000] = [0.0, 1.0], float s[4000] = [0.0, 1.0], float q[4000] = 0, float p[4000] = [0.0, 1.0], float r[4000] = [0.0, 1.0] 
    #pragma soap output q 
    int _t1146_l1237; 
    int _t1199_l1237; 
    int _t1176_l1237; 
    float _t1186_l1237; 
    float _t1273_l1303; 
    float _t1253_l1303; 
    float _t1242_l1303; 
    float _t1220_l1237; 
    float _t1188_l1237; 
    int _t1139_l1237; 
    int _t1144_l1237; 
    float _t1165_l1237; 
    float _t1212_l1237; 
    float _t1288_l1303; 
    float _t1285_l1303; 
    float _t1279_l1303; 
    int _t1292_l1303; 
    int i_l1303; 
    float _t1205_l1237; 
    float _t1227_l1237; 
    float _t1276_l1303; 
    float _t1244_l1303; 
    int _t1138_l1303; 
    int _t1223_l1237; 
    float _t1182_l1237; 
    int _t1206_l1237; 
    float _t1243_l1303; 
    float _t1231_l1237; 
    int _t1183_l1237; 
    float _t1189_l1237; 
    float _t1148_l1237; 
    float _t1267_l1303; 
    float _t1204_l1237; 
    float _t1294_l1303; 
    float _t1156_l1237; 
    float _t1270_l1303; 
    float _t1238_l1303; 
    float _t1196_l1237; 
    float _t1251_l1303; 
    float _t1173_l1237; 
    float _t1178_l1237; 
    int _t1222_l1237; 
    int _t1168_l1237; 
    float _t1280_l1303; 
    float _t1213_l1237; 
    int _t1138_l1237; 
    float _t1217_l1237; 
    float _t1287_l1303; 
    float _t1170_l1237; 
    int _t1134_l1237; 
    int _t1215_l1237; 
    int _t1145_l1237; 
    float _t1174_l1237; 
    float _t1166_l1237; 
    float _t1180_l1237; 
    float _t1230_l1237; 
    int _t1134_l1303; 
    float _t1296_l1303; 
    float _t1154_l1237; 
    float _t1151_l1237; 
    float _t1297_l1303; 
    int _t1214_l1237; 
    float _t1261_l1303; 
    int _t1184_l1237; 
    int _t1274_l1303; 
    float _t1202_l1237; 
    int _t1283_l1303; 
    float _t1258_l1303; 
    float _t1228_l1237; 
    float _t1221_l1237; 
    float _t1198_l1237; 
    float _t1298_l1303; 
    float _t1229_l1237; 
    int _t1235_l1303; 
    int _t1265_l1303; 
    int _t1140_l1303; 
    float _t1289_l1303; 
    float _t1252_l1303; 
    float _t1157_l1237; 
    float _t1172_l1237; 
    float _t1249_l1303; 
    float _t1260_l1303; 
    float _t1255_l1303; 
    int _t1191_l1237; 
    int _t1207_l1237; 
    float _t1211_l1237; 
    float _t1262_l1303; 
    int _t1160_l1237; 
    float _t1282_l1303; 
    float _t1150_l1237; 
    float _t1271_l1303; 
    float _t1158_l1237; 
    float _t1232_l1237; 
    int _t1200_l1237; 
    float _t1240_l1303; 
    float _t1181_l1237; 
    int _t1247_l1303; 
    int _t1159_l1237; 
    int _t1192_l1237; 
    float _t1194_l1237; 
    float _t1162_l1237; 
    float _t1246_l1303; 
    int j_l1237; 
    int i_l1237; 
    int _t1167_l1237; 
    float _t1278_l1303; 
    float _t1219_l1237; 
    int _t1256_l1303; 
    float _t1291_l1303; 
    float _t1164_l1237; 
    float _t1264_l1303; 
    float _t1209_l1237; 
    int _t1175_l1237; 
    float _t1197_l1237; 
    int _t1139_l1303; 
    float _t1269_l1303; 
    float _t1190_l1237; 
    float _t1225_l1237; 
    int _t1152_l1237; 
    _t1134_l1303 = 0; 
    i_l1303 = _t1134_l1303; 
    while (i_l1303 < 4000) {
        _t1138_l1303 = i_l1303; 
        _t1265_l1303 = 3996; 
        _t1138_l1237 = _t1138_l1303; 
        _t1134_l1237 = 0; 
        q[_t1138_l1237] = _t1134_l1237; 
        j_l1237 = _t1134_l1237; 
        i_l1237 = _t1138_l1237; 
        while (j_l1237 < 3993) {
            _t1138_l1237 = i_l1237; 
            _t1144_l1237 = j_l1237; 
            _t1139_l1237 = 1; 
            _t1152_l1237 = _t1144_l1237 + _t1139_l1237; 
            _t1154_l1237 = A[_t1138_l1237][_t1152_l1237]; 
            _t1156_l1237 = p[_t1152_l1237]; 
            _t1157_l1237 = _t1154_l1237 * _t1156_l1237; 
            _t1191_l1237 = 10; 
            _t1192_l1237 = _t1191_l1237 + _t1144_l1237; 
            _t1148_l1237 = A[_t1138_l1237][_t1144_l1237]; 
            _t1222_l1237 = 9; 
            _t1223_l1237 = _t1222_l1237 + _t1144_l1237; 
            _t1159_l1237 = 3; 
            _t1160_l1237 = _t1159_l1237 + _t1144_l1237; 
            _t1162_l1237 = A[_t1138_l1237][_t1160_l1237]; 
            _t1214_l1237 = 5; 
            _t1183_l1237 = 8; 
            _t1145_l1237 = 11; 
            _t1146_l1237 = _t1144_l1237 + _t1145_l1237; 
            j_l1237 = _t1146_l1237; 
            _t1196_l1237 = p[_t1192_l1237]; 
            _t1164_l1237 = p[_t1160_l1237]; 
            _t1165_l1237 = _t1162_l1237 * _t1164_l1237; 
            _t1199_l1237 = 2; 
            _t1200_l1237 = _t1199_l1237 + _t1144_l1237; 
            _t1231_l1237 = q[_t1138_l1237]; 
            _t1167_l1237 = 6; 
            _t1168_l1237 = _t1167_l1237 + _t1144_l1237; 
            _t1170_l1237 = A[_t1138_l1237][_t1168_l1237]; 
            _t1204_l1237 = p[_t1200_l1237]; 
            _t1150_l1237 = p[_t1144_l1237]; 
            _t1151_l1237 = _t1148_l1237 * _t1150_l1237; 
            _t1215_l1237 = _t1214_l1237 + _t1144_l1237; 
            _t1172_l1237 = p[_t1168_l1237]; 
            _t1173_l1237 = _t1170_l1237 * _t1172_l1237; 
            _t1206_l1237 = 4; 
            _t1207_l1237 = _t1206_l1237 + _t1144_l1237; 
            _t1209_l1237 = A[_t1138_l1237][_t1207_l1237]; 
            _t1175_l1237 = 7; 
            _t1176_l1237 = _t1175_l1237 + _t1144_l1237; 
            _t1178_l1237 = A[_t1138_l1237][_t1176_l1237]; 
            _t1202_l1237 = A[_t1138_l1237][_t1200_l1237]; 
            _t1205_l1237 = _t1202_l1237 * _t1204_l1237; 
            _t1211_l1237 = p[_t1207_l1237]; 
            _t1212_l1237 = _t1209_l1237 * _t1211_l1237; 
            _t1213_l1237 = _t1205_l1237 + _t1212_l1237; 
            _t1219_l1237 = p[_t1215_l1237]; 
            _t1217_l1237 = A[_t1138_l1237][_t1215_l1237]; 
            _t1220_l1237 = _t1217_l1237 * _t1219_l1237; 
            _t1221_l1237 = _t1213_l1237 + _t1220_l1237; 
            _t1180_l1237 = p[_t1176_l1237]; 
            _t1181_l1237 = _t1178_l1237 * _t1180_l1237; 
            _t1184_l1237 = _t1183_l1237 + _t1144_l1237; 
            _t1186_l1237 = A[_t1138_l1237][_t1184_l1237]; 
            _t1227_l1237 = p[_t1223_l1237]; 
            _t1225_l1237 = A[_t1138_l1237][_t1223_l1237]; 
            _t1228_l1237 = _t1225_l1237 * _t1227_l1237; 
            _t1229_l1237 = _t1221_l1237 + _t1228_l1237; 
            _t1188_l1237 = p[_t1184_l1237]; 
            _t1189_l1237 = _t1186_l1237 * _t1188_l1237; 
            _t1158_l1237 = _t1151_l1237 + _t1157_l1237; 
            _t1194_l1237 = A[_t1138_l1237][_t1192_l1237]; 
            _t1197_l1237 = _t1194_l1237 * _t1196_l1237; 
            _t1166_l1237 = _t1158_l1237 + _t1165_l1237; 
            i_l1237 = _t1138_l1237; 
            _t1174_l1237 = _t1166_l1237 + _t1173_l1237; 
            _t1182_l1237 = _t1174_l1237 + _t1181_l1237; 
            _t1190_l1237 = _t1182_l1237 + _t1189_l1237; 
            _t1198_l1237 = _t1190_l1237 + _t1197_l1237; 
            _t1230_l1237 = _t1198_l1237 + _t1229_l1237; 
            _t1232_l1237 = _t1230_l1237 + _t1231_l1237; 
            q[_t1138_l1237] = _t1232_l1237;
        } 
        _t1238_l1303 = q[_t1138_l1303]; 
        _t1235_l1303 = 3993; 
        _t1242_l1303 = p[_t1235_l1303]; 
        _t1240_l1303 = A[_t1138_l1303][_t1235_l1303]; 
        _t1243_l1303 = _t1240_l1303 * _t1242_l1303; 
        _t1244_l1303 = _t1238_l1303 + _t1243_l1303; 
        q[_t1138_l1303] = _t1244_l1303; 
        _t1246_l1303 = q[_t1138_l1303]; 
        _t1247_l1303 = 3994; 
        _t1251_l1303 = p[_t1247_l1303]; 
        _t1249_l1303 = A[_t1138_l1303][_t1247_l1303]; 
        _t1252_l1303 = _t1249_l1303 * _t1251_l1303; 
        _t1253_l1303 = _t1246_l1303 + _t1252_l1303; 
        q[_t1138_l1303] = _t1253_l1303; 
        _t1256_l1303 = 3995; 
        _t1258_l1303 = A[_t1138_l1303][_t1256_l1303]; 
        _t1260_l1303 = p[_t1256_l1303]; 
        _t1261_l1303 = _t1258_l1303 * _t1260_l1303; 
        _t1255_l1303 = q[_t1138_l1303]; 
        _t1262_l1303 = _t1255_l1303 + _t1261_l1303; 
        q[_t1138_l1303] = _t1262_l1303; 
        _t1264_l1303 = q[_t1138_l1303]; 
        _t1269_l1303 = p[_t1265_l1303]; 
        _t1267_l1303 = A[_t1138_l1303][_t1265_l1303]; 
        _t1270_l1303 = _t1267_l1303 * _t1269_l1303; 
        _t1271_l1303 = _t1264_l1303 + _t1270_l1303; 
        q[_t1138_l1303] = _t1271_l1303; 
        _t1273_l1303 = q[_t1138_l1303]; 
        _t1274_l1303 = 3997; 
        _t1278_l1303 = p[_t1274_l1303]; 
        _t1276_l1303 = A[_t1138_l1303][_t1274_l1303]; 
        _t1279_l1303 = _t1276_l1303 * _t1278_l1303; 
        _t1280_l1303 = _t1273_l1303 + _t1279_l1303; 
        q[_t1138_l1303] = _t1280_l1303; 
        _t1282_l1303 = q[_t1138_l1303]; 
        _t1283_l1303 = 3998; 
        _t1285_l1303 = A[_t1138_l1303][_t1283_l1303]; 
        _t1287_l1303 = p[_t1283_l1303]; 
        _t1288_l1303 = _t1285_l1303 * _t1287_l1303; 
        _t1289_l1303 = _t1282_l1303 + _t1288_l1303; 
        q[_t1138_l1303] = _t1289_l1303; 
        _t1291_l1303 = q[_t1138_l1303]; 
        _t1292_l1303 = 3999; 
        _t1296_l1303 = p[_t1292_l1303]; 
        _t1294_l1303 = A[_t1138_l1303][_t1292_l1303]; 
        _t1297_l1303 = _t1294_l1303 * _t1296_l1303; 
        _t1298_l1303 = _t1291_l1303 + _t1297_l1303; 
        q[_t1138_l1303] = _t1298_l1303; 
        _t1139_l1303 = 1; 
        _t1140_l1303 = _t1138_l1303 + _t1139_l1303; 
        i_l1303 = _t1140_l1303;
    }
}
"
497,5,0.00046098235179670155,80088000,"void kernel_bicg(float A[4000][4000], float s[4000], float q[4000], float p[4000], float r[4000]) {
    #pragma soap input float A[4000][4000] = [0.0, 1.0], float s[4000] = [0.0, 1.0], float q[4000] = 0, float p[4000] = [0.0, 1.0], float r[4000] = [0.0, 1.0] 
    #pragma soap output q 
    int _t1317_l1338; 
    int _t1318_l1338; 
    int _t1307_l1341; 
    float _t1330_l1338; 
    float _t1321_l1338; 
    float _t1331_l1338; 
    float _t1329_l1338; 
    int i_l1341; 
    int _t1311_l1341; 
    float _t1324_l1338; 
    int _t1319_l1338; 
    float _t1323_l1338; 
    int _t1313_l1341; 
    int i_l1338; 
    int j_l1338; 
    int _t1312_l1338; 
    float _t1333_l1338; 
    int _t1311_l1338; 
    float _t1327_l1338; 
    int _t1325_l1338; 
    int _t1307_l1338; 
    int _t1312_l1341; 
    float _t1332_l1338; 
    _t1307_l1341 = 0; 
    i_l1341 = _t1307_l1341; 
    while (i_l1341 < 4000) {
        _t1311_l1341 = i_l1341; 
        _t1311_l1338 = _t1311_l1341; 
        _t1307_l1338 = 0; 
        q[_t1311_l1338] = _t1307_l1338; 
        j_l1338 = _t1307_l1338; 
        i_l1338 = _t1311_l1338; 
        while (j_l1338 < 4000) {
            _t1317_l1338 = j_l1338; 
            _t1312_l1338 = 1; 
            _t1325_l1338 = _t1317_l1338 + _t1312_l1338; 
            _t1329_l1338 = p[_t1325_l1338]; 
            _t1311_l1338 = i_l1338; 
            _t1327_l1338 = A[_t1311_l1338][_t1325_l1338]; 
            _t1330_l1338 = _t1327_l1338 * _t1329_l1338; 
            _t1332_l1338 = q[_t1311_l1338]; 
            _t1323_l1338 = p[_t1317_l1338]; 
            _t1321_l1338 = A[_t1311_l1338][_t1317_l1338]; 
            _t1324_l1338 = _t1321_l1338 * _t1323_l1338; 
            _t1331_l1338 = _t1324_l1338 + _t1330_l1338; 
            _t1333_l1338 = _t1331_l1338 + _t1332_l1338; 
            q[_t1311_l1338] = _t1333_l1338; 
            _t1318_l1338 = 2; 
            _t1319_l1338 = _t1317_l1338 + _t1318_l1338; 
            j_l1338 = _t1319_l1338; 
            i_l1338 = _t1311_l1338;
        } 
        _t1312_l1341 = 1; 
        _t1313_l1341 = _t1311_l1341 + _t1312_l1341; 
        i_l1341 = _t1313_l1341;
    }
}
"
445,5,0.0008866787538863719,160044000,"void kernel_bicg(float A[4000][4000], float s[4000], float q[4000], float p[4000], float r[4000]) {
    #pragma soap input float A[4000][4000] = [0.0, 1.0], float s[4000] = [0.0, 1.0], float q[4000] = 0, float p[4000] = [0.0, 1.0], float r[4000] = [0.0, 1.0] 
    #pragma soap output q 
    float _t1363_l1368; 
    float _t1362_l1368; 
    float _t1361_l1368; 
    int _t1355_l1368; 
    int _t1351_l1371; 
    float _t1359_l1368; 
    int _t1349_l1368; 
    int i_l1368; 
    int j_l1368; 
    int _t1350_l1371; 
    int _t1345_l1368; 
    int _t1345_l1371; 
    float _t1357_l1368; 
    int i_l1371; 
    int _t1356_l1368; 
    int _t1349_l1371; 
    int _t1350_l1368; 
    _t1345_l1371 = 0; 
    i_l1371 = _t1345_l1371; 
    while (i_l1371 < 4000) {
        _t1349_l1371 = i_l1371; 
        _t1349_l1368 = _t1349_l1371; 
        _t1345_l1368 = 0; 
        q[_t1349_l1368] = _t1345_l1368; 
        j_l1368 = _t1345_l1368; 
        i_l1368 = _t1349_l1368; 
        while (j_l1368 < 4000) {
            _t1355_l1368 = j_l1368; 
            _t1361_l1368 = p[_t1355_l1368]; 
            _t1349_l1368 = i_l1368; 
            _t1359_l1368 = A[_t1349_l1368][_t1355_l1368]; 
            _t1362_l1368 = _t1359_l1368 * _t1361_l1368; 
            _t1357_l1368 = q[_t1349_l1368]; 
            _t1363_l1368 = _t1357_l1368 + _t1362_l1368; 
            _t1350_l1368 = 1; 
            q[_t1349_l1368] = _t1363_l1368; 
            _t1356_l1368 = _t1355_l1368 + _t1350_l1368; 
            j_l1368 = _t1356_l1368; 
            i_l1368 = _t1349_l1368;
        } 
        _t1350_l1371 = 1; 
        _t1351_l1371 = _t1349_l1371 + _t1350_l1371; 
        i_l1371 = _t1351_l1371;
    }
}
"
