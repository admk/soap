lut,dsp,error,latency,expression
477,5,6.314014171948656e-05,20951041,"#define loop 1024
#define n 1024

#pragma soap input \
    float x[n] = [0.0, 1.0][0, 0], \
    float y[n] = [0.0, 1.0][0, 0], \
    float z[n] = [0.0, 1.0][0, 0]
#pragma soap output x

int l; int i;

for ( l=1 ; l<=loop ; l++ ) {
    for ( i=1 ; i<n ; i++ ) {
        x[i] = z[i]*( y[i] - x[i-1] );
    }
}

// vim: ft=c
"
894,5,5.939549009781331e-05,6179840,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    float _t67_l79; 
    int _t12_l79; 
    float _t68_l79; 
    float _t87_l111; 
    float _t94_l111; 
    float _t18_l79; 
    float _t106_l111; 
    float _t88_l111; 
    float _t104_l111; 
    float _t43_l79; 
    float _t96_l111; 
    float _t84_l111; 
    float _t97_l111; 
    float _t21_l79; 
    float _t52_l79; 
    int _t63_l79; 
    float _t30_l79; 
    float _t42_l79; 
    float _t33_l79; 
    float _t54_l79; 
    float _t101_l111; 
    int _t37_l79; 
    float _t93_l111; 
    int _t82_l111; 
    float _t60_l79; 
    float _t58_l79; 
    float _t55_l79; 
    float _t41_l79; 
    float _t50_l79; 
    float _t86_l111; 
    float _t56_l79; 
    float _t85_l111; 
    int _t10_l79; 
    float _t34_l79; 
    float _t71_l79; 
    float _t32_l79; 
    int _t90_l111; 
    float _t14_l79; 
    int _t2_l111; 
    float _t15_l79; 
    float _t73_l79; 
    float _t45_l79; 
    float _t102_l111; 
    int _t77_l111; 
    float _t39_l79; 
    float _t81_l111; 
    float _t28_l79; 
    int _t47_l79; 
    float _t70_l79; 
    float _t26_l79; 
    float _t20_l79; 
    float _t57_l79; 
    int _t2_l79; 
    int _t99_l111; 
    float _t59_l79; 
    int _t8_l111; 
    float _t25_l79; 
    float _t69_l79; 
    int _t16_l79; 
    float _t95_l111; 
    int _t62_l79; 
    float _t53_l79; 
    float _t31_l79; 
    float _t65_l79; 
    int _t23_l79; 
    float _t29_l79; 
    int l_l111; 
    float _t66_l79; 
    float _t27_l79; 
    float _t74_l79; 
    float _t51_l79; 
    float _t40_l79; 
    int _t7_l111; 
    float _t105_l111; 
    float _t44_l79; 
    int _t11_l79; 
    float _t103_l111; 
    int _t36_l79; 
    float _t72_l79; 
    int _t48_l79; 
    float _t92_l111; 
    float _t19_l79; 
    int i_l79; 
    _t2_l111 = 1; 
    l_l111 = _t2_l111; 
    while (l_l111 <= 1024) {
        _t2_l111 = 1; 
        _t7_l111 = l_l111; 
        _t8_l111 = _t7_l111 + _t2_l111; 
        l_l111 = _t8_l111; 
        _t90_l111 = 1022; 
        _t82_l111 = 1020; 
        _t2_l79 = _t2_l111; 
        i_l79 = _t2_l79; 
        while (i_l79 < 1021) {
            _t47_l79 = 3; 
            _t10_l79 = i_l79; 
            _t2_l79 = 1; 
            _t23_l79 = _t10_l79 + _t2_l79; 
            _t27_l79 = y[_t23_l79]; 
            _t15_l79 = y[_t10_l79]; 
            _t14_l79 = z[_t10_l79]; 
            _t25_l79 = _t15_l79 * _t14_l79; 
            _t26_l79 = -_t25_l79; 
            _t28_l79 = _t26_l79 + _t27_l79; 
            _t29_l79 = z[_t23_l79]; 
            _t30_l79 = _t28_l79 * _t29_l79; 
            _t39_l79 = -_t30_l79; 
            _t36_l79 = 2; 
            _t37_l79 = _t36_l79 + _t10_l79; 
            _t40_l79 = y[_t37_l79]; 
            _t41_l79 = _t40_l79 + _t39_l79; 
            _t44_l79 = z[_t37_l79]; 
            _t50_l79 = -_t44_l79; 
            _t51_l79 = _t41_l79 * _t50_l79; 
            _t48_l79 = _t47_l79 + _t10_l79; 
            _t52_l79 = y[_t48_l79]; 
            _t53_l79 = _t51_l79 + _t52_l79; 
            _t54_l79 = z[_t48_l79]; 
            _t66_l79 = -_t54_l79; 
            _t67_l79 = _t53_l79 * _t66_l79; 
            _t16_l79 = _t10_l79 - _t2_l79; 
            _t18_l79 = x[_t16_l79]; 
            _t19_l79 = -_t18_l79; 
            _t20_l79 = _t15_l79 + _t19_l79; 
            _t31_l79 = -_t14_l79; 
            _t32_l79 = _t31_l79 * _t29_l79; 
            _t33_l79 = _t32_l79 * _t19_l79; 
            _t34_l79 = _t30_l79 + _t33_l79; 
            _t56_l79 = _t32_l79 * _t50_l79; 
            _t57_l79 = _t56_l79 * _t54_l79; 
            _t71_l79 = -_t57_l79; 
            _t62_l79 = 4; 
            _t63_l79 = _t62_l79 + _t10_l79; 
            _t69_l79 = z[_t63_l79]; 
            _t72_l79 = _t71_l79 * _t69_l79; 
            _t42_l79 = -_t33_l79; 
            _t43_l79 = _t41_l79 + _t42_l79; 
            _t65_l79 = y[_t63_l79]; 
            _t68_l79 = _t65_l79 + _t67_l79; 
            _t58_l79 = -_t19_l79; 
            _t21_l79 = _t14_l79 * _t20_l79; 
            x[_t10_l79] = _t21_l79; 
            x[_t23_l79] = _t34_l79; 
            _t11_l79 = 5; 
            _t12_l79 = _t10_l79 + _t11_l79; 
            i_l79 = _t12_l79; 
            _t73_l79 = _t72_l79 * _t58_l79; 
            _t45_l79 = _t43_l79 * _t44_l79; 
            _t59_l79 = _t57_l79 * _t58_l79; 
            _t55_l79 = _t53_l79 * _t54_l79; 
            _t60_l79 = _t55_l79 + _t59_l79; 
            _t70_l79 = _t68_l79 * _t69_l79; 
            _t74_l79 = _t70_l79 + _t73_l79; 
            x[_t37_l79] = _t45_l79; 
            x[_t48_l79] = _t60_l79; 
            x[_t63_l79] = _t74_l79;
        } 
        _t84_l111 = x[_t82_l111]; 
        _t77_l111 = 1021; 
        _t87_l111 = z[_t77_l111]; 
        _t81_l111 = y[_t77_l111]; 
        _t85_l111 = -_t84_l111; 
        _t86_l111 = _t81_l111 + _t85_l111; 
        _t88_l111 = _t86_l111 * _t87_l111; 
        x[_t77_l111] = _t88_l111; 
        _t94_l111 = x[_t77_l111]; 
        _t95_l111 = -_t94_l111; 
        _t93_l111 = y[_t90_l111]; 
        _t96_l111 = _t93_l111 + _t95_l111; 
        _t92_l111 = z[_t90_l111]; 
        _t97_l111 = _t92_l111 * _t96_l111; 
        x[_t90_l111] = _t97_l111; 
        _t103_l111 = x[_t90_l111]; 
        _t104_l111 = -_t103_l111; 
        _t99_l111 = 1023; 
        _t102_l111 = y[_t99_l111]; 
        _t105_l111 = _t102_l111 + _t104_l111; 
        _t101_l111 = z[_t99_l111]; 
        _t106_l111 = _t101_l111 * _t105_l111; 
        x[_t99_l111] = _t106_l111;
    }
}
"
655,5,5.034058267483488e-05,11872277,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    float _t127_l163; 
    int _t114_l166; 
    float _t146_l163; 
    float _t151_l163; 
    int _t135_l163; 
    float _t130_l163; 
    float _t153_l163; 
    float _t131_l163; 
    float _t140_l163; 
    float _t142_l163; 
    int i_l163; 
    float _t138_l163; 
    int l_l166; 
    float _t154_l163; 
    int _t119_l166; 
    int _t148_l163; 
    float _t156_l163; 
    int _t120_l166; 
    float _t145_l163; 
    float _t141_l163; 
    int _t149_l163; 
    float _t144_l163; 
    float _t137_l163; 
    float _t139_l163; 
    float _t155_l163; 
    float _t143_l163; 
    float _t157_l163; 
    float _t126_l163; 
    float _t158_l163; 
    float _t152_l163; 
    int _t128_l163; 
    float _t132_l163; 
    float _t133_l163; 
    int _t123_l163; 
    int _t114_l163; 
    int _t122_l163; 
    int _t124_l163; 
    _t114_l166 = 1; 
    l_l166 = _t114_l166; 
    while (l_l166 <= 1024) {
        _t114_l166 = 1; 
        _t119_l166 = l_l166; 
        _t120_l166 = _t119_l166 + _t114_l166; 
        l_l166 = _t120_l166; 
        _t114_l163 = _t114_l166; 
        i_l163 = _t114_l163; 
        while (i_l163 < 1024) {
            _t123_l163 = 3; 
            _t122_l163 = i_l163; 
            _t114_l163 = 1; 
            _t128_l163 = _t122_l163 - _t114_l163; 
            _t127_l163 = y[_t122_l163]; 
            _t126_l163 = z[_t122_l163]; 
            _t140_l163 = -_t126_l163; 
            _t135_l163 = _t122_l163 + _t114_l163; 
            _t138_l163 = z[_t135_l163]; 
            _t141_l163 = _t140_l163 * _t138_l163; 
            _t142_l163 = _t127_l163 * _t141_l163; 
            _t148_l163 = 2; 
            _t149_l163 = _t148_l163 + _t122_l163; 
            _t157_l163 = z[_t149_l163]; 
            _t124_l163 = _t122_l163 + _t123_l163; 
            _t130_l163 = x[_t128_l163]; 
            _t131_l163 = -_t130_l163; 
            _t144_l163 = _t131_l163 * _t138_l163; 
            _t137_l163 = y[_t135_l163]; 
            _t139_l163 = _t137_l163 * _t138_l163; 
            _t143_l163 = _t139_l163 + _t142_l163; 
            _t151_l163 = -_t143_l163; 
            _t152_l163 = y[_t149_l163]; 
            _t153_l163 = _t151_l163 + _t152_l163; 
            _t132_l163 = _t127_l163 + _t131_l163; 
            _t133_l163 = _t126_l163 * _t132_l163; 
            x[_t122_l163] = _t133_l163; 
            _t145_l163 = _t144_l163 * _t140_l163; 
            _t154_l163 = -_t140_l163; 
            _t155_l163 = _t144_l163 * _t154_l163; 
            _t156_l163 = _t153_l163 + _t155_l163; 
            _t158_l163 = _t156_l163 * _t157_l163; 
            _t146_l163 = _t143_l163 + _t145_l163; 
            x[_t135_l163] = _t146_l163; 
            x[_t149_l163] = _t158_l163; 
            i_l163 = _t124_l163;
        }
    }
}
"
478,5,6.314014171948656e-05,20951041,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    int l_l195; 
    float _t187_l192; 
    int _t178_l192; 
    int _t174_l195; 
    int i_l192; 
    float _t186_l192; 
    float _t180_l192; 
    int _t177_l192; 
    float _t185_l192; 
    float _t181_l192; 
    int _t169_l195; 
    float _t184_l192; 
    int _t175_l195; 
    int _t182_l192; 
    int _t169_l192; 
    _t169_l195 = 1; 
    l_l195 = _t169_l195; 
    while (l_l195 <= 1024) {
        _t169_l195 = 1; 
        _t174_l195 = l_l195; 
        _t175_l195 = _t174_l195 + _t169_l195; 
        l_l195 = _t175_l195; 
        _t169_l192 = _t169_l195; 
        i_l192 = _t169_l192; 
        while (i_l192 < 1024) {
            _t177_l192 = i_l192; 
            _t180_l192 = z[_t177_l192]; 
            _t169_l192 = 1; 
            _t182_l192 = _t177_l192 - _t169_l192; 
            _t184_l192 = x[_t182_l192]; 
            _t185_l192 = -_t184_l192; 
            _t181_l192 = y[_t177_l192]; 
            _t186_l192 = _t181_l192 + _t185_l192; 
            _t187_l192 = _t180_l192 * _t186_l192; 
            _t178_l192 = _t177_l192 + _t169_l192; 
            i_l192 = _t178_l192; 
            x[_t177_l192] = _t187_l192;
        }
    }
}
"
1234,7,5.2613395382650197e-05,7258112,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    float _t263_l288; 
    float _t296_l319; 
    int _t286_l319; 
    float _t250_l288; 
    float _t227_l288; 
    int _t308_l319; 
    int _t206_l288; 
    float _t254_l288; 
    float _t265_l288; 
    int _t247_l288; 
    float _t303_l319; 
    float _t223_l288; 
    float _t297_l319; 
    float _t293_l319; 
    float _t241_l288; 
    float _t280_l288; 
    float _t211_l288; 
    float _t269_l288; 
    int _t274_l288; 
    float _t210_l288; 
    float _t255_l288; 
    float _t271_l288; 
    float _t290_l319; 
    int _t299_l319; 
    float _t310_l319; 
    float _t311_l319; 
    int _t273_l288; 
    float _t243_l288; 
    float _t244_l288; 
    int _t260_l288; 
    float _t283_l288; 
    float _t304_l319; 
    int _t229_l288; 
    float _t262_l288; 
    int _t198_l319; 
    float _t277_l288; 
    float _t276_l288; 
    float _t236_l288; 
    float _t266_l288; 
    float _t245_l288; 
    float _t313_l319; 
    float _t264_l288; 
    int _t203_l319; 
    float _t252_l288; 
    float _t294_l319; 
    float _t305_l319; 
    float _t253_l288; 
    float _t302_l319; 
    int _t219_l288; 
    float _t226_l288; 
    float _t257_l288; 
    int l_l319; 
    float _t282_l288; 
    float _t232_l288; 
    int i_l288; 
    float _t312_l319; 
    float _t301_l319; 
    int _t207_l288; 
    float _t251_l288; 
    int _t198_l288; 
    float _t270_l288; 
    int _t259_l288; 
    int _t248_l288; 
    float _t242_l288; 
    float _t214_l288; 
    float _t267_l288; 
    float _t314_l319; 
    float _t278_l288; 
    int _t291_l319; 
    int _t208_l288; 
    float _t222_l288; 
    int _t230_l288; 
    float _t234_l288; 
    float _t295_l319; 
    float _t235_l288; 
    float _t256_l288; 
    float _t281_l288; 
    int _t212_l288; 
    float _t217_l288; 
    float _t240_l288; 
    float _t268_l288; 
    float _t237_l288; 
    float _t216_l288; 
    float _t306_l319; 
    float _t238_l288; 
    int _t204_l319; 
    float _t239_l288; 
    float _t224_l288; 
    float _t225_l288; 
    float _t221_l288; 
    float _t215_l288; 
    float _t279_l288; 
    float _t233_l288; 
    _t198_l319 = 1; 
    l_l319 = _t198_l319; 
    while (l_l319 <= 1024) {
        _t203_l319 = l_l319; 
        _t198_l319 = 1; 
        _t204_l319 = _t203_l319 + _t198_l319; 
        l_l319 = _t204_l319; 
        _t286_l319 = 1021; 
        _t290_l319 = y[_t286_l319]; 
        _t291_l319 = 1020; 
        _t198_l288 = _t198_l319; 
        i_l288 = _t198_l288; 
        while (i_l288 < 1021) {
            _t247_l288 = 3; 
            _t206_l288 = i_l288; 
            _t248_l288 = _t247_l288 + _t206_l288; 
            _t251_l288 = y[_t248_l288]; 
            _t210_l288 = z[_t206_l288]; 
            _t211_l288 = y[_t206_l288]; 
            _t198_l288 = 1; 
            _t212_l288 = _t206_l288 - _t198_l288; 
            _t214_l288 = x[_t212_l288]; 
            _t215_l288 = -_t214_l288; 
            _t216_l288 = _t211_l288 + _t215_l288; 
            _t217_l288 = _t210_l288 * _t216_l288; 
            x[_t206_l288] = _t217_l288; 
            _t259_l288 = 4; 
            _t260_l288 = _t259_l288 + _t206_l288; 
            _t266_l288 = z[_t260_l288]; 
            _t253_l288 = -_t215_l288; 
            _t268_l288 = _t253_l288 * _t266_l288; 
            _t229_l288 = 2; 
            _t230_l288 = _t229_l288 + _t206_l288; 
            _t235_l288 = z[_t230_l288]; 
            _t232_l288 = -_t210_l288; 
            _t219_l288 = _t206_l288 + _t198_l288; 
            _t221_l288 = z[_t219_l288]; 
            _t233_l288 = _t232_l288 * _t221_l288; 
            _t234_l288 = -_t233_l288; 
            _t236_l288 = _t234_l288 * _t235_l288; 
            _t256_l288 = z[_t248_l288]; 
            _t262_l288 = -_t256_l288; 
            _t269_l288 = _t236_l288 * _t262_l288; 
            _t270_l288 = _t268_l288 * _t269_l288; 
            _t222_l288 = y[_t219_l288]; 
            _t238_l288 = _t222_l288 * _t221_l288; 
            _t239_l288 = -_t238_l288; 
            _t240_l288 = y[_t230_l288]; 
            _t241_l288 = _t239_l288 + _t240_l288; 
            _t242_l288 = _t241_l288 * _t235_l288; 
            _t237_l288 = _t211_l288 * _t236_l288; 
            _t243_l288 = _t237_l288 + _t242_l288; 
            _t250_l288 = -_t243_l288; 
            _t252_l288 = _t250_l288 + _t251_l288; 
            _t223_l288 = _t211_l288 - _t214_l288; 
            _t254_l288 = _t253_l288 * _t236_l288; 
            _t255_l288 = _t252_l288 + _t254_l288; 
            _t257_l288 = _t255_l288 * _t256_l288; 
            _t224_l288 = _t210_l288 * _t223_l288; 
            _t225_l288 = -_t224_l288; 
            _t226_l288 = _t222_l288 + _t225_l288; 
            _t227_l288 = _t221_l288 * _t226_l288; 
            x[_t219_l288] = _t227_l288; 
            _t244_l288 = _t215_l288 * _t236_l288; 
            _t245_l288 = _t243_l288 + _t244_l288; 
            x[_t230_l288] = _t245_l288; 
            x[_t248_l288] = _t257_l288; 
            _t263_l288 = _t252_l288 * _t262_l288; 
            _t264_l288 = y[_t260_l288]; 
            _t265_l288 = _t263_l288 + _t264_l288; 
            _t267_l288 = _t265_l288 * _t266_l288; 
            _t271_l288 = _t267_l288 + _t270_l288; 
            x[_t260_l288] = _t271_l288; 
            _t273_l288 = 5; 
            _t274_l288 = _t273_l288 + _t206_l288; 
            _t276_l288 = y[_t274_l288]; 
            _t277_l288 = _t276_l288 - _t267_l288; 
            _t278_l288 = z[_t274_l288]; 
            _t207_l288 = 6; 
            _t208_l288 = _t206_l288 + _t207_l288; 
            _t280_l288 = -_t268_l288; 
            _t281_l288 = _t278_l288 * _t280_l288; 
            _t282_l288 = _t281_l288 * _t269_l288; 
            _t279_l288 = _t277_l288 * _t278_l288; 
            _t283_l288 = _t279_l288 + _t282_l288; 
            i_l288 = _t208_l288; 
            x[_t274_l288] = _t283_l288;
        } 
        _t293_l319 = x[_t291_l319]; 
        _t294_l319 = -_t293_l319; 
        _t295_l319 = _t290_l319 + _t294_l319; 
        _t296_l319 = z[_t286_l319]; 
        _t297_l319 = _t295_l319 * _t296_l319; 
        x[_t286_l319] = _t297_l319; 
        _t303_l319 = x[_t286_l319]; 
        _t308_l319 = 1023; 
        _t311_l319 = y[_t308_l319]; 
        _t299_l319 = 1022; 
        _t304_l319 = -_t303_l319; 
        _t302_l319 = y[_t299_l319]; 
        _t305_l319 = _t302_l319 + _t304_l319; 
        _t301_l319 = z[_t299_l319]; 
        _t306_l319 = _t301_l319 * _t305_l319; 
        x[_t299_l319] = _t306_l319; 
        _t312_l319 = x[_t299_l319]; 
        _t313_l319 = _t311_l319 - _t312_l319; 
        _t310_l319 = z[_t308_l319]; 
        _t314_l319 = _t310_l319 * _t313_l319; 
        x[_t308_l319] = _t314_l319;
    }
}
"
1234,7,5.501161649590358e-05,6046720,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    float _t387_l412; 
    int _t331_l412; 
    int l_l443; 
    int _t395_l412; 
    int _t355_l412; 
    float _t403_l412; 
    float _t418_l443; 
    float _t349_l412; 
    float _t367_l412; 
    int _t354_l412; 
    float _t435_l443; 
    float _t420_l443; 
    int _t322_l443; 
    float _t348_l412; 
    float _t405_l412; 
    float _t366_l412; 
    int _t330_l412; 
    int _t328_l443; 
    float _t374_l412; 
    float _t429_l443; 
    float _t390_l412; 
    int _t382_l412; 
    float _t357_l412; 
    float _t365_l412; 
    float _t388_l412; 
    float _t341_l412; 
    float _t378_l412; 
    float _t400_l412; 
    int _t381_l412; 
    float _t339_l412; 
    float _t377_l412; 
    float _t350_l412; 
    int _t432_l443; 
    float _t347_l412; 
    float _t372_l412; 
    int _t343_l412; 
    float _t359_l412; 
    float _t352_l412; 
    float _t362_l412; 
    float _t364_l412; 
    int _t396_l412; 
    float _t417_l443; 
    float _t335_l412; 
    float _t425_l443; 
    float _t404_l412; 
    int _t332_l412; 
    float _t391_l412; 
    float _t430_l443; 
    int _t369_l412; 
    float _t373_l412; 
    float _t389_l412; 
    float _t398_l412; 
    float _t346_l412; 
    int _t322_l412; 
    float _t375_l412; 
    float _t351_l412; 
    float _t334_l412; 
    float _t379_l412; 
    int _t336_l412; 
    float _t340_l412; 
    float _t399_l412; 
    float _t392_l412; 
    float _t345_l412; 
    int _t327_l443; 
    float _t414_l443; 
    int _t410_l443; 
    float _t434_l443; 
    float _t419_l443; 
    float _t406_l412; 
    int _t415_l443; 
    float _t360_l412; 
    int _t423_l443; 
    float _t376_l412; 
    float _t358_l412; 
    float _t438_l443; 
    float _t363_l412; 
    float _t338_l412; 
    int i_l412; 
    float _t393_l412; 
    float _t384_l412; 
    float _t428_l443; 
    float _t385_l412; 
    float _t436_l443; 
    float _t421_l443; 
    float _t407_l412; 
    float _t402_l412; 
    float _t427_l443; 
    float _t386_l412; 
    float _t426_l443; 
    float _t361_l412; 
    float _t401_l412; 
    int _t370_l412; 
    float _t437_l443; 
    _t322_l443 = 1; 
    l_l443 = _t322_l443; 
    while (l_l443 <= 1024) {
        _t322_l443 = 1; 
        _t327_l443 = l_l443; 
        _t328_l443 = _t327_l443 + _t322_l443; 
        l_l443 = _t328_l443; 
        _t410_l443 = 1021; 
        _t322_l412 = _t322_l443; 
        i_l412 = _t322_l412; 
        while (i_l412 < 1021) {
            _t331_l412 = 6; 
            _t330_l412 = i_l412; 
            _t332_l412 = _t330_l412 + _t331_l412; 
            _t369_l412 = 3; 
            _t370_l412 = _t369_l412 + _t330_l412; 
            _t378_l412 = z[_t370_l412]; 
            _t384_l412 = -_t378_l412; 
            _t322_l412 = 1; 
            _t343_l412 = _t330_l412 + _t322_l412; 
            _t345_l412 = y[_t343_l412]; 
            _t346_l412 = z[_t343_l412]; 
            _t347_l412 = _t345_l412 * _t346_l412; 
            _t361_l412 = -_t347_l412; 
            _t354_l412 = 2; 
            _t355_l412 = _t354_l412 + _t330_l412; 
            _t362_l412 = y[_t355_l412]; 
            _t363_l412 = _t361_l412 + _t362_l412; 
            _t358_l412 = z[_t355_l412]; 
            _t364_l412 = _t363_l412 * _t358_l412; 
            _t334_l412 = z[_t330_l412]; 
            _t348_l412 = -_t334_l412; 
            _t349_l412 = _t348_l412 * _t346_l412; 
            _t357_l412 = -_t349_l412; 
            _t359_l412 = _t357_l412 * _t358_l412; 
            _t335_l412 = y[_t330_l412]; 
            _t360_l412 = _t335_l412 * _t359_l412; 
            _t365_l412 = _t360_l412 + _t364_l412; 
            _t372_l412 = -_t365_l412; 
            _t373_l412 = y[_t370_l412]; 
            _t374_l412 = _t372_l412 + _t373_l412; 
            _t385_l412 = _t374_l412 * _t384_l412; 
            _t336_l412 = _t330_l412 - _t322_l412; 
            _t338_l412 = x[_t336_l412]; 
            _t350_l412 = _t335_l412 - _t338_l412; 
            _t351_l412 = _t349_l412 * _t350_l412; 
            _t352_l412 = _t347_l412 + _t351_l412; 
            _t390_l412 = _t359_l412 * _t384_l412; 
            _t403_l412 = -_t390_l412; 
            _t381_l412 = 4; 
            _t382_l412 = _t381_l412 + _t330_l412; 
            _t388_l412 = z[_t382_l412]; 
            _t404_l412 = _t388_l412 * _t403_l412; 
            _t339_l412 = -_t338_l412; 
            _t375_l412 = -_t339_l412; 
            _t340_l412 = _t335_l412 + _t339_l412; 
            _t341_l412 = _t334_l412 * _t340_l412; 
            x[_t330_l412] = _t341_l412; 
            _t376_l412 = _t375_l412 * _t359_l412; 
            _t377_l412 = _t374_l412 + _t376_l412; 
            _t379_l412 = _t377_l412 * _t378_l412; 
            x[_t343_l412] = _t352_l412; 
            _t366_l412 = _t339_l412 * _t359_l412; 
            _t367_l412 = _t365_l412 + _t366_l412; 
            x[_t355_l412] = _t367_l412; 
            x[_t370_l412] = _t379_l412; 
            _t391_l412 = _t388_l412 * _t390_l412; 
            _t392_l412 = _t391_l412 * _t375_l412; 
            _t386_l412 = y[_t382_l412]; 
            _t387_l412 = _t385_l412 + _t386_l412; 
            _t389_l412 = _t387_l412 * _t388_l412; 
            _t393_l412 = _t389_l412 + _t392_l412; 
            x[_t382_l412] = _t393_l412; 
            _t399_l412 = -_t389_l412; 
            _t395_l412 = 5; 
            _t396_l412 = _t395_l412 + _t330_l412; 
            _t401_l412 = z[_t396_l412]; 
            _t398_l412 = y[_t396_l412]; 
            _t400_l412 = _t398_l412 + _t399_l412; 
            _t402_l412 = _t400_l412 * _t401_l412; 
            i_l412 = _t332_l412; 
            _t405_l412 = _t401_l412 * _t404_l412; 
            _t406_l412 = _t405_l412 * _t375_l412; 
            _t407_l412 = _t402_l412 + _t406_l412; 
            x[_t396_l412] = _t407_l412;
        } 
        _t415_l443 = 1020; 
        _t417_l443 = x[_t415_l443]; 
        _t418_l443 = -_t417_l443; 
        _t414_l443 = y[_t410_l443]; 
        _t419_l443 = _t414_l443 + _t418_l443; 
        _t420_l443 = z[_t410_l443]; 
        _t421_l443 = _t419_l443 * _t420_l443; 
        x[_t410_l443] = _t421_l443; 
        _t427_l443 = x[_t410_l443]; 
        _t423_l443 = 1022; 
        _t425_l443 = z[_t423_l443]; 
        _t428_l443 = -_t427_l443; 
        _t426_l443 = y[_t423_l443]; 
        _t429_l443 = _t426_l443 + _t428_l443; 
        _t430_l443 = _t425_l443 * _t429_l443; 
        x[_t423_l443] = _t430_l443; 
        _t432_l443 = 1023; 
        _t435_l443 = y[_t432_l443]; 
        _t436_l443 = x[_t423_l443]; 
        _t437_l443 = _t435_l443 - _t436_l443; 
        _t434_l443 = z[_t432_l443]; 
        _t438_l443 = _t434_l443 * _t437_l443; 
        x[_t432_l443] = _t438_l443;
    }
}
"
655,5,5.7828776334645227e-05,7682081,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    float _t469_l495; 
    int _t480_l495; 
    int _t446_l495; 
    float _t489_l495; 
    float _t473_l495; 
    float _t475_l495; 
    float _t484_l495; 
    int _t460_l495; 
    float _t482_l495; 
    int _t467_l495; 
    float _t487_l495; 
    float _t458_l495; 
    float _t471_l495; 
    int _t446_l498; 
    float _t486_l495; 
    int _t454_l495; 
    float _t483_l495; 
    float _t462_l495; 
    float _t485_l495; 
    float _t464_l495; 
    float _t477_l495; 
    float _t476_l495; 
    int _t455_l495; 
    float _t465_l495; 
    float _t470_l495; 
    int _t456_l495; 
    float _t459_l495; 
    int l_l498; 
    int _t479_l495; 
    int _t452_l498; 
    float _t490_l495; 
    float _t488_l495; 
    int _t451_l498; 
    int i_l495; 
    float _t472_l495; 
    float _t474_l495; 
    float _t463_l495; 
    _t446_l498 = 1; 
    l_l498 = _t446_l498; 
    while (l_l498 <= 1024) {
        _t451_l498 = l_l498; 
        _t446_l498 = 1; 
        _t452_l498 = _t451_l498 + _t446_l498; 
        l_l498 = _t452_l498; 
        _t446_l495 = _t446_l498; 
        i_l495 = _t446_l495; 
        while (i_l495 < 1024) {
            _t446_l495 = 1; 
            _t454_l495 = i_l495; 
            _t460_l495 = _t454_l495 - _t446_l495; 
            _t467_l495 = _t454_l495 + _t446_l495; 
            _t473_l495 = y[_t467_l495]; 
            _t470_l495 = z[_t467_l495]; 
            _t474_l495 = _t473_l495 * _t470_l495; 
            _t479_l495 = 2; 
            _t480_l495 = _t479_l495 + _t454_l495; 
            _t462_l495 = x[_t460_l495]; 
            _t463_l495 = -_t462_l495; 
            _t458_l495 = z[_t454_l495]; 
            _t469_l495 = -_t458_l495; 
            _t471_l495 = _t469_l495 * _t470_l495; 
            _t487_l495 = -_t471_l495; 
            _t485_l495 = z[_t480_l495]; 
            _t488_l495 = _t487_l495 * _t485_l495; 
            _t489_l495 = _t488_l495 * _t463_l495; 
            _t455_l495 = 3; 
            _t456_l495 = _t454_l495 + _t455_l495; 
            _t459_l495 = y[_t454_l495]; 
            _t464_l495 = _t459_l495 + _t463_l495; 
            _t465_l495 = _t458_l495 * _t464_l495; 
            x[_t454_l495] = _t465_l495; 
            _t472_l495 = _t459_l495 * _t471_l495; 
            _t475_l495 = _t474_l495 + _t472_l495; 
            _t476_l495 = _t463_l495 * _t471_l495; 
            _t483_l495 = y[_t480_l495]; 
            _t482_l495 = -_t475_l495; 
            _t484_l495 = _t482_l495 + _t483_l495; 
            _t486_l495 = _t484_l495 * _t485_l495; 
            _t490_l495 = _t486_l495 + _t489_l495; 
            _t477_l495 = _t475_l495 + _t476_l495; 
            x[_t467_l495] = _t477_l495; 
            x[_t480_l495] = _t490_l495; 
            i_l495 = _t456_l495;
        }
    }
}
"
1152,7,5.7467092119622976e-05,6387712,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    float _t519_l580; 
    float _t571_l580; 
    float _t557_l580; 
    float _t538_l580; 
    float _t547_l580; 
    float _t544_l580; 
    float _t529_l580; 
    float _t527_l580; 
    float _t582_l612; 
    int _t506_l612; 
    float _t573_l580; 
    float _t528_l580; 
    float _t537_l580; 
    float _t607_l612; 
    float _t558_l580; 
    float _t596_l612; 
    float _t553_l580; 
    int _t511_l580; 
    float _t543_l580; 
    int l_l612; 
    float _t568_l580; 
    float _t562_l580; 
    float _t567_l580; 
    float _t575_l580; 
    float _t593_l612; 
    float _t561_l580; 
    int _t583_l612; 
    float _t546_l580; 
    float _t560_l580; 
    int _t591_l612; 
    float _t520_l580; 
    float _t513_l580; 
    float _t526_l580; 
    float _t603_l612; 
    int _t600_l612; 
    float _t518_l580; 
    float _t541_l580; 
    float _t542_l580; 
    float _t536_l580; 
    float _t555_l580; 
    float _t589_l612; 
    float _t569_l580; 
    float _t559_l580; 
    float _t556_l580; 
    int _t507_l612; 
    int _t549_l580; 
    float _t572_l580; 
    float _t570_l580; 
    float _t517_l580; 
    int _t565_l580; 
    float _t602_l612; 
    int _t578_l612; 
    int _t522_l580; 
    float _t585_l612; 
    float _t514_l580; 
    int _t509_l580; 
    float _t574_l580; 
    int _t501_l612; 
    float _t604_l612; 
    int i_l580; 
    float _t545_l580; 
    float _t595_l612; 
    float _t598_l612; 
    int _t510_l580; 
    int _t515_l580; 
    float _t552_l580; 
    float _t594_l612; 
    float _t605_l612; 
    float _t540_l580; 
    int _t550_l580; 
    float _t525_l580; 
    float _t530_l580; 
    float _t524_l580; 
    float _t586_l612; 
    float _t597_l612; 
    float _t539_l580; 
    float _t554_l580; 
    float _t588_l612; 
    float _t587_l612; 
    int _t534_l580; 
    float _t606_l612; 
    int _t564_l580; 
    float _t531_l580; 
    int _t501_l580; 
    int _t533_l580; 
    _t501_l612 = 1; 
    l_l612 = _t501_l612; 
    while (l_l612 <= 1024) {
        _t506_l612 = l_l612; 
        _t501_l612 = 1; 
        _t507_l612 = _t506_l612 + _t501_l612; 
        l_l612 = _t507_l612; 
        _t578_l612 = 1021; 
        _t600_l612 = 1023; 
        _t602_l612 = z[_t600_l612]; 
        _t603_l612 = y[_t600_l612]; 
        _t501_l580 = _t501_l612; 
        i_l580 = _t501_l580; 
        while (i_l580 < 1021) {
            _t509_l580 = i_l580; 
            _t513_l580 = z[_t509_l580]; 
            _t549_l580 = 3; 
            _t550_l580 = _t549_l580 + _t509_l580; 
            _t556_l580 = z[_t550_l580]; 
            _t533_l580 = 2; 
            _t534_l580 = _t533_l580 + _t509_l580; 
            _t546_l580 = z[_t534_l580]; 
            _t552_l580 = -_t546_l580; 
            _t501_l580 = 1; 
            _t522_l580 = _t509_l580 + _t501_l580; 
            _t524_l580 = z[_t522_l580]; 
            _t528_l580 = -_t513_l580; 
            _t542_l580 = _t528_l580 * _t524_l580; 
            _t558_l580 = _t542_l580 * _t552_l580; 
            _t559_l580 = _t558_l580 * _t556_l580; 
            _t564_l580 = 4; 
            _t565_l580 = _t564_l580 + _t509_l580; 
            _t514_l580 = y[_t509_l580]; 
            _t526_l580 = _t514_l580 * _t513_l580; 
            _t515_l580 = _t509_l580 - _t501_l580; 
            _t517_l580 = x[_t515_l580]; 
            _t518_l580 = -_t517_l580; 
            _t529_l580 = _t518_l580 * _t528_l580; 
            _t525_l580 = y[_t522_l580]; 
            _t527_l580 = _t525_l580 - _t526_l580; 
            _t530_l580 = _t527_l580 + _t529_l580; 
            _t531_l580 = _t524_l580 * _t530_l580; 
            _t519_l580 = _t514_l580 + _t518_l580; 
            _t520_l580 = _t513_l580 * _t519_l580; 
            x[_t509_l580] = _t520_l580; 
            x[_t522_l580] = _t531_l580; 
            _t536_l580 = -_t526_l580; 
            _t537_l580 = _t536_l580 + _t525_l580; 
            _t538_l580 = _t537_l580 * _t524_l580; 
            _t539_l580 = -_t538_l580; 
            _t540_l580 = y[_t534_l580]; 
            _t541_l580 = _t540_l580 + _t539_l580; 
            _t553_l580 = _t541_l580 * _t552_l580; 
            _t554_l580 = y[_t550_l580]; 
            _t555_l580 = _t553_l580 + _t554_l580; 
            _t560_l580 = -_t518_l580; 
            _t561_l580 = _t559_l580 * _t560_l580; 
            _t569_l580 = -_t556_l580; 
            _t570_l580 = _t555_l580 * _t569_l580; 
            _t568_l580 = y[_t565_l580]; 
            _t571_l580 = _t568_l580 + _t570_l580; 
            _t572_l580 = -_t559_l580; 
            _t573_l580 = _t572_l580 * _t560_l580; 
            _t574_l580 = _t571_l580 + _t573_l580; 
            _t543_l580 = _t542_l580 * _t518_l580; 
            _t544_l580 = -_t543_l580; 
            _t545_l580 = _t541_l580 + _t544_l580; 
            _t547_l580 = _t545_l580 * _t546_l580; 
            x[_t534_l580] = _t547_l580; 
            _t557_l580 = _t555_l580 * _t556_l580; 
            _t562_l580 = _t557_l580 + _t561_l580; 
            x[_t550_l580] = _t562_l580; 
            _t567_l580 = z[_t565_l580]; 
            _t575_l580 = _t567_l580 * _t574_l580; 
            x[_t565_l580] = _t575_l580; 
            _t510_l580 = 5; 
            _t511_l580 = _t509_l580 + _t510_l580; 
            i_l580 = _t511_l580;
        } 
        _t583_l612 = 1020; 
        _t585_l612 = x[_t583_l612]; 
        _t586_l612 = -_t585_l612; 
        _t582_l612 = y[_t578_l612]; 
        _t587_l612 = _t582_l612 + _t586_l612; 
        _t588_l612 = z[_t578_l612]; 
        _t589_l612 = _t587_l612 * _t588_l612; 
        x[_t578_l612] = _t589_l612; 
        _t595_l612 = x[_t578_l612]; 
        _t591_l612 = 1022; 
        _t593_l612 = z[_t591_l612]; 
        _t596_l612 = -_t595_l612; 
        _t594_l612 = y[_t591_l612]; 
        _t597_l612 = _t594_l612 + _t596_l612; 
        _t598_l612 = _t593_l612 * _t597_l612; 
        x[_t591_l612] = _t598_l612; 
        _t604_l612 = x[_t591_l612]; 
        _t605_l612 = -_t604_l612; 
        _t606_l612 = _t603_l612 + _t605_l612; 
        _t607_l612 = _t602_l612 * _t606_l612; 
        x[_t600_l612] = _t607_l612;
    }
}
"
1161,7,5.586009137914516e-05,7219200,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    int _t679_l694; 
    float _t659_l694; 
    float _t677_l694; 
    float _t719_l726; 
    float _t672_l694; 
    float _t656_l694; 
    float _t651_l694; 
    float _t638_l694; 
    float _t687_l694; 
    float _t712_l726; 
    float _t721_l726; 
    float _t658_l694; 
    int _t705_l726; 
    int _t680_l694; 
    int _t648_l694; 
    int _t623_l694; 
    float _t718_l726; 
    int _t615_l726; 
    float _t642_l694; 
    float _t683_l694; 
    float _t702_l726; 
    float _t639_l694; 
    float _t671_l694; 
    float _t643_l694; 
    float _t688_l694; 
    int _t714_l726; 
    float _t660_l694; 
    int l_l726; 
    int _t629_l694; 
    float _t650_l694; 
    float _t632_l694; 
    float _t686_l694; 
    float _t655_l694; 
    float _t644_l694; 
    float _t707_l726; 
    float _t661_l694; 
    float _t701_l726; 
    float _t684_l694; 
    int _t621_l726; 
    int _t692_l726; 
    float _t669_l694; 
    float _t633_l694; 
    float _t682_l694; 
    float _t670_l694; 
    int _t615_l694; 
    float _t631_l694; 
    float _t628_l694; 
    int _t697_l726; 
    float _t703_l726; 
    float _t641_l694; 
    int _t620_l726; 
    float _t720_l726; 
    float _t674_l694; 
    int _t664_l694; 
    float _t657_l694; 
    float _t667_l694; 
    float _t627_l694; 
    int i_l694; 
    int _t636_l694; 
    float _t708_l726; 
    int _t625_l694; 
    float _t700_l726; 
    float _t652_l694; 
    float _t668_l694; 
    float _t676_l694; 
    float _t716_l726; 
    float _t717_l726; 
    float _t653_l694; 
    float _t710_l726; 
    int _t665_l694; 
    float _t675_l694; 
    float _t634_l694; 
    int _t624_l694; 
    float _t711_l726; 
    float _t685_l694; 
    float _t696_l726; 
    float _t645_l694; 
    float _t662_l694; 
    float _t699_l726; 
    float _t640_l694; 
    float _t709_l726; 
    float _t689_l694; 
    float _t673_l694; 
    float _t654_l694; 
    int _t647_l694; 
    _t615_l726 = 1; 
    l_l726 = _t615_l726; 
    while (l_l726 <= 1024) {
        _t620_l726 = l_l726; 
        _t615_l726 = 1; 
        _t621_l726 = _t620_l726 + _t615_l726; 
        l_l726 = _t621_l726; 
        _t697_l726 = 1020; 
        _t615_l694 = _t615_l726; 
        i_l694 = _t615_l694; 
        while (i_l694 < 1021) {
            _t623_l694 = i_l694; 
            _t615_l694 = 1; 
            _t629_l694 = _t623_l694 - _t615_l694; 
            _t631_l694 = x[_t629_l694]; 
            _t627_l694 = z[_t623_l694]; 
            _t628_l694 = y[_t623_l694]; 
            _t632_l694 = -_t631_l694; 
            _t633_l694 = _t628_l694 + _t632_l694; 
            _t634_l694 = _t627_l694 * _t633_l694; 
            x[_t623_l694] = _t634_l694; 
            _t636_l694 = _t623_l694 + _t615_l694; 
            _t639_l694 = y[_t636_l694]; 
            _t640_l694 = _t628_l694 * _t627_l694; 
            _t641_l694 = _t639_l694 - _t640_l694; 
            _t679_l694 = 4; 
            _t680_l694 = _t679_l694 + _t623_l694; 
            _t683_l694 = y[_t680_l694]; 
            _t664_l694 = 3; 
            _t665_l694 = _t664_l694 + _t623_l694; 
            _t671_l694 = z[_t665_l694]; 
            _t647_l694 = 2; 
            _t648_l694 = _t647_l694 + _t623_l694; 
            _t656_l694 = z[_t648_l694]; 
            _t667_l694 = -_t656_l694; 
            _t650_l694 = -_t640_l694; 
            _t651_l694 = _t650_l694 + _t639_l694; 
            _t638_l694 = z[_t636_l694]; 
            _t652_l694 = _t651_l694 * _t638_l694; 
            _t653_l694 = -_t652_l694; 
            _t654_l694 = y[_t648_l694]; 
            _t655_l694 = _t654_l694 + _t653_l694; 
            _t668_l694 = _t655_l694 * _t667_l694; 
            _t669_l694 = y[_t665_l694]; 
            _t670_l694 = _t668_l694 + _t669_l694; 
            _t672_l694 = _t670_l694 * _t671_l694; 
            _t682_l694 = -_t672_l694; 
            _t684_l694 = _t682_l694 + _t683_l694; 
            _t642_l694 = -_t627_l694; 
            _t674_l694 = _t642_l694 * _t638_l694; 
            _t675_l694 = _t674_l694 * _t667_l694; 
            _t659_l694 = -_t632_l694; 
            _t673_l694 = _t659_l694 * _t671_l694; 
            _t685_l694 = -_t673_l694; 
            _t686_l694 = _t685_l694 * _t675_l694; 
            _t687_l694 = _t684_l694 + _t686_l694; 
            _t660_l694 = _t642_l694 * _t659_l694; 
            _t688_l694 = z[_t680_l694]; 
            _t689_l694 = _t687_l694 * _t688_l694; 
            _t657_l694 = _t655_l694 * _t656_l694; 
            _t658_l694 = _t638_l694 * _t656_l694; 
            _t661_l694 = _t658_l694 * _t660_l694; 
            _t662_l694 = _t657_l694 + _t661_l694; 
            _t643_l694 = _t632_l694 * _t642_l694; 
            _t644_l694 = _t641_l694 + _t643_l694; 
            _t645_l694 = _t638_l694 * _t644_l694; 
            x[_t636_l694] = _t645_l694; 
            x[_t648_l694] = _t662_l694; 
            _t676_l694 = _t673_l694 * _t675_l694; 
            _t677_l694 = _t672_l694 + _t676_l694; 
            x[_t665_l694] = _t677_l694; 
            x[_t680_l694] = _t689_l694; 
            _t624_l694 = 5; 
            _t625_l694 = _t623_l694 + _t624_l694; 
            i_l694 = _t625_l694;
        } 
        _t699_l726 = x[_t697_l726]; 
        _t705_l726 = 1022; 
        _t714_l726 = 1023; 
        _t716_l726 = z[_t714_l726]; 
        _t707_l726 = z[_t705_l726]; 
        _t692_l726 = 1021; 
        _t708_l726 = y[_t705_l726]; 
        _t700_l726 = -_t699_l726; 
        _t696_l726 = y[_t692_l726]; 
        _t701_l726 = _t696_l726 + _t700_l726; 
        _t702_l726 = z[_t692_l726]; 
        _t703_l726 = _t701_l726 * _t702_l726; 
        x[_t692_l726] = _t703_l726; 
        _t709_l726 = x[_t692_l726]; 
        _t710_l726 = -_t709_l726; 
        _t711_l726 = _t708_l726 + _t710_l726; 
        _t712_l726 = _t707_l726 * _t711_l726; 
        x[_t705_l726] = _t712_l726; 
        _t718_l726 = x[_t705_l726]; 
        _t719_l726 = -_t718_l726; 
        _t717_l726 = y[_t714_l726]; 
        _t720_l726 = _t717_l726 + _t719_l726; 
        _t721_l726 = _t716_l726 * _t720_l726; 
        x[_t714_l726] = _t721_l726;
    }
}
"
1151,7,5.586009137914516e-05,7634944,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    int _t792_l807; 
    int _t805_l839; 
    float _t832_l839; 
    int _t739_l807; 
    int _t762_l807; 
    float _t765_l807; 
    float _t773_l807; 
    int _t827_l839; 
    float _t822_l839; 
    float _t802_l807; 
    int _t810_l839; 
    float _t786_l807; 
    float _t764_l807; 
    int _t729_l839; 
    float _t785_l807; 
    float _t771_l807; 
    float _t748_l807; 
    int _t778_l807; 
    float _t769_l807; 
    float _t775_l807; 
    int _t729_l807; 
    float _t830_l839; 
    float _t796_l807; 
    int l_l839; 
    float _t812_l839; 
    float _t798_l807; 
    float _t795_l807; 
    int i_l807; 
    float _t833_l839; 
    float _t814_l839; 
    float _t747_l807; 
    float _t801_l807; 
    int _t777_l807; 
    int _t750_l807; 
    int _t734_l839; 
    int _t793_l807; 
    int _t761_l807; 
    float _t799_l807; 
    float _t755_l807; 
    float _t787_l807; 
    float _t759_l807; 
    int _t818_l839; 
    float _t820_l839; 
    float _t823_l839; 
    float _t788_l807; 
    float _t746_l807; 
    float _t797_l807; 
    float _t789_l807; 
    float _t829_l839; 
    float _t745_l807; 
    float _t831_l839; 
    int _t735_l839; 
    float _t767_l807; 
    float _t783_l807; 
    int _t743_l807; 
    float _t821_l839; 
    float _t784_l807; 
    float _t816_l839; 
    float _t758_l807; 
    float _t825_l839; 
    float _t754_l807; 
    float _t753_l807; 
    float _t772_l807; 
    float _t756_l807; 
    float _t813_l839; 
    float _t741_l807; 
    float _t834_l839; 
    float _t815_l839; 
    float _t809_l839; 
    int _t738_l807; 
    float _t770_l807; 
    float _t824_l839; 
    float _t780_l807; 
    float _t742_l807; 
    float _t774_l807; 
    float _t800_l807; 
    float _t781_l807; 
    float _t757_l807; 
    float _t790_l807; 
    float _t752_l807; 
    float _t768_l807; 
    float _t782_l807; 
    int _t737_l807; 
    float _t766_l807; 
    _t729_l839 = 1; 
    l_l839 = _t729_l839; 
    while (l_l839 <= 1024) {
        _t729_l839 = 1; 
        _t734_l839 = l_l839; 
        _t735_l839 = _t734_l839 + _t729_l839; 
        l_l839 = _t735_l839; 
        _t827_l839 = 1023; 
        _t818_l839 = 1022; 
        _t810_l839 = 1020; 
        _t729_l807 = _t729_l839; 
        i_l807 = _t729_l807; 
        while (i_l807 < 1021) {
            _t761_l807 = 2; 
            _t737_l807 = i_l807; 
            _t762_l807 = _t761_l807 + _t737_l807; 
            _t729_l807 = 1; 
            _t750_l807 = _t737_l807 + _t729_l807; 
            _t752_l807 = z[_t750_l807]; 
            _t741_l807 = z[_t737_l807]; 
            _t742_l807 = y[_t737_l807]; 
            _t754_l807 = _t742_l807 * _t741_l807; 
            _t764_l807 = -_t754_l807; 
            _t753_l807 = y[_t750_l807]; 
            _t765_l807 = _t764_l807 + _t753_l807; 
            _t766_l807 = _t765_l807 * _t752_l807; 
            _t767_l807 = -_t766_l807; 
            _t768_l807 = y[_t762_l807]; 
            _t769_l807 = _t768_l807 + _t767_l807; 
            _t777_l807 = 3; 
            _t778_l807 = _t777_l807 + _t737_l807; 
            _t782_l807 = y[_t778_l807]; 
            _t756_l807 = -_t741_l807; 
            _t787_l807 = _t756_l807 * _t752_l807; 
            _t774_l807 = z[_t762_l807]; 
            _t780_l807 = -_t774_l807; 
            _t788_l807 = _t787_l807 * _t780_l807; 
            _t743_l807 = _t737_l807 - _t729_l807; 
            _t745_l807 = x[_t743_l807]; 
            _t792_l807 = 4; 
            _t793_l807 = _t792_l807 + _t737_l807; 
            _t801_l807 = z[_t793_l807]; 
            _t746_l807 = -_t745_l807; 
            _t770_l807 = -_t746_l807; 
            _t784_l807 = z[_t778_l807]; 
            _t786_l807 = _t770_l807 * _t784_l807; 
            _t798_l807 = -_t786_l807; 
            _t799_l807 = _t798_l807 * _t788_l807; 
            _t781_l807 = _t769_l807 * _t780_l807; 
            _t783_l807 = _t781_l807 + _t782_l807; 
            _t785_l807 = _t783_l807 * _t784_l807; 
            _t795_l807 = -_t785_l807; 
            _t796_l807 = y[_t793_l807]; 
            _t797_l807 = _t795_l807 + _t796_l807; 
            _t800_l807 = _t797_l807 + _t799_l807; 
            _t802_l807 = _t800_l807 * _t801_l807; 
            _t755_l807 = _t753_l807 - _t754_l807; 
            _t757_l807 = _t746_l807 * _t756_l807; 
            _t758_l807 = _t755_l807 + _t757_l807; 
            _t759_l807 = _t752_l807 * _t758_l807; 
            _t747_l807 = _t742_l807 + _t746_l807; 
            _t748_l807 = _t741_l807 * _t747_l807; 
            x[_t737_l807] = _t748_l807; 
            x[_t750_l807] = _t759_l807; 
            _t789_l807 = _t786_l807 * _t788_l807; 
            _t771_l807 = _t756_l807 * _t770_l807; 
            _t772_l807 = _t771_l807 * _t752_l807; 
            _t773_l807 = _t769_l807 + _t772_l807; 
            _t775_l807 = _t773_l807 * _t774_l807; 
            x[_t762_l807] = _t775_l807; 
            _t790_l807 = _t785_l807 + _t789_l807; 
            x[_t778_l807] = _t790_l807; 
            x[_t793_l807] = _t802_l807; 
            _t738_l807 = 5; 
            _t739_l807 = _t737_l807 + _t738_l807; 
            i_l807 = _t739_l807;
        } 
        _t812_l839 = x[_t810_l839]; 
        _t805_l839 = 1021; 
        _t815_l839 = z[_t805_l839]; 
        _t809_l839 = y[_t805_l839]; 
        _t813_l839 = -_t812_l839; 
        _t814_l839 = _t809_l839 + _t813_l839; 
        _t816_l839 = _t814_l839 * _t815_l839; 
        x[_t805_l839] = _t816_l839; 
        _t820_l839 = z[_t818_l839]; 
        _t822_l839 = x[_t805_l839]; 
        _t823_l839 = -_t822_l839; 
        _t821_l839 = y[_t818_l839]; 
        _t824_l839 = _t821_l839 + _t823_l839; 
        _t825_l839 = _t820_l839 * _t824_l839; 
        x[_t818_l839] = _t825_l839; 
        _t831_l839 = x[_t818_l839]; 
        _t832_l839 = -_t831_l839; 
        _t830_l839 = y[_t827_l839]; 
        _t833_l839 = _t830_l839 + _t832_l839; 
        _t829_l839 = z[_t827_l839]; 
        _t834_l839 = _t829_l839 * _t833_l839; 
        x[_t827_l839] = _t834_l839;
    }
}
"
645,5,5.348689228412695e-05,9427996,"void kernel_tridiagonal(float x[1024], float y[1024], float z[1024]) {
    #pragma soap input float x[1024] = [0.0, 1.0], float y[1024] = [0.0, 1.0], float z[1024] = [0.0, 1.0] 
    #pragma soap output x 
    float _t867_l890; 
    int _t842_l890; 
    int _t863_l890; 
    int _t852_l890; 
    float _t860_l890; 
    float _t878_l890; 
    float _t868_l890; 
    float _t872_l890; 
    float _t879_l890; 
    float _t858_l890; 
    int i_l890; 
    float _t855_l890; 
    float _t869_l890; 
    float _t883_l890; 
    int _t876_l890; 
    int _t851_l890; 
    float _t882_l890; 
    int _t848_l893; 
    float _t854_l890; 
    int _t856_l890; 
    float _t873_l890; 
    float _t884_l890; 
    int _t847_l893; 
    float _t861_l890; 
    float _t870_l890; 
    float _t871_l890; 
    int l_l893; 
    int _t875_l890; 
    float _t885_l890; 
    float _t866_l890; 
    float _t880_l890; 
    int _t850_l890; 
    float _t865_l890; 
    float _t859_l890; 
    float _t881_l890; 
    int _t842_l893; 
    _t842_l893 = 1; 
    l_l893 = _t842_l893; 
    while (l_l893 <= 1024) {
        _t842_l893 = 1; 
        _t847_l893 = l_l893; 
        _t848_l893 = _t847_l893 + _t842_l893; 
        l_l893 = _t848_l893; 
        _t842_l890 = _t842_l893; 
        i_l890 = _t842_l890; 
        while (i_l890 < 1024) {
            _t842_l890 = 1; 
            _t850_l890 = i_l890; 
            _t856_l890 = _t850_l890 - _t842_l890; 
            _t858_l890 = x[_t856_l890]; 
            _t863_l890 = _t850_l890 + _t842_l890; 
            _t854_l890 = z[_t850_l890]; 
            _t865_l890 = -_t854_l890; 
            _t866_l890 = z[_t863_l890]; 
            _t867_l890 = _t865_l890 * _t866_l890; 
            _t855_l890 = y[_t850_l890]; 
            _t868_l890 = _t855_l890 * _t867_l890; 
            _t869_l890 = y[_t863_l890]; 
            _t870_l890 = _t869_l890 * _t866_l890; 
            _t871_l890 = _t870_l890 + _t868_l890; 
            _t859_l890 = -_t858_l890; 
            _t872_l890 = _t859_l890 * _t867_l890; 
            _t873_l890 = _t871_l890 + _t872_l890; 
            _t881_l890 = -_t867_l890; 
            _t882_l890 = _t859_l890 * _t881_l890; 
            _t875_l890 = 2; 
            _t876_l890 = _t875_l890 + _t850_l890; 
            _t879_l890 = y[_t876_l890]; 
            _t878_l890 = -_t871_l890; 
            _t880_l890 = _t878_l890 + _t879_l890; 
            _t883_l890 = _t880_l890 + _t882_l890; 
            _t884_l890 = z[_t876_l890]; 
            _t860_l890 = _t855_l890 + _t859_l890; 
            _t861_l890 = _t854_l890 * _t860_l890; 
            x[_t850_l890] = _t861_l890; 
            x[_t863_l890] = _t873_l890; 
            _t851_l890 = 3; 
            _t885_l890 = _t883_l890 * _t884_l890; 
            _t852_l890 = _t850_l890 + _t851_l890; 
            i_l890 = _t852_l890; 
            x[_t876_l890] = _t885_l890;
        }
    }
}
"
