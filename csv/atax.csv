lut,dsp,error,latency,expression
497,5,0.35319164395332336,176120000,"// atax
#define N 4000
#define _PB_NX N
#define _PB_NY N

#pragma np_opt input \
    float A[_PB_NX][_PB_NY] = [0.0, 1.0][0, 0], \
    float x[_PB_NY] = [0.0, 1.0][0, 0], \
    float y[_PB_NY] = [0.0, 1.0][0, 0], \
    float tmp[_PB_NX] = 0
#pragma np_opt output y

int i; int j;

for (i = 0; i < _PB_NX; i++)
{
    tmp[i] = 0;
    for (j = 0; j < _PB_NY; j++)
        tmp[i] = tmp[i] + A[i][j] * x[j];
    for (j = 0; j < _PB_NY; j++)
        y[j] = y[j] + A[i][j] * tmp[i];
}

// vim: ft=c
"
861,5,0.1998915821313858,36324000,"void kernel_atax(float A[4000][4000], float x[4000], float y[4000], float tmp[4000]) {
    #pragma np_opt input float A[4000][4000] = [0.0, 1.0], float x[4000] = [0.0, 1.0], float y[4000] = [0.0, 1.0], float tmp[4000] = 0 
    #pragma np_opt output y 
    float _t22_l83; 
    float _t35_l83; 
    float _t66_l83; 
    float _t86_l90; 
    int _t3_l83; 
    float _t48_l83; 
    float _t74_l83; 
    int i_l93; 
    float _t42_l83; 
    int _t45_l83; 
    int _t15_l83; 
    float _t34_l83; 
    int _t52_l83; 
    int _t8_l93; 
    float _t27_l83; 
    int i_l90; 
    float _t57_l83; 
    int _t9_l90; 
    int _t14_l90; 
    int _t61_l83; 
    float _t28_l83; 
    int _t29_l83; 
    float _t20_l83; 
    float _t25_l83; 
    float _t25_l90; 
    float _t87_l90; 
    float _t51_l83; 
    float _t50_l83; 
    float _t65_l83; 
    float _t72_l83; 
    int _t10_l93; 
    float _t41_l83; 
    int i_l83; 
    int _t29_l90; 
    int j_l83; 
    int _t9_l83; 
    int _t70_l83; 
    int _t16_l83; 
    float _t58_l83; 
    int _t53_l83; 
    int j_l90; 
    float _t78_l83; 
    int i; 
    int _t3_l90; 
    int _t18_l83; 
    float _t77_l90; 
    float _t85_l90; 
    int _t46_l83; 
    float _t23_l83; 
    float _t59_l83; 
    float _t76_l83; 
    float _t39_l83; 
    int _t8_l83; 
    float _t68_l83; 
    float _t63_l83; 
    float _t44_l83; 
    float _t75_l83; 
    float _t67_l83; 
    int _t69_l83; 
    int _t8_l90; 
    float _t31_l83; 
    float _t77_l83; 
    int _t60_l83; 
    int _t14_l83; 
    int _t9_l93; 
    int _t36_l83; 
    float _t33_l83; 
    int _t37_l83; 
    int _t17_l83; 
    float _t55_l83; 
    float _t43_l83; 
    int _t3_l93; 
    _t3_l93 = 0; 
    i_l93 = _t3_l93; 
    while (i_l93 < 4000) {
        _t9_l93 = 1; 
        _t8_l93 = i_l93; 
        _t10_l93 = _t8_l93 + _t9_l93; 
        _t8_l90 = _t8_l93; 
        i_l90 = _t8_l90; 
        _t8_l83 = i; 
        _t3_l83 = 0; 
        tmp[_t8_l83] = _t3_l83; 
        i_l83 = _t8_l83; 
        j_l83 = _t3_l83; 
        while (j_l83 < 4000) {
            _t8_l83 = i_l83; 
            _t60_l83 = 5; 
            _t36_l83 = 2; 
            _t14_l83 = j_l83; 
            _t37_l83 = _t36_l83 + _t14_l83; 
            _t41_l83 = x[_t37_l83]; 
            _t39_l83 = A[_t8_l83][_t37_l83]; 
            _t42_l83 = _t39_l83 * _t41_l83; 
            _t15_l83 = 8; 
            _t16_l83 = _t14_l83 + _t15_l83; 
            _t69_l83 = 7; 
            _t45_l83 = 3; 
            _t46_l83 = _t45_l83 + _t14_l83; 
            _t50_l83 = x[_t46_l83]; 
            _t48_l83 = A[_t8_l83][_t46_l83]; 
            _t51_l83 = _t48_l83 * _t50_l83; 
            _t25_l83 = A[_t8_l83][_t14_l83]; 
            _t52_l83 = 4; 
            _t53_l83 = _t52_l83 + _t14_l83; 
            _t61_l83 = _t60_l83 + _t14_l83; 
            _t65_l83 = x[_t61_l83]; 
            _t77_l83 = tmp[_t8_l83]; 
            _t17_l83 = 6; 
            _t18_l83 = _t17_l83 + _t14_l83; 
            _t70_l83 = _t69_l83 + _t14_l83; 
            _t74_l83 = x[_t70_l83]; 
            _t72_l83 = A[_t8_l83][_t70_l83]; 
            _t75_l83 = _t72_l83 * _t74_l83; 
            _t57_l83 = x[_t53_l83]; 
            _t55_l83 = A[_t8_l83][_t53_l83]; 
            _t58_l83 = _t55_l83 * _t57_l83; 
            _t59_l83 = _t51_l83 + _t58_l83; 
            _t63_l83 = A[_t8_l83][_t61_l83]; 
            _t66_l83 = _t63_l83 * _t65_l83; 
            _t67_l83 = _t59_l83 + _t66_l83; 
            _t27_l83 = x[_t14_l83]; 
            _t28_l83 = _t25_l83 * _t27_l83; 
            _t9_l83 = 1; 
            _t29_l83 = _t14_l83 + _t9_l83; 
            _t33_l83 = x[_t29_l83]; 
            _t31_l83 = A[_t8_l83][_t29_l83]; 
            _t34_l83 = _t31_l83 * _t33_l83; 
            _t35_l83 = _t28_l83 + _t34_l83; 
            _t43_l83 = _t35_l83 + _t42_l83; 
            _t20_l83 = A[_t8_l83][_t18_l83]; 
            _t22_l83 = x[_t18_l83]; 
            _t23_l83 = _t20_l83 * _t22_l83; 
            _t44_l83 = _t23_l83 + _t43_l83; 
            _t68_l83 = _t44_l83 + _t67_l83; 
            _t76_l83 = _t68_l83 + _t75_l83; 
            _t78_l83 = _t76_l83 + _t77_l83; 
            tmp[_t8_l83] = _t78_l83; 
            i_l83 = _t8_l83; 
            j_l83 = _t16_l83;
        } 
        _t3_l90 = 0; 
        j_l90 = _t3_l90; 
        while (j_l90 < 4000) {
            _t8_l90 = i_l90; 
            _t14_l90 = j_l90; 
            _t85_l90 = y[_t14_l90]; 
            _t25_l90 = A[_t8_l90][_t14_l90]; 
            _t77_l90 = tmp[_t8_l90]; 
            _t86_l90 = _t25_l90 * _t77_l90; 
            _t87_l90 = _t85_l90 + _t86_l90; 
            y[_t14_l90] = _t87_l90; 
            i_l90 = _t8_l90; 
            _t9_l90 = 1; 
            _t29_l90 = _t14_l90 + _t9_l90; 
            j_l90 = _t29_l90;
        } 
        i_l93 = _t10_l93;
    }
}
"
1641,13,0.2300419807434082,31208000,"void kernel_atax(float A[4000][4000], float x[4000], float y[4000], float tmp[4000]) {
    #pragma np_opt input float A[4000][4000] = [0.0, 1.0], float x[4000] = [0.0, 1.0], float y[4000] = [0.0, 1.0], float tmp[4000] = 0 
    #pragma np_opt output y 
    int _t177_l201; 
    float _t145_l201; 
    float _t204_l272; 
    float _t192_l201; 
    int _t108_l201; 
    float _t251_l272; 
    float _t231_l272; 
    float _t180_l201; 
    float _t242_l272; 
    int _t97_l275; 
    int _t110_l201; 
    int _t220_l272; 
    float _t184_l201; 
    float _t252_l272; 
    float _t226_l272; 
    int _t97_l272; 
    float _t175_l201; 
    float _t196_l201; 
    float _t147_l201; 
    int i_l272; 
    float _t195_l272; 
    float _t140_l201; 
    float _t258_l272; 
    int _t127_l201; 
    float _t139_l201; 
    float _t237_l272; 
    float _t173_l201; 
    float _t176_l201; 
    float _t234_l272; 
    int _t170_l201; 
    int _t104_l275; 
    float _t233_l272; 
    float _t190_l201; 
    int _t229_l272; 
    float _t159_l201; 
    float _t114_l201; 
    float _t219_l272; 
    int i_l201; 
    int _t186_l201; 
    int _t103_l272; 
    float _t141_l201; 
    float _t124_l201; 
    float _t246_l272; 
    float _t137_l201; 
    int _t211_l272; 
    float _t255_l272; 
    int _t171_l201; 
    int _t178_l201; 
    float _t160_l201; 
    float _t148_l201; 
    float _t225_l272; 
    float _t216_l272; 
    float _t167_l201; 
    int _t161_l201; 
    int _t134_l201; 
    int _t111_l201; 
    int _t154_l272; 
    int _t103_l275; 
    float _t210_l272; 
    float _t152_l201; 
    float _t228_l272; 
    int _t118_l201; 
    float _t244_l272; 
    int _t143_l201; 
    float _t266_l272; 
    float _t224_l272; 
    float _t182_l201; 
    int _t256_l272; 
    int _t109_l201; 
    float _t267_l272; 
    float _t117_l201; 
    int _t119_l201; 
    float _t150_l201; 
    int _t185_l201; 
    int _t112_l201; 
    float _t158_l201; 
    float _t153_l201; 
    float _t207_l272; 
    float _t213_l272; 
    float _t261_l272; 
    float _t240_l272; 
    int _t126_l201; 
    float _t133_l201; 
    int i_l275; 
    float _t217_l272; 
    int _t162_l201; 
    int _t247_l272; 
    float _t166_l201; 
    float _t183_l201; 
    float _t208_l272; 
    int _t238_l272; 
    float _t194_l201; 
    int _t102_l275; 
    int _t108_l272; 
    float _t215_l272; 
    float _t235_l272; 
    float _t253_l272; 
    int _t102_l272; 
    int _t154_l201; 
    float _t121_l201; 
    int j_l201; 
    float _t168_l201; 
    float _t249_l272; 
    float _t150_l272; 
    float _t169_l201; 
    int _t135_l201; 
    float _t156_l201; 
    int i; 
    float _t193_l201; 
    float _t206_l272; 
    float _t195_l201; 
    float _t123_l201; 
    int _t199_l272; 
    float _t131_l201; 
    float _t125_l201; 
    float _t191_l201; 
    float _t262_l272; 
    float _t129_l201; 
    float _t202_l272; 
    int _t102_l201; 
    int _t103_l201; 
    int j_l272; 
    float _t260_l272; 
    float _t243_l272; 
    float _t188_l201; 
    float _t116_l201; 
    int _t97_l201; 
    int _t142_l201; 
    float _t265_l272; 
    float _t132_l201; 
    float _t222_l272; 
    float _t164_l201; 
    _t97_l275 = 0; 
    i_l275 = _t97_l275; 
    while (i_l275 < 4000) {
        _t102_l275 = i_l275; 
        _t102_l272 = _t102_l275; 
        _t247_l272 = 3998; 
        _t251_l272 = x[_t247_l272]; 
        _t249_l272 = A[_t102_l272][_t247_l272]; 
        _t252_l272 = _t249_l272 * _t251_l272; 
        _t102_l201 = i; 
        i_l201 = _t102_l201; 
        _t97_l201 = 0; 
        tmp[_t102_l201] = _t97_l201; 
        j_l201 = _t97_l201; 
        while (j_l201 < 3993) {
            _t108_l201 = j_l201; 
            _t134_l201 = 10; 
            _t135_l201 = _t134_l201 + _t108_l201; 
            _t139_l201 = x[_t135_l201]; 
            _t170_l201 = 3; 
            _t102_l201 = i_l201; 
            _t195_l201 = tmp[_t102_l201]; 
            _t142_l201 = 6; 
            _t143_l201 = _t142_l201 + _t108_l201; 
            _t147_l201 = x[_t143_l201]; 
            _t145_l201 = A[_t102_l201][_t143_l201]; 
            _t148_l201 = _t145_l201 * _t147_l201; 
            _t161_l201 = 2; 
            _t162_l201 = _t161_l201 + _t108_l201; 
            _t164_l201 = A[_t102_l201][_t162_l201]; 
            _t166_l201 = x[_t162_l201]; 
            _t167_l201 = _t164_l201 * _t166_l201; 
            _t152_l201 = x[_t108_l201]; 
            _t150_l201 = A[_t102_l201][_t108_l201]; 
            _t153_l201 = _t150_l201 * _t152_l201; 
            _t103_l201 = 1; 
            _t154_l201 = _t108_l201 + _t103_l201; 
            _t156_l201 = A[_t102_l201][_t154_l201]; 
            _t158_l201 = x[_t154_l201]; 
            _t159_l201 = _t156_l201 * _t158_l201; 
            _t160_l201 = _t153_l201 + _t159_l201; 
            _t168_l201 = _t160_l201 + _t167_l201; 
            _t169_l201 = _t148_l201 + _t168_l201; 
            _t185_l201 = 5; 
            _t186_l201 = _t185_l201 + _t108_l201; 
            _t188_l201 = A[_t102_l201][_t186_l201]; 
            _t190_l201 = x[_t186_l201]; 
            _t191_l201 = _t188_l201 * _t190_l201; 
            _t177_l201 = 4; 
            _t178_l201 = _t177_l201 + _t108_l201; 
            _t180_l201 = A[_t102_l201][_t178_l201]; 
            _t182_l201 = x[_t178_l201]; 
            _t183_l201 = _t180_l201 * _t182_l201; 
            _t171_l201 = _t170_l201 + _t108_l201; 
            _t175_l201 = x[_t171_l201]; 
            _t173_l201 = A[_t102_l201][_t171_l201]; 
            _t176_l201 = _t173_l201 * _t175_l201; 
            _t184_l201 = _t176_l201 + _t183_l201; 
            _t192_l201 = _t184_l201 + _t191_l201; 
            _t193_l201 = _t169_l201 + _t192_l201; 
            _t137_l201 = A[_t102_l201][_t135_l201]; 
            _t140_l201 = _t137_l201 * _t139_l201; 
            _t126_l201 = 9; 
            _t127_l201 = _t126_l201 + _t108_l201; 
            _t131_l201 = x[_t127_l201]; 
            _t129_l201 = A[_t102_l201][_t127_l201]; 
            _t132_l201 = _t129_l201 * _t131_l201; 
            _t118_l201 = 8; 
            _t119_l201 = _t118_l201 + _t108_l201; 
            _t123_l201 = x[_t119_l201]; 
            _t121_l201 = A[_t102_l201][_t119_l201]; 
            _t124_l201 = _t121_l201 * _t123_l201; 
            _t111_l201 = 7; 
            _t112_l201 = _t111_l201 + _t108_l201; 
            _t116_l201 = x[_t112_l201]; 
            _t114_l201 = A[_t102_l201][_t112_l201]; 
            _t117_l201 = _t114_l201 * _t116_l201; 
            _t125_l201 = _t117_l201 + _t124_l201; 
            _t133_l201 = _t125_l201 + _t132_l201; 
            _t141_l201 = _t133_l201 + _t140_l201; 
            _t194_l201 = _t141_l201 + _t193_l201; 
            _t196_l201 = _t194_l201 + _t195_l201; 
            tmp[_t102_l201] = _t196_l201; 
            _t109_l201 = 11; 
            _t110_l201 = _t108_l201 + _t109_l201; 
            i_l201 = _t102_l201; 
            j_l201 = _t110_l201;
        } 
        _t202_l272 = tmp[_t102_l272]; 
        _t199_l272 = 3993; 
        _t204_l272 = A[_t102_l272][_t199_l272]; 
        _t206_l272 = x[_t199_l272]; 
        _t207_l272 = _t204_l272 * _t206_l272; 
        _t208_l272 = _t202_l272 + _t207_l272; 
        tmp[_t102_l272] = _t208_l272; 
        _t210_l272 = tmp[_t102_l272]; 
        _t211_l272 = 3994; 
        _t215_l272 = x[_t211_l272]; 
        _t213_l272 = A[_t102_l272][_t211_l272]; 
        _t216_l272 = _t213_l272 * _t215_l272; 
        _t217_l272 = _t210_l272 + _t216_l272; 
        tmp[_t102_l272] = _t217_l272; 
        _t219_l272 = tmp[_t102_l272]; 
        _t220_l272 = 3995; 
        _t224_l272 = x[_t220_l272]; 
        _t222_l272 = A[_t102_l272][_t220_l272]; 
        _t225_l272 = _t222_l272 * _t224_l272; 
        _t226_l272 = _t219_l272 + _t225_l272; 
        tmp[_t102_l272] = _t226_l272; 
        _t228_l272 = tmp[_t102_l272]; 
        _t229_l272 = 3996; 
        _t233_l272 = x[_t229_l272]; 
        _t231_l272 = A[_t102_l272][_t229_l272]; 
        _t234_l272 = _t231_l272 * _t233_l272; 
        _t235_l272 = _t228_l272 + _t234_l272; 
        tmp[_t102_l272] = _t235_l272; 
        _t237_l272 = tmp[_t102_l272]; 
        _t238_l272 = 3997; 
        _t242_l272 = x[_t238_l272]; 
        _t240_l272 = A[_t102_l272][_t238_l272]; 
        _t243_l272 = _t240_l272 * _t242_l272; 
        _t244_l272 = _t237_l272 + _t243_l272; 
        tmp[_t102_l272] = _t244_l272; 
        _t246_l272 = tmp[_t102_l272]; 
        _t253_l272 = _t246_l272 + _t252_l272; 
        tmp[_t102_l272] = _t253_l272; 
        _t255_l272 = tmp[_t102_l272]; 
        _t256_l272 = 3999; 
        _t260_l272 = x[_t256_l272]; 
        _t258_l272 = A[_t102_l272][_t256_l272]; 
        _t261_l272 = _t258_l272 * _t260_l272; 
        _t262_l272 = _t255_l272 + _t261_l272; 
        tmp[_t102_l272] = _t262_l272; 
        i_l272 = _t102_l272; 
        _t97_l272 = 0; 
        j_l272 = _t97_l272; 
        while (j_l272 < 4000) {
            _t108_l272 = j_l272; 
            _t265_l272 = y[_t108_l272]; 
            _t102_l272 = i_l272; 
            _t195_l272 = tmp[_t102_l272]; 
            _t150_l272 = A[_t102_l272][_t108_l272]; 
            _t266_l272 = _t150_l272 * _t195_l272; 
            _t267_l272 = _t265_l272 + _t266_l272; 
            i_l272 = _t102_l272; 
            y[_t108_l272] = _t267_l272; 
            _t103_l272 = 1; 
            _t154_l272 = _t108_l272 + _t103_l272; 
            j_l272 = _t154_l272;
        } 
        _t103_l275 = 1; 
        _t104_l275 = _t102_l275 + _t103_l275; 
        i_l275 = _t104_l275;
    }
}
"
653,5,0.22380639612674713,56244000,"void kernel_atax(float A[4000][4000], float x[4000], float y[4000], float tmp[4000]) {
    #pragma np_opt input float A[4000][4000] = [0.0, 1.0], float x[4000] = [0.0, 1.0], float y[4000] = [0.0, 1.0], float tmp[4000] = 0 
    #pragma np_opt output y 
    float _t318_l327; 
    float _t294_l334; 
    float _t321_l334; 
    int j_l327; 
    float _t294_l327; 
    int _t286_l337; 
    float _t320_l327; 
    float _t304_l327; 
    int _t284_l334; 
    float _t319_l327; 
    int _t291_l327; 
    int _t279_l334; 
    float _t300_l327; 
    float _t296_l327; 
    int _t290_l334; 
    int _t298_l334; 
    int j_l334; 
    float _t297_l327; 
    float _t329_l334; 
    int _t284_l327; 
    float _t316_l327; 
    int _t313_l327; 
    int _t279_l327; 
    float _t310_l327; 
    float _t312_l327; 
    int i; 
    int _t292_l327; 
    int i_l327; 
    int _t284_l337; 
    float _t302_l327; 
    float _t308_l327; 
    float _t321_l327; 
    int _t306_l327; 
    int _t285_l337; 
    int _t298_l327; 
    float _t330_l334; 
    int _t290_l327; 
    float _t331_l334; 
    float _t322_l327; 
    int _t305_l327; 
    int i_l334; 
    int _t279_l337; 
    int _t285_l334; 
    int i_l337; 
    int _t285_l327; 
    float _t311_l327; 
    float _t303_l327; 
    int _t314_l327; 
    _t279_l337 = 0; 
    i_l337 = _t279_l337; 
    while (i_l337 < 4000) {
        _t284_l337 = i_l337; 
        _t285_l337 = 1; 
        _t286_l337 = _t284_l337 + _t285_l337; 
        i_l337 = _t286_l337; 
        _t284_l327 = i; 
        i_l327 = _t284_l327; 
        _t279_l327 = 0; 
        tmp[_t284_l327] = _t279_l327; 
        j_l327 = _t279_l327; 
        while (j_l327 < 4000) {
            _t284_l327 = i_l327; 
            _t313_l327 = 3; 
            _t290_l327 = j_l327; 
            _t314_l327 = _t313_l327 + _t290_l327; 
            _t316_l327 = A[_t284_l327][_t314_l327]; 
            _t285_l327 = 1; 
            _t298_l327 = _t290_l327 + _t285_l327; 
            _t305_l327 = 2; 
            _t306_l327 = _t305_l327 + _t290_l327; 
            _t308_l327 = A[_t284_l327][_t306_l327]; 
            _t310_l327 = x[_t306_l327]; 
            _t311_l327 = _t308_l327 * _t310_l327; 
            _t296_l327 = x[_t290_l327]; 
            _t294_l327 = A[_t284_l327][_t290_l327]; 
            _t297_l327 = _t294_l327 * _t296_l327; 
            _t300_l327 = A[_t284_l327][_t298_l327]; 
            _t302_l327 = x[_t298_l327]; 
            _t303_l327 = _t300_l327 * _t302_l327; 
            _t304_l327 = _t297_l327 + _t303_l327; 
            _t312_l327 = _t304_l327 + _t311_l327; 
            _t321_l327 = tmp[_t284_l327]; 
            _t318_l327 = x[_t314_l327]; 
            _t319_l327 = _t316_l327 * _t318_l327; 
            _t320_l327 = _t312_l327 + _t319_l327; 
            _t322_l327 = _t320_l327 + _t321_l327; 
            tmp[_t284_l327] = _t322_l327; 
            _t291_l327 = 4; 
            _t292_l327 = _t290_l327 + _t291_l327; 
            i_l327 = _t284_l327; 
            j_l327 = _t292_l327;
        } 
        _t284_l334 = _t284_l337; 
        i_l334 = _t284_l334; 
        _t279_l334 = 0; 
        j_l334 = _t279_l334; 
        while (j_l334 < 4000) {
            _t290_l334 = j_l334; 
            _t329_l334 = y[_t290_l334]; 
            _t284_l334 = i_l334; 
            _t321_l334 = tmp[_t284_l334]; 
            _t294_l334 = A[_t284_l334][_t290_l334]; 
            _t330_l334 = _t294_l334 * _t321_l334; 
            _t331_l334 = _t329_l334 + _t330_l334; 
            _t285_l334 = 1; 
            _t298_l334 = _t290_l334 + _t285_l334; 
            y[_t290_l334] = _t331_l334; 
            i_l334 = _t284_l334; 
            j_l334 = _t298_l334;
        }
    }
}
"
549,5,0.26750150322914124,96164000,"void kernel_atax(float A[4000][4000], float x[4000], float y[4000], float tmp[4000]) {
    #pragma np_opt input float A[4000][4000] = [0.0, 1.0], float x[4000] = [0.0, 1.0], float y[4000] = [0.0, 1.0], float tmp[4000] = 0 
    #pragma np_opt output y 
    int i_l373; 
    int j_l373; 
    float _t364_l373; 
    int _t346_l383; 
    int i; 
    int _t347_l383; 
    float _t377_l380; 
    int i_l383; 
    int _t354_l373; 
    int _t346_l373; 
    float _t356_l380; 
    int _t352_l380; 
    float _t368_l373; 
    int _t352_l373; 
    float _t359_l373; 
    int _t347_l373; 
    int j_l380; 
    int _t346_l380; 
    float _t356_l373; 
    float _t358_l373; 
    int _t348_l383; 
    int _t353_l373; 
    int _t360_l380; 
    int _t341_l383; 
    float _t376_l380; 
    float _t367_l380; 
    float _t375_l380; 
    float _t367_l373; 
    int _t341_l380; 
    float _t366_l373; 
    int _t347_l380; 
    int _t360_l373; 
    int i_l380; 
    int _t341_l373; 
    float _t362_l373; 
    float _t365_l373; 
    _t341_l383 = 0; 
    i_l383 = _t341_l383; 
    while (i_l383 < 4000) {
        _t347_l383 = 1; 
        _t346_l383 = i_l383; 
        _t348_l383 = _t346_l383 + _t347_l383; 
        _t341_l373 = 0; 
        _t346_l373 = i; 
        tmp[_t346_l373] = _t341_l373; 
        i_l373 = _t346_l373; 
        j_l373 = _t341_l373; 
        while (j_l373 < 4000) {
            _t346_l373 = i_l373; 
            _t367_l373 = tmp[_t346_l373]; 
            _t352_l373 = j_l373; 
            _t356_l373 = A[_t346_l373][_t352_l373]; 
            _t358_l373 = x[_t352_l373]; 
            _t359_l373 = _t356_l373 * _t358_l373; 
            _t347_l373 = 1; 
            _t360_l373 = _t352_l373 + _t347_l373; 
            _t364_l373 = x[_t360_l373]; 
            _t362_l373 = A[_t346_l373][_t360_l373]; 
            _t365_l373 = _t362_l373 * _t364_l373; 
            _t366_l373 = _t359_l373 + _t365_l373; 
            _t368_l373 = _t366_l373 + _t367_l373; 
            tmp[_t346_l373] = _t368_l373; 
            i_l373 = _t346_l373; 
            _t353_l373 = 2; 
            _t354_l373 = _t352_l373 + _t353_l373; 
            j_l373 = _t354_l373;
        } 
        _t346_l380 = _t346_l383; 
        i_l380 = _t346_l380; 
        _t341_l380 = 0; 
        j_l380 = _t341_l380; 
        while (j_l380 < 4000) {
            _t352_l380 = j_l380; 
            _t375_l380 = y[_t352_l380]; 
            _t346_l380 = i_l380; 
            _t356_l380 = A[_t346_l380][_t352_l380]; 
            _t367_l380 = tmp[_t346_l380]; 
            _t376_l380 = _t356_l380 * _t367_l380; 
            _t377_l380 = _t375_l380 + _t376_l380; 
            y[_t352_l380] = _t377_l380; 
            _t347_l380 = 1; 
            i_l380 = _t346_l380; 
            _t360_l380 = _t352_l380 + _t347_l380; 
            j_l380 = _t360_l380;
        } 
        i_l383 = _t348_l383;
    }
}
"
705,5,0.21276254951953888,48244000,"void kernel_atax(float A[4000][4000], float x[4000], float y[4000], float tmp[4000]) {
    #pragma np_opt input float A[4000][4000] = [0.0, 1.0], float x[4000] = [0.0, 1.0], float y[4000] = [0.0, 1.0], float tmp[4000] = 0 
    #pragma np_opt output y 
    int _t399_l443; 
    float _t431_l443; 
    int _t387_l450; 
    float _t425_l443; 
    int _t387_l453; 
    int _t429_l443; 
    float _t417_l443; 
    int j_l450; 
    float _t447_l450; 
    float _t415_l443; 
    int _t392_l443; 
    int _t421_l443; 
    float _t436_l443; 
    int _t393_l450; 
    int _t398_l450; 
    float _t423_l443; 
    float _t433_l443; 
    float _t437_l450; 
    float _t427_l443; 
    int _t393_l453; 
    float _t434_l443; 
    int j_l443; 
    float _t411_l443; 
    int _t398_l443; 
    float _t437_l443; 
    int _t402_l443; 
    float _t417_l450; 
    int _t393_l443; 
    float _t419_l443; 
    float _t407_l443; 
    float _t413_l443; 
    int _t421_l450; 
    int i; 
    int _t400_l443; 
    int _t401_l443; 
    int _t387_l443; 
    int i_l443; 
    int _t428_l443; 
    float _t420_l443; 
    float _t404_l443; 
    float _t445_l450; 
    float _t414_l443; 
    int i_l450; 
    float _t446_l450; 
    int _t392_l450; 
    float _t426_l443; 
    float _t435_l443; 
    int _t392_l453; 
    int _t394_l453; 
    float _t438_l443; 
    int _t409_l443; 
    int _t408_l443; 
    float _t406_l443; 
    int i_l453; 
    _t387_l453 = 0; 
    i_l453 = _t387_l453; 
    while (i_l453 < 4000) {
        _t393_l453 = 1; 
        _t392_l453 = i_l453; 
        _t394_l453 = _t392_l453 + _t393_l453; 
        _t392_l450 = _t392_l453; 
        i_l450 = _t392_l450; 
        _t392_l443 = i; 
        i_l443 = _t392_l443; 
        _t387_l443 = 0; 
        tmp[_t392_l443] = _t387_l443; 
        j_l443 = _t387_l443; 
        while (j_l443 < 4000) {
            _t392_l443 = i_l443; 
            _t393_l443 = 1; 
            _t398_l443 = j_l443; 
            _t421_l443 = _t398_l443 + _t393_l443; 
            _t425_l443 = x[_t421_l443]; 
            _t423_l443 = A[_t392_l443][_t421_l443]; 
            _t426_l443 = _t423_l443 * _t425_l443; 
            _t399_l443 = 5; 
            _t400_l443 = _t398_l443 + _t399_l443; 
            _t419_l443 = x[_t398_l443]; 
            _t417_l443 = A[_t392_l443][_t398_l443]; 
            _t420_l443 = _t417_l443 * _t419_l443; 
            _t427_l443 = _t420_l443 + _t426_l443; 
            _t428_l443 = 2; 
            _t429_l443 = _t428_l443 + _t398_l443; 
            _t433_l443 = x[_t429_l443]; 
            _t431_l443 = A[_t392_l443][_t429_l443]; 
            _t434_l443 = _t431_l443 * _t433_l443; 
            _t435_l443 = _t427_l443 + _t434_l443; 
            _t408_l443 = 4; 
            _t409_l443 = _t408_l443 + _t398_l443; 
            _t401_l443 = 3; 
            _t402_l443 = _t401_l443 + _t398_l443; 
            _t404_l443 = A[_t392_l443][_t402_l443]; 
            _t406_l443 = x[_t402_l443]; 
            _t407_l443 = _t404_l443 * _t406_l443; 
            _t411_l443 = A[_t392_l443][_t409_l443]; 
            _t413_l443 = x[_t409_l443]; 
            _t414_l443 = _t411_l443 * _t413_l443; 
            _t415_l443 = _t407_l443 + _t414_l443; 
            _t436_l443 = _t415_l443 + _t435_l443; 
            _t437_l443 = tmp[_t392_l443]; 
            _t438_l443 = _t436_l443 + _t437_l443; 
            tmp[_t392_l443] = _t438_l443; 
            i_l443 = _t392_l443; 
            j_l443 = _t400_l443;
        } 
        _t387_l450 = 0; 
        j_l450 = _t387_l450; 
        while (j_l450 < 4000) {
            _t392_l450 = i_l450; 
            _t398_l450 = j_l450; 
            _t445_l450 = y[_t398_l450]; 
            _t417_l450 = A[_t392_l450][_t398_l450]; 
            _t437_l450 = tmp[_t392_l450]; 
            _t446_l450 = _t417_l450 * _t437_l450; 
            _t447_l450 = _t445_l450 + _t446_l450; 
            _t393_l450 = 1; 
            _t421_l450 = _t398_l450 + _t393_l450; 
            y[_t398_l450] = _t447_l450; 
            i_l450 = _t392_l450; 
            j_l450 = _t421_l450;
        } 
        i_l453 = _t394_l453;
    }
}
"
497,5,0.35319164395332336,176120000,"void kernel_atax(float A[4000][4000], float x[4000], float y[4000], float tmp[4000]) {
    #pragma np_opt input float A[4000][4000] = [0.0, 1.0], float x[4000] = [0.0, 1.0], float y[4000] = [0.0, 1.0], float tmp[4000] = 0 
    #pragma np_opt output y 
    int _t457_l488; 
    int _t462_l491; 
    float _t470_l488; 
    int i; 
    float _t475_l481; 
    int _t463_l491; 
    int _t457_l481; 
    int _t462_l488; 
    float _t472_l488; 
    float _t474_l481; 
    int _t464_l491; 
    int _t457_l491; 
    int _t463_l488; 
    int _t469_l488; 
    int _t468_l481; 
    float _t483_l488; 
    int _t463_l481; 
    int i_l491; 
    float _t472_l481; 
    int _t462_l481; 
    int j_l481; 
    float _t476_l481; 
    int j_l488; 
    int i_l488; 
    int _t468_l488; 
    int _t469_l481; 
    float _t470_l481; 
    int i_l481; 
    float _t484_l488; 
    float _t485_l488; 
    _t457_l491 = 0; 
    i_l491 = _t457_l491; 
    while (i_l491 < 4000) {
        _t463_l491 = 1; 
        _t462_l491 = i_l491; 
        _t464_l491 = _t462_l491 + _t463_l491; 
        _t462_l481 = i; 
        _t457_l481 = 0; 
        tmp[_t462_l481] = _t457_l481; 
        i_l481 = _t462_l481; 
        j_l481 = _t457_l481; 
        while (j_l481 < 4000) {
            _t468_l481 = j_l481; 
            _t474_l481 = x[_t468_l481]; 
            _t462_l481 = i_l481; 
            _t472_l481 = A[_t462_l481][_t468_l481]; 
            _t475_l481 = _t472_l481 * _t474_l481; 
            _t470_l481 = tmp[_t462_l481]; 
            _t476_l481 = _t470_l481 + _t475_l481; 
            i_l481 = _t462_l481; 
            tmp[_t462_l481] = _t476_l481; 
            _t463_l481 = 1; 
            _t469_l481 = _t468_l481 + _t463_l481; 
            j_l481 = _t469_l481;
        } 
        _t462_l488 = _t462_l491; 
        i_l488 = _t462_l488; 
        _t457_l488 = 0; 
        j_l488 = _t457_l488; 
        while (j_l488 < 4000) {
            _t462_l488 = i_l488; 
            i_l488 = _t462_l488; 
            _t468_l488 = j_l488; 
            _t483_l488 = y[_t468_l488]; 
            _t472_l488 = A[_t462_l488][_t468_l488]; 
            _t470_l488 = tmp[_t462_l488]; 
            _t484_l488 = _t472_l488 * _t470_l488; 
            _t485_l488 = _t483_l488 + _t484_l488; 
            y[_t468_l488] = _t485_l488; 
            _t463_l488 = 1; 
            _t469_l488 = _t468_l488 + _t463_l488; 
            j_l488 = _t469_l488;
        } 
        i_l491 = _t464_l491;
    }
}
"
965,5,0.19172610342502594,32324000,"void kernel_atax(float A[4000][4000], float x[4000], float y[4000], float tmp[4000]) {
    #pragma np_opt input float A[4000][4000] = [0.0, 1.0], float x[4000] = [0.0, 1.0], float y[4000] = [0.0, 1.0], float tmp[4000] = 0 
    #pragma np_opt output y 
    float _t558_l591; 
    float _t585_l591; 
    float _t527_l591; 
    int _t495_l598; 
    float _t537_l591; 
    int _t501_l598; 
    float _t563_l591; 
    float _t540_l598; 
    int _t506_l591; 
    int _t510_l591; 
    int _t533_l591; 
    float _t584_l591; 
    float _t580_l591; 
    int _t575_l591; 
    int _t495_l591; 
    float _t542_l591; 
    float _t594_l598; 
    int _t544_l591; 
    float _t572_l591; 
    int _t507_l591; 
    int _t544_l598; 
    int _t495_l601; 
    float _t522_l591; 
    float _t559_l591; 
    int _t524_l591; 
    int _t561_l591; 
    int j_l591; 
    int j_l598; 
    float _t543_l591; 
    float _t585_l598; 
    float _t546_l591; 
    float _t538_l591; 
    float _t531_l591; 
    int _t501_l601; 
    float _t549_l591; 
    float _t582_l591; 
    int _t501_l591; 
    int i_l591; 
    int _t567_l591; 
    int _t568_l591; 
    float _t529_l591; 
    int _t532_l591; 
    float _t570_l591; 
    float _t565_l591; 
    float _t593_l598; 
    float _t595_l598; 
    int i; 
    float _t515_l591; 
    float _t512_l591; 
    float _t566_l591; 
    int _t551_l591; 
    int _t500_l601; 
    float _t548_l591; 
    float _t583_l591; 
    int _t509_l591; 
    float _t556_l591; 
    float _t514_l591; 
    float _t540_l591; 
    float _t550_l591; 
    int _t500_l591; 
    float _t578_l591; 
    int _t525_l591; 
    float _t521_l591; 
    float _t519_l591; 
    float _t554_l591; 
    float _t574_l591; 
    int _t508_l591; 
    float _t573_l591; 
    int _t517_l591; 
    float _t581_l591; 
    int _t516_l591; 
    int _t552_l591; 
    int i_l601; 
    int _t576_l591; 
    int i_l598; 
    float _t535_l591; 
    float _t586_l591; 
    int _t560_l591; 
    float _t523_l591; 
    int _t506_l598; 
    float _t530_l591; 
    int _t500_l598; 
    int _t502_l601; 
    float _t557_l591; 
    _t495_l601 = 0; 
    i_l601 = _t495_l601; 
    while (i_l601 < 4000) {
        _t500_l601 = i_l601; 
        _t501_l601 = 1; 
        _t502_l601 = _t500_l601 + _t501_l601; 
        i_l601 = _t502_l601; 
        _t500_l591 = i; 
        i_l591 = _t500_l591; 
        _t495_l591 = 0; 
        tmp[_t500_l591] = _t495_l591; 
        j_l591 = _t495_l591; 
        while (j_l591 < 4000) {
            _t506_l591 = j_l591; 
            _t567_l591 = 4; 
            _t568_l591 = _t567_l591 + _t506_l591; 
            _t572_l591 = x[_t568_l591]; 
            _t524_l591 = 9; 
            _t525_l591 = _t524_l591 + _t506_l591; 
            _t500_l591 = i_l591; 
            _t560_l591 = 3; 
            _t561_l591 = _t560_l591 + _t506_l591; 
            _t563_l591 = A[_t500_l591][_t561_l591]; 
            _t516_l591 = 8; 
            _t517_l591 = _t516_l591 + _t506_l591; 
            _t519_l591 = A[_t500_l591][_t517_l591]; 
            _t540_l591 = A[_t500_l591][_t506_l591]; 
            _t542_l591 = x[_t506_l591]; 
            _t543_l591 = _t540_l591 * _t542_l591; 
            _t501_l591 = 1; 
            _t544_l591 = _t506_l591 + _t501_l591; 
            _t548_l591 = x[_t544_l591]; 
            _t546_l591 = A[_t500_l591][_t544_l591]; 
            _t549_l591 = _t546_l591 * _t548_l591; 
            _t550_l591 = _t543_l591 + _t549_l591; 
            _t575_l591 = 5; 
            _t576_l591 = _t575_l591 + _t506_l591; 
            _t532_l591 = 6; 
            _t533_l591 = _t532_l591 + _t506_l591; 
            _t551_l591 = 2; 
            _t552_l591 = _t551_l591 + _t506_l591; 
            _t585_l591 = tmp[_t500_l591]; 
            _t509_l591 = 7; 
            _t510_l591 = _t509_l591 + _t506_l591; 
            _t514_l591 = x[_t510_l591]; 
            _t512_l591 = A[_t500_l591][_t510_l591]; 
            _t515_l591 = _t512_l591 * _t514_l591; 
            _t521_l591 = x[_t517_l591]; 
            _t522_l591 = _t519_l591 * _t521_l591; 
            _t523_l591 = _t515_l591 + _t522_l591; 
            _t529_l591 = x[_t525_l591]; 
            _t527_l591 = A[_t500_l591][_t525_l591]; 
            _t530_l591 = _t527_l591 * _t529_l591; 
            _t531_l591 = _t523_l591 + _t530_l591; 
            _t537_l591 = x[_t533_l591]; 
            _t535_l591 = A[_t500_l591][_t533_l591]; 
            _t538_l591 = _t535_l591 * _t537_l591; 
            _t556_l591 = x[_t552_l591]; 
            _t554_l591 = A[_t500_l591][_t552_l591]; 
            _t557_l591 = _t554_l591 * _t556_l591; 
            _t558_l591 = _t550_l591 + _t557_l591; 
            _t559_l591 = _t538_l591 + _t558_l591; 
            _t580_l591 = x[_t576_l591]; 
            _t578_l591 = A[_t500_l591][_t576_l591]; 
            _t581_l591 = _t578_l591 * _t580_l591; 
            _t570_l591 = A[_t500_l591][_t568_l591]; 
            _t573_l591 = _t570_l591 * _t572_l591; 
            _t565_l591 = x[_t561_l591]; 
            _t566_l591 = _t563_l591 * _t565_l591; 
            _t574_l591 = _t566_l591 + _t573_l591; 
            _t582_l591 = _t574_l591 + _t581_l591; 
            _t583_l591 = _t559_l591 + _t582_l591; 
            _t584_l591 = _t531_l591 + _t583_l591; 
            _t586_l591 = _t584_l591 + _t585_l591; 
            tmp[_t500_l591] = _t586_l591; 
            _t507_l591 = 10; 
            _t508_l591 = _t506_l591 + _t507_l591; 
            i_l591 = _t500_l591; 
            j_l591 = _t508_l591;
        } 
        _t500_l598 = _t500_l601; 
        i_l598 = _t500_l598; 
        _t495_l598 = 0; 
        j_l598 = _t495_l598; 
        while (j_l598 < 4000) {
            _t500_l598 = i_l598; 
            i_l598 = _t500_l598; 
            _t506_l598 = j_l598; 
            _t540_l598 = A[_t500_l598][_t506_l598]; 
            _t593_l598 = y[_t506_l598]; 
            _t585_l598 = tmp[_t500_l598]; 
            _t594_l598 = _t540_l598 * _t585_l598; 
            _t595_l598 = _t593_l598 + _t594_l598; 
            y[_t506_l598] = _t595_l598; 
            _t501_l598 = 1; 
            _t544_l598 = _t506_l598 + _t501_l598; 
            j_l598 = _t544_l598;
        }
    }
}
"
