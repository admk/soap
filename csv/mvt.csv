lut,dsp,error,latency,expression
529,5,9.100427269004285e-05,20971540,"// Matrix Vector Product and Transpose

#define N 1024
#define _PB_N 1024

#pragma np_opt input \
    float x1[N] = [0.0, 1.0][0, 0], \
    float x2[N] = [0.0, 1.0][0, 0], \
    float y_1[N] = [0.0, 1.0][0, 0], \
    float y_2[N] = [0.0, 1.0][0, 0], \
    float A[N][N] = [0.0, 1.0][0, 0]
#pragma np_opt output x1, x2

int i; int j;

for (i = 0; i < _PB_N; i++)
    for (j = 0; j < _PB_N; j++)
        x1[i] = x1[i] + A[i][j] * y_1[j];
for (i = 0; i < _PB_N; i++)
    for (j = 0; j < _PB_N; j++)
        x2[i] = x2[i] + A[j][i] * y_2[j];
"
737,5,4.27473132731393e-05,7864382,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    int _t13_l49; 
    float _t34_l49; 
    int j_l70; 
    float _t25_l49; 
    float _t58_l70; 
    float _t60_l70; 
    float _t19_l49; 
    int _t3_l52_l72; 
    int _t9_l52_l72; 
    float _t65_l70; 
    int j_l49; 
    float _t22_l49; 
    int _t8_l52_l72; 
    int _t11_l49; 
    float _t32_l49; 
    float _t40_l49; 
    float _t67_l70; 
    int _t8_l70; 
    int _t36_l70; 
    int _t3_l70; 
    int _t36_l49; 
    float _t66_l70; 
    float _t63_l70; 
    int i_l70; 
    int _t28_l49; 
    float _t26_l49; 
    float _t62_l70; 
    float _t59_l70; 
    int _t11_l70; 
    int i_l52_l72; 
    float _t38_l49; 
    int _t27_l49; 
    float _t33_l49; 
    int _t35_l70; 
    float _t30_l49; 
    float _t24_l49; 
    int _t20_l70; 
    int _t7_l52_l72; 
    int _t20_l49; 
    int _t3_l49; 
    float _t18_l49; 
    float _t44_l49; 
    int _t35_l49; 
    float _t64_l70; 
    int _t8_l49; 
    float _t16_l49; 
    float _t41_l49; 
    int _t7_l49; 
    int i_l49; 
    int _t12_l49; 
    int _t7_l70; 
    float _t43_l49; 
    float _t42_l49; 
    _t3_l52_l72 = 0; 
    i_l52_l72 = _t3_l52_l72; 
    while (i_l52_l72 < 1024) {
        _t8_l52_l72 = 1; 
        _t7_l52_l72 = i_l52_l72; 
        _t9_l52_l72 = _t7_l52_l72 + _t8_l52_l72; 
        i_l52_l72 = _t9_l52_l72; 
        _t7_l49 = _t7_l52_l72; 
        i_l49 = _t7_l49; 
        _t3_l49 = 0; 
        j_l49 = _t3_l49; 
        while (j_l49 < 1024) {
            _t7_l49 = i_l49; 
            i_l49 = _t7_l49; 
            _t35_l49 = 2; 
            _t11_l49 = j_l49; 
            _t36_l49 = _t35_l49 + _t11_l49; 
            _t18_l49 = y_1[_t11_l49]; 
            _t16_l49 = A[_t7_l49][_t11_l49]; 
            _t19_l49 = _t16_l49 * _t18_l49; 
            _t12_l49 = 4; 
            _t13_l49 = _t11_l49 + _t12_l49; 
            j_l49 = _t13_l49; 
            _t8_l49 = 1; 
            _t20_l49 = _t11_l49 + _t8_l49; 
            _t24_l49 = y_1[_t20_l49]; 
            _t22_l49 = A[_t7_l49][_t20_l49]; 
            _t25_l49 = _t22_l49 * _t24_l49; 
            _t26_l49 = _t19_l49 + _t25_l49; 
            _t27_l49 = 3; 
            _t28_l49 = _t27_l49 + _t11_l49; 
            _t32_l49 = y_1[_t28_l49]; 
            _t30_l49 = A[_t7_l49][_t28_l49]; 
            _t33_l49 = _t30_l49 * _t32_l49; 
            _t40_l49 = y_1[_t36_l49]; 
            _t43_l49 = x1[_t7_l49]; 
            _t34_l49 = _t26_l49 + _t33_l49; 
            _t38_l49 = A[_t7_l49][_t36_l49]; 
            _t41_l49 = _t38_l49 * _t40_l49; 
            _t42_l49 = _t34_l49 + _t41_l49; 
            _t44_l49 = _t42_l49 + _t43_l49; 
            x1[_t7_l49] = _t44_l49;
        } 
        _t7_l70 = _t7_l52_l72; 
        i_l70 = _t7_l70; 
        _t3_l70 = 0; 
        j_l70 = _t3_l70; 
        while (j_l70 < 1024) {
            _t8_l70 = 1; 
            _t11_l70 = j_l70; 
            _t20_l70 = _t11_l70 + _t8_l70; 
            _t7_l70 = i_l70; 
            i_l70 = _t7_l70; 
            _t66_l70 = x2[_t7_l70]; 
            _t62_l70 = A[_t20_l70][_t7_l70]; 
            _t63_l70 = y_2[_t20_l70]; 
            _t64_l70 = _t62_l70 * _t63_l70; 
            _t58_l70 = A[_t11_l70][_t7_l70]; 
            _t59_l70 = y_2[_t11_l70]; 
            _t60_l70 = _t58_l70 * _t59_l70; 
            _t65_l70 = _t60_l70 + _t64_l70; 
            _t67_l70 = _t65_l70 + _t66_l70; 
            x2[_t7_l70] = _t67_l70; 
            _t35_l70 = 2; 
            _t36_l70 = _t11_l70 + _t35_l70; 
            j_l70 = _t36_l70;
        }
    }
}
"
633,5,5.0510370783740655e-05,10485802,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    float _t123_l127_l106; 
    int _t82_l129_l109; 
    int _t80_l129_l109; 
    float _t98_l127_l106; 
    int _t86_l127_l106; 
    float _t92_l127_l106; 
    int i_l127_l106; 
    float _t121_l127_l106; 
    float _t120_l127_l106; 
    int _t81_l127_l106; 
    int i_l129_l109; 
    float _t95_l127_l106; 
    float _t117_l127_l106; 
    float _t91_l127_l106; 
    int j_l127_l106; 
    int _t93_l127_l106; 
    int _t85_l127_l106; 
    float _t115_l127_l106; 
    float _t119_l127_l106; 
    int _t76_l129_l109; 
    float _t97_l127_l106; 
    int _t84_l127_l106; 
    int _t76_l127_l106; 
    float _t116_l127_l106; 
    float _t100_l127_l106; 
    float _t101_l127_l106; 
    float _t99_l127_l106; 
    float _t89_l127_l106; 
    int _t80_l127_l106; 
    float _t124_l127_l106; 
    int _t81_l129_l109; 
    float _t122_l127_l106; 
    _t76_l129_l109 = 0; 
    i_l129_l109 = _t76_l129_l109; 
    while (i_l129_l109 < 1024) {
        _t80_l129_l109 = i_l129_l109; 
        _t80_l127_l106 = _t80_l129_l109; 
        i_l127_l106 = _t80_l127_l106; 
        _t76_l127_l106 = 0; 
        j_l127_l106 = _t76_l127_l106; 
        while (j_l127_l106 < 1024) {
            _t80_l127_l106 = i_l127_l106; 
            _t123_l127_l106 = x2[_t80_l127_l106]; 
            _t84_l127_l106 = j_l127_l106; 
            _t115_l127_l106 = A[_t84_l127_l106][_t80_l127_l106]; 
            _t116_l127_l106 = y_2[_t84_l127_l106]; 
            _t117_l127_l106 = _t115_l127_l106 * _t116_l127_l106; 
            _t81_l127_l106 = 1; 
            _t93_l127_l106 = _t84_l127_l106 + _t81_l127_l106; 
            _t120_l127_l106 = y_2[_t93_l127_l106]; 
            _t119_l127_l106 = A[_t93_l127_l106][_t80_l127_l106]; 
            _t121_l127_l106 = _t119_l127_l106 * _t120_l127_l106; 
            _t122_l127_l106 = _t117_l127_l106 + _t121_l127_l106; 
            _t124_l127_l106 = _t122_l127_l106 + _t123_l127_l106; 
            x2[_t80_l127_l106] = _t124_l127_l106; 
            i_l127_l106 = _t80_l127_l106; 
            _t85_l127_l106 = 2; 
            _t86_l127_l106 = _t84_l127_l106 + _t85_l127_l106; 
            j_l127_l106 = _t86_l127_l106; 
            _t97_l127_l106 = y_1[_t93_l127_l106]; 
            _t95_l127_l106 = A[_t80_l127_l106][_t93_l127_l106]; 
            _t98_l127_l106 = _t95_l127_l106 * _t97_l127_l106; 
            _t91_l127_l106 = y_1[_t84_l127_l106]; 
            _t89_l127_l106 = A[_t80_l127_l106][_t84_l127_l106]; 
            _t92_l127_l106 = _t89_l127_l106 * _t91_l127_l106; 
            _t99_l127_l106 = _t92_l127_l106 + _t98_l127_l106; 
            _t100_l127_l106 = x1[_t80_l127_l106]; 
            _t101_l127_l106 = _t99_l127_l106 + _t100_l127_l106; 
            x1[_t80_l127_l106] = _t101_l127_l106;
        } 
        _t81_l129_l109 = 1; 
        _t82_l129_l109 = _t80_l129_l109 + _t81_l129_l109; 
        i_l129_l109 = _t82_l129_l109;
    }
}
"
1917,13,2.847378891601693e-05,2349107,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    float _t180_l211; 
    float _t262_l288; 
    float _t190_l211; 
    float _t279_l288; 
    int _t243_l288; 
    float _t281_l288; 
    int _t133_l288; 
    float _t193_l211; 
    int _t145_l288; 
    float _t167_l211; 
    int _t169_l211; 
    float _t165_l211; 
    float _t267_l288; 
    int _t160_l288; 
    int _t145_l211; 
    int _t195_l211; 
    int _t142_l211; 
    float _t204_l211; 
    float _t264_l288; 
    float _t266_l288; 
    int _t196_l211; 
    float _t246_l288; 
    float _t201_l211; 
    int _t195_l288; 
    float _t150_l211; 
    float _t259_l288; 
    float _t228_l288; 
    int _t133_l298_l214; 
    int _t176_l211; 
    int i_l211; 
    int _t169_l288; 
    int _t141_l211; 
    int j_l288; 
    float _t280_l288; 
    float _t256_l288; 
    int _t143_l211; 
    int _t175_l211; 
    float _t178_l211; 
    float _t159_l211; 
    float _t163_l211; 
    float _t254_l288; 
    int _t138_l298_l214; 
    int _t139_l298_l214; 
    int _t160_l211; 
    float _t238_l288; 
    int _t137_l298_l214; 
    int _t196_l288; 
    float _t233_l288; 
    float _t186_l211; 
    float _t272_l288; 
    int _t142_l288; 
    float _t187_l211; 
    float _t234_l288; 
    int _t168_l211; 
    int _t152_l288; 
    int _t168_l288; 
    float _t171_l211; 
    int _t141_l288; 
    int _t244_l288; 
    float _t269_l288; 
    float _t242_l288; 
    float _t182_l211; 
    float _t206_l211; 
    float _t282_l288; 
    int i_l288; 
    float _t249_l288; 
    int _t219_l288; 
    float _t151_l211; 
    float _t202_l211; 
    float _t155_l211; 
    float _t250_l288; 
    float _t258_l288; 
    float _t278_l288; 
    float _t158_l211; 
    int _t175_l288; 
    int _t153_l288; 
    float _t240_l288; 
    float _t263_l288; 
    int _t188_l211; 
    float _t223_l288; 
    int _t153_l211; 
    float _t198_l211; 
    float _t166_l211; 
    int _t138_l288; 
    int _t176_l288; 
    float _t200_l211; 
    float _t253_l288; 
    int _t286_l298_l214; 
    float _t268_l288; 
    float _t227_l288; 
    float _t173_l211; 
    float _t293_l298_l214; 
    int _t161_l211; 
    float _t229_l288; 
    float _t192_l211; 
    int _t146_l288; 
    float _t205_l211; 
    float _t231_l288; 
    int _t220_l288; 
    int _t161_l288; 
    int _t138_l211; 
    int _t188_l288; 
    float _t222_l288; 
    float _t148_l211; 
    float _t226_l288; 
    float _t283_l288; 
    int _t143_l288; 
    float _t184_l211; 
    float _t232_l288; 
    float _t276_l288; 
    float _t271_l288; 
    int _t235_l288; 
    float _t252_l288; 
    float _t295_l298_l214; 
    float _t174_l211; 
    int _t236_l288; 
    float _t203_l211; 
    float _t274_l288; 
    int _t152_l211; 
    float _t241_l288; 
    int _t137_l211; 
    int _t133_l211; 
    float _t224_l288; 
    float _t261_l288; 
    float _t194_l211; 
    float _t289_l298_l214; 
    float _t157_l211; 
    int i_l298_l214; 
    float _t257_l288; 
    int _t146_l211; 
    float _t294_l298_l214; 
    int j_l211; 
    float _t248_l288; 
    int _t137_l288; 
    float _t291_l298_l214; 
    float _t181_l211; 
    float _t273_l288; 
    _t133_l298_l214 = 0; 
    i_l298_l214 = _t133_l298_l214; 
    while (i_l298_l214 < 1024) {
        _t138_l298_l214 = 1; 
        _t137_l298_l214 = i_l298_l214; 
        _t139_l298_l214 = _t137_l298_l214 + _t138_l298_l214; 
        i_l298_l214 = _t139_l298_l214; 
        _t286_l298_l214 = 1023; 
        _t293_l298_l214 = y_2[_t286_l298_l214]; 
        _t137_l211 = _t137_l298_l214; 
        i_l211 = _t137_l211; 
        _t133_l211 = 0; 
        j_l211 = _t133_l211; 
        while (j_l211 < 1024) {
            _t141_l211 = j_l211; 
            _t186_l211 = y_1[_t141_l211]; 
            _t137_l211 = i_l211; 
            _t184_l211 = A[_t137_l211][_t141_l211]; 
            _t187_l211 = _t184_l211 * _t186_l211; 
            _t138_l211 = 1; 
            _t188_l211 = _t141_l211 + _t138_l211; 
            _t192_l211 = y_1[_t188_l211]; 
            _t190_l211 = A[_t137_l211][_t188_l211]; 
            _t193_l211 = _t190_l211 * _t192_l211; 
            _t194_l211 = _t187_l211 + _t193_l211; 
            _t195_l211 = 3; 
            _t196_l211 = _t195_l211 + _t141_l211; 
            _t200_l211 = y_1[_t196_l211]; 
            _t198_l211 = A[_t137_l211][_t196_l211]; 
            _t201_l211 = _t198_l211 * _t200_l211; 
            _t202_l211 = _t194_l211 + _t201_l211; 
            _t175_l211 = 4; 
            _t176_l211 = _t175_l211 + _t141_l211; 
            i_l211 = _t137_l211; 
            _t160_l211 = 7; 
            _t161_l211 = _t160_l211 + _t141_l211; 
            _t165_l211 = y_1[_t161_l211]; 
            _t145_l211 = 5; 
            _t146_l211 = _t145_l211 + _t141_l211; 
            _t142_l211 = 8; 
            _t143_l211 = _t141_l211 + _t142_l211; 
            j_l211 = _t143_l211; 
            _t152_l211 = 6; 
            _t153_l211 = _t152_l211 + _t141_l211; 
            _t205_l211 = x1[_t137_l211]; 
            _t157_l211 = y_1[_t153_l211]; 
            _t155_l211 = A[_t137_l211][_t153_l211]; 
            _t158_l211 = _t155_l211 * _t157_l211; 
            _t168_l211 = 2; 
            _t150_l211 = y_1[_t146_l211]; 
            _t178_l211 = A[_t137_l211][_t176_l211]; 
            _t180_l211 = y_1[_t176_l211]; 
            _t181_l211 = _t178_l211 * _t180_l211; 
            _t169_l211 = _t168_l211 + _t141_l211; 
            _t173_l211 = y_1[_t169_l211]; 
            _t171_l211 = A[_t137_l211][_t169_l211]; 
            _t174_l211 = _t171_l211 * _t173_l211; 
            _t182_l211 = _t174_l211 + _t181_l211; 
            _t203_l211 = _t182_l211 + _t202_l211; 
            _t163_l211 = A[_t137_l211][_t161_l211]; 
            _t166_l211 = _t163_l211 * _t165_l211; 
            _t148_l211 = A[_t137_l211][_t146_l211]; 
            _t151_l211 = _t148_l211 * _t150_l211; 
            _t159_l211 = _t151_l211 + _t158_l211; 
            _t167_l211 = _t159_l211 + _t166_l211; 
            _t204_l211 = _t167_l211 + _t203_l211; 
            _t206_l211 = _t204_l211 + _t205_l211; 
            x1[_t137_l211] = _t206_l211;
        } 
        _t291_l298_l214 = A[_t286_l298_l214][_t137_l298_l214]; 
        _t294_l298_l214 = _t291_l298_l214 * _t293_l298_l214; 
        _t137_l288 = _t137_l298_l214; 
        i_l288 = _t137_l288; 
        _t133_l288 = 0; 
        j_l288 = _t133_l288; 
        while (j_l288 < 1023) {
            _t141_l288 = j_l288; 
            _t253_l288 = y_2[_t141_l288]; 
            _t137_l288 = i_l288; 
            _t195_l288 = 3; 
            _t196_l288 = _t195_l288 + _t141_l288; 
            _t138_l288 = 1; 
            _t188_l288 = _t141_l288 + _t138_l288; 
            _t175_l288 = 4; 
            _t176_l288 = _t175_l288 + _t141_l288; 
            _t222_l288 = A[_t176_l288][_t137_l288]; 
            _t223_l288 = y_2[_t176_l288]; 
            _t224_l288 = _t222_l288 * _t223_l288; 
            _t145_l288 = 5; 
            _t146_l288 = _t145_l288 + _t141_l288; 
            _t226_l288 = A[_t146_l288][_t137_l288]; 
            _t227_l288 = y_2[_t146_l288]; 
            _t228_l288 = _t226_l288 * _t227_l288; 
            _t229_l288 = _t224_l288 + _t228_l288; 
            _t152_l288 = 6; 
            _t153_l288 = _t152_l288 + _t141_l288; 
            _t232_l288 = y_2[_t153_l288]; 
            _t231_l288 = A[_t153_l288][_t137_l288]; 
            _t233_l288 = _t231_l288 * _t232_l288; 
            _t234_l288 = _t229_l288 + _t233_l288; 
            _t235_l288 = 9; 
            _t236_l288 = _t235_l288 + _t141_l288; 
            _t240_l288 = y_2[_t236_l288]; 
            _t238_l288 = A[_t236_l288][_t137_l288]; 
            _t241_l288 = _t238_l288 * _t240_l288; 
            _t242_l288 = _t234_l288 + _t241_l288; 
            _t168_l288 = 2; 
            _t169_l288 = _t168_l288 + _t141_l288; 
            _t282_l288 = x2[_t137_l288]; 
            _t160_l288 = 7; 
            _t161_l288 = _t160_l288 + _t141_l288; 
            _t271_l288 = A[_t161_l288][_t137_l288]; 
            _t243_l288 = 10; 
            _t244_l288 = _t243_l288 + _t141_l288; 
            _t248_l288 = y_2[_t244_l288]; 
            _t246_l288 = A[_t244_l288][_t137_l288]; 
            _t249_l288 = _t246_l288 * _t248_l288; 
            _t250_l288 = _t242_l288 + _t249_l288; 
            _t256_l288 = A[_t169_l288][_t137_l288]; 
            _t257_l288 = y_2[_t169_l288]; 
            _t258_l288 = _t256_l288 * _t257_l288; 
            _t252_l288 = A[_t141_l288][_t137_l288]; 
            _t254_l288 = _t252_l288 * _t253_l288; 
            _t259_l288 = _t254_l288 + _t258_l288; 
            _t261_l288 = A[_t196_l288][_t137_l288]; 
            _t262_l288 = y_2[_t196_l288]; 
            _t263_l288 = _t261_l288 * _t262_l288; 
            _t264_l288 = _t259_l288 + _t263_l288; 
            _t266_l288 = A[_t188_l288][_t137_l288]; 
            _t267_l288 = y_2[_t188_l288]; 
            _t268_l288 = _t266_l288 * _t267_l288; 
            _t269_l288 = _t264_l288 + _t268_l288; 
            _t272_l288 = y_2[_t161_l288]; 
            _t273_l288 = _t271_l288 * _t272_l288; 
            _t274_l288 = _t269_l288 + _t273_l288; 
            _t142_l288 = 8; 
            _t143_l288 = _t142_l288 + _t141_l288; 
            _t278_l288 = y_2[_t143_l288]; 
            _t276_l288 = A[_t143_l288][_t137_l288]; 
            _t279_l288 = _t276_l288 * _t278_l288; 
            _t280_l288 = _t274_l288 + _t279_l288; 
            _t281_l288 = _t250_l288 + _t280_l288; 
            _t283_l288 = _t281_l288 + _t282_l288; 
            x2[_t137_l288] = _t283_l288; 
            _t219_l288 = 11; 
            _t220_l288 = _t141_l288 + _t219_l288; 
            j_l288 = _t220_l288; 
            i_l288 = _t137_l288;
        } 
        _t289_l298_l214 = x2[_t137_l298_l214]; 
        _t295_l298_l214 = _t289_l298_l214 + _t294_l298_l214; 
        x2[_t137_l298_l214] = _t295_l298_l214;
    }
}
"
529,5,9.100427269004285e-05,20971540,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    int _t307_l340_l324; 
    float _t313_l340_l324; 
    float _t335_l340_l324; 
    int _t311_l340_l324; 
    float _t319_l340_l324; 
    int _t307_l342_l327; 
    int j_l340_l324; 
    float _t318_l340_l324; 
    float _t317_l340_l324; 
    float _t337_l340_l324; 
    float _t334_l340_l324; 
    int _t306_l340_l324; 
    int _t308_l342_l327; 
    float _t336_l340_l324; 
    int _t306_l342_l327; 
    int _t310_l340_l324; 
    float _t315_l340_l324; 
    float _t332_l340_l324; 
    int i_l340_l324; 
    int _t302_l342_l327; 
    int i_l342_l327; 
    int _t302_l340_l324; 
    _t302_l342_l327 = 0; 
    i_l342_l327 = _t302_l342_l327; 
    while (i_l342_l327 < 1024) {
        _t306_l342_l327 = i_l342_l327; 
        _t307_l342_l327 = 1; 
        _t308_l342_l327 = _t306_l342_l327 + _t307_l342_l327; 
        i_l342_l327 = _t308_l342_l327; 
        _t306_l340_l324 = _t306_l342_l327; 
        i_l340_l324 = _t306_l340_l324; 
        _t302_l340_l324 = 0; 
        j_l340_l324 = _t302_l340_l324; 
        while (j_l340_l324 < 1024) {
            _t310_l340_l324 = j_l340_l324; 
            _t317_l340_l324 = y_1[_t310_l340_l324]; 
            _t307_l340_l324 = 1; 
            _t306_l340_l324 = i_l340_l324; 
            i_l340_l324 = _t306_l340_l324; 
            _t334_l340_l324 = A[_t310_l340_l324][_t306_l340_l324]; 
            _t335_l340_l324 = y_2[_t310_l340_l324]; 
            _t336_l340_l324 = _t334_l340_l324 * _t335_l340_l324; 
            _t332_l340_l324 = x2[_t306_l340_l324]; 
            _t337_l340_l324 = _t332_l340_l324 + _t336_l340_l324; 
            x2[_t306_l340_l324] = _t337_l340_l324; 
            _t315_l340_l324 = A[_t306_l340_l324][_t310_l340_l324]; 
            _t318_l340_l324 = _t315_l340_l324 * _t317_l340_l324; 
            _t313_l340_l324 = x1[_t306_l340_l324]; 
            _t319_l340_l324 = _t313_l340_l324 + _t318_l340_l324; 
            _t311_l340_l324 = _t310_l340_l324 + _t307_l340_l324; 
            j_l340_l324 = _t311_l340_l324; 
            x1[_t306_l340_l324] = _t319_l340_l324;
        }
    }
}
"
581,5,7.359712617471814e-05,15728671,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    float _t381_l392; 
    int _t350_l368; 
    float _t379_l392; 
    int j_l368; 
    float _t361_l368; 
    float _t386_l392; 
    int _t350_l392; 
    float _t359_l368; 
    int _t351_l371_l394; 
    int i_l392; 
    float _t363_l368; 
    int _t352_l371_l394; 
    float _t357_l368; 
    float _t388_l392; 
    int j_l392; 
    float _t380_l392; 
    int _t355_l368; 
    int _t354_l368; 
    int _t351_l392; 
    int _t346_l368; 
    float _t389_l392; 
    int _t346_l371_l394; 
    int _t354_l392; 
    float _t362_l368; 
    float _t385_l392; 
    int i_l371_l394; 
    float _t387_l392; 
    int _t350_l371_l394; 
    float _t383_l392; 
    int _t351_l368; 
    int _t377_l392; 
    int i_l368; 
    int _t346_l392; 
    int _t376_l392; 
    int _t355_l392; 
    _t346_l371_l394 = 0; 
    i_l371_l394 = _t346_l371_l394; 
    while (i_l371_l394 < 1024) {
        _t350_l371_l394 = i_l371_l394; 
        _t350_l368 = _t350_l371_l394; 
        i_l368 = _t350_l368; 
        _t346_l368 = 0; 
        j_l368 = _t346_l368; 
        while (j_l368 < 1024) {
            _t354_l368 = j_l368; 
            _t361_l368 = y_1[_t354_l368]; 
            _t350_l368 = i_l368; 
            _t359_l368 = A[_t350_l368][_t354_l368]; 
            _t362_l368 = _t359_l368 * _t361_l368; 
            _t357_l368 = x1[_t350_l368]; 
            _t363_l368 = _t357_l368 + _t362_l368; 
            i_l368 = _t350_l368; 
            _t351_l368 = 1; 
            _t355_l368 = _t354_l368 + _t351_l368; 
            j_l368 = _t355_l368; 
            x1[_t350_l368] = _t363_l368;
        } 
        _t351_l371_l394 = 1; 
        _t352_l371_l394 = _t350_l371_l394 + _t351_l371_l394; 
        i_l371_l394 = _t352_l371_l394; 
        _t350_l392 = _t350_l371_l394; 
        i_l392 = _t350_l392; 
        _t346_l392 = 0; 
        j_l392 = _t346_l392; 
        while (j_l392 < 1024) {
            _t354_l392 = j_l392; 
            _t350_l392 = i_l392; 
            _t379_l392 = A[_t354_l392][_t350_l392]; 
            _t380_l392 = y_2[_t354_l392]; 
            _t381_l392 = _t379_l392 * _t380_l392; 
            _t388_l392 = x2[_t350_l392]; 
            _t351_l392 = 1; 
            _t355_l392 = _t354_l392 + _t351_l392; 
            _t383_l392 = A[_t355_l392][_t350_l392]; 
            _t385_l392 = y_2[_t355_l392]; 
            _t386_l392 = _t383_l392 * _t385_l392; 
            _t387_l392 = _t381_l392 + _t386_l392; 
            _t389_l392 = _t387_l392 + _t388_l392; 
            x2[_t350_l392] = _t389_l392; 
            _t376_l392 = 2; 
            _t377_l392 = _t354_l392 + _t376_l392; 
            j_l392 = _t377_l392; 
            i_l392 = _t350_l392;
        }
    }
}
"
841,5,3.321698750369251e-05,5242962,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    float _t411_l475_l444; 
    float _t420_l475_l444; 
    float _t470_l475_l444; 
    int _t407_l475_l444; 
    float _t455_l475_l444; 
    int _t406_l475_l444; 
    float _t472_l475_l444; 
    float _t467_l475_l444; 
    int _t403_l475_l444; 
    int _t431_l475_l444; 
    float _t437_l475_l444; 
    float _t427_l475_l444; 
    float _t457_l475_l444; 
    int _t404_l477_l447; 
    int _t415_l475_l444; 
    float _t428_l475_l444; 
    float _t463_l475_l444; 
    int _t402_l477_l447; 
    int i_l475_l444; 
    float _t419_l475_l444; 
    int _t408_l475_l444; 
    float _t469_l475_l444; 
    float _t417_l475_l444; 
    float _t421_l475_l444; 
    int _t398_l477_l447; 
    float _t453_l475_l444; 
    float _t435_l475_l444; 
    float _t468_l475_l444; 
    int _t422_l475_l444; 
    float _t439_l475_l444; 
    float _t458_l475_l444; 
    float _t454_l475_l444; 
    float _t413_l475_l444; 
    int _t423_l475_l444; 
    float _t459_l475_l444; 
    float _t460_l475_l444; 
    float _t462_l475_l444; 
    int _t398_l475_l444; 
    float _t425_l475_l444; 
    float _t436_l475_l444; 
    float _t464_l475_l444; 
    float _t433_l475_l444; 
    float _t465_l475_l444; 
    float _t438_l475_l444; 
    float _t414_l475_l444; 
    int j_l475_l444; 
    float _t429_l475_l444; 
    int _t430_l475_l444; 
    int _t403_l477_l447; 
    int i_l477_l447; 
    int _t402_l475_l444; 
    float _t471_l475_l444; 
    _t398_l477_l447 = 0; 
    i_l477_l447 = _t398_l477_l447; 
    while (i_l477_l447 < 1024) {
        _t402_l477_l447 = i_l477_l447; 
        _t403_l477_l447 = 1; 
        _t404_l477_l447 = _t402_l477_l447 + _t403_l477_l447; 
        i_l477_l447 = _t404_l477_l447; 
        _t402_l475_l444 = _t402_l477_l447; 
        i_l475_l444 = _t402_l475_l444; 
        _t398_l475_l444 = 0; 
        j_l475_l444 = _t398_l475_l444; 
        while (j_l475_l444 < 1024) {
            _t406_l475_l444 = j_l475_l444; 
            _t430_l475_l444 = 2; 
            _t431_l475_l444 = _t430_l475_l444 + _t406_l475_l444; 
            _t458_l475_l444 = y_2[_t431_l475_l444]; 
            _t402_l475_l444 = i_l475_l444; 
            i_l475_l444 = _t402_l475_l444; 
            _t422_l475_l444 = 3; 
            _t423_l475_l444 = _t422_l475_l444 + _t406_l475_l444; 
            _t462_l475_l444 = A[_t423_l475_l444][_t402_l475_l444]; 
            _t463_l475_l444 = y_2[_t423_l475_l444]; 
            _t464_l475_l444 = _t462_l475_l444 * _t463_l475_l444; 
            _t457_l475_l444 = A[_t431_l475_l444][_t402_l475_l444]; 
            _t459_l475_l444 = _t457_l475_l444 * _t458_l475_l444; 
            _t453_l475_l444 = A[_t406_l475_l444][_t402_l475_l444]; 
            _t454_l475_l444 = y_2[_t406_l475_l444]; 
            _t455_l475_l444 = _t453_l475_l444 * _t454_l475_l444; 
            _t460_l475_l444 = _t455_l475_l444 + _t459_l475_l444; 
            _t465_l475_l444 = _t460_l475_l444 + _t464_l475_l444; 
            _t403_l475_l444 = 1; 
            _t415_l475_l444 = _t406_l475_l444 + _t403_l475_l444; 
            _t467_l475_l444 = A[_t415_l475_l444][_t402_l475_l444]; 
            _t468_l475_l444 = y_2[_t415_l475_l444]; 
            _t469_l475_l444 = _t467_l475_l444 * _t468_l475_l444; 
            _t470_l475_l444 = _t465_l475_l444 + _t469_l475_l444; 
            _t471_l475_l444 = x2[_t402_l475_l444]; 
            _t472_l475_l444 = _t470_l475_l444 + _t471_l475_l444; 
            x2[_t402_l475_l444] = _t472_l475_l444; 
            _t413_l475_l444 = y_1[_t406_l475_l444]; 
            _t411_l475_l444 = A[_t402_l475_l444][_t406_l475_l444]; 
            _t414_l475_l444 = _t411_l475_l444 * _t413_l475_l444; 
            _t419_l475_l444 = y_1[_t415_l475_l444]; 
            _t417_l475_l444 = A[_t402_l475_l444][_t415_l475_l444]; 
            _t420_l475_l444 = _t417_l475_l444 * _t419_l475_l444; 
            _t421_l475_l444 = _t414_l475_l444 + _t420_l475_l444; 
            _t407_l475_l444 = 4; 
            _t408_l475_l444 = _t406_l475_l444 + _t407_l475_l444; 
            j_l475_l444 = _t408_l475_l444; 
            _t427_l475_l444 = y_1[_t423_l475_l444]; 
            _t425_l475_l444 = A[_t402_l475_l444][_t423_l475_l444]; 
            _t428_l475_l444 = _t425_l475_l444 * _t427_l475_l444; 
            _t429_l475_l444 = _t421_l475_l444 + _t428_l475_l444; 
            _t435_l475_l444 = y_1[_t431_l475_l444]; 
            _t433_l475_l444 = A[_t402_l475_l444][_t431_l475_l444]; 
            _t436_l475_l444 = _t433_l475_l444 * _t435_l475_l444; 
            _t437_l475_l444 = _t429_l475_l444 + _t436_l475_l444; 
            _t438_l475_l444 = x1[_t402_l475_l444]; 
            _t439_l475_l444 = _t437_l475_l444 + _t438_l475_l444; 
            x1[_t402_l475_l444] = _t439_l475_l444;
        }
    }
}
"
1049,5,3.1242270779330283e-05,3932252,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    float _t505_l559; 
    float _t548_l559; 
    int _t509_l559; 
    int _t490_l559; 
    float _t580_l590; 
    float _t578_l590; 
    float _t506_l559; 
    float _t546_l559; 
    int _t517_l590; 
    float _t540_l559; 
    float _t552_l559; 
    float _t511_l559; 
    int _t517_l559; 
    float _t575_l590; 
    int _t491_l559; 
    float _t513_l559; 
    float _t507_l559; 
    int _t486_l559; 
    float _t550_l559; 
    float _t534_l559; 
    float _t551_l559; 
    float _t503_l559; 
    float _t549_l559; 
    int _t508_l559; 
    float _t530_l559; 
    float _t521_l559; 
    float _t538_l559; 
    int _t543_l559; 
    int _t489_l590; 
    int j_l590; 
    float _t572_l590; 
    float _t498_l559; 
    int _t544_l559; 
    float _t519_l559; 
    float _t579_l590; 
    int _t536_l559; 
    float _t528_l559; 
    float _t582_l590; 
    int _t524_l590; 
    int _t485_l592_l562; 
    int _t501_l559; 
    float _t577_l590; 
    float _t585_l590; 
    float _t514_l559; 
    float _t568_l590; 
    int _t485_l559; 
    float _t499_l559; 
    int _t485_l590; 
    float _t515_l559; 
    int _t523_l590; 
    float _t584_l590; 
    float _t554_l559; 
    int _t524_l559; 
    int _t486_l590; 
    int _t516_l559; 
    float _t570_l590; 
    int _t543_l590; 
    int _t544_l590; 
    int _t481_l592_l562; 
    float _t529_l559; 
    int i_l592_l562; 
    int _t523_l559; 
    int _t481_l590; 
    int _t536_l590; 
    int _t489_l559; 
    float _t586_l590; 
    float _t553_l559; 
    float _t526_l559; 
    int _t493_l559; 
    float _t569_l590; 
    int _t494_l559; 
    float _t532_l559; 
    float _t574_l590; 
    int i_l590; 
    float _t587_l590; 
    float _t496_l559; 
    float _t583_l590; 
    float _t542_l559; 
    int _t487_l592_l562; 
    int _t516_l590; 
    int _t500_l559; 
    int _t486_l592_l562; 
    float _t541_l559; 
    int _t481_l559; 
    float _t573_l590; 
    float _t535_l559; 
    int j_l559; 
    float _t522_l559; 
    int i_l559; 
    _t481_l592_l562 = 0; 
    i_l592_l562 = _t481_l592_l562; 
    while (i_l592_l562 < 1024) {
        _t485_l592_l562 = i_l592_l562; 
        _t486_l592_l562 = 1; 
        _t487_l592_l562 = _t485_l592_l562 + _t486_l592_l562; 
        i_l592_l562 = _t487_l592_l562; 
        _t485_l590 = _t485_l592_l562; 
        i_l590 = _t485_l590; 
        _t481_l590 = 0; 
        j_l590 = _t481_l590; 
        while (j_l590 < 1024) {
            _t485_l590 = i_l590; 
            _t586_l590 = x2[_t485_l590]; 
            i_l590 = _t485_l590; 
            _t516_l590 = 2; 
            _t489_l590 = j_l590; 
            _t568_l590 = A[_t489_l590][_t485_l590]; 
            _t569_l590 = y_2[_t489_l590]; 
            _t570_l590 = _t568_l590 * _t569_l590; 
            _t517_l590 = _t516_l590 + _t489_l590; 
            _t573_l590 = y_2[_t517_l590]; 
            _t572_l590 = A[_t517_l590][_t485_l590]; 
            _t574_l590 = _t572_l590 * _t573_l590; 
            _t575_l590 = _t570_l590 + _t574_l590; 
            _t486_l590 = 1; 
            _t536_l590 = _t489_l590 + _t486_l590; 
            _t582_l590 = A[_t536_l590][_t485_l590]; 
            _t523_l590 = 4; 
            _t524_l590 = _t489_l590 + _t523_l590; 
            j_l590 = _t524_l590; 
            _t543_l590 = 3; 
            _t544_l590 = _t543_l590 + _t489_l590; 
            _t578_l590 = y_2[_t544_l590]; 
            _t583_l590 = y_2[_t536_l590]; 
            _t584_l590 = _t582_l590 * _t583_l590; 
            _t577_l590 = A[_t544_l590][_t485_l590]; 
            _t579_l590 = _t577_l590 * _t578_l590; 
            _t580_l590 = _t575_l590 + _t579_l590; 
            _t585_l590 = _t580_l590 + _t584_l590; 
            _t587_l590 = _t585_l590 + _t586_l590; 
            x2[_t485_l590] = _t587_l590;
        } 
        _t485_l559 = _t485_l592_l562; 
        i_l559 = _t485_l559; 
        _t481_l559 = 0; 
        j_l559 = _t481_l559; 
        while (j_l559 < 1024) {
            _t489_l559 = j_l559; 
            _t508_l559 = 7; 
            _t509_l559 = _t508_l559 + _t489_l559; 
            _t490_l559 = 8; 
            _t491_l559 = _t489_l559 + _t490_l559; 
            _t485_l559 = i_l559; 
            i_l559 = _t485_l559; 
            _t516_l559 = 2; 
            _t493_l559 = 5; 
            _t494_l559 = _t493_l559 + _t489_l559; 
            _t498_l559 = y_1[_t494_l559]; 
            _t543_l559 = 3; 
            _t544_l559 = _t543_l559 + _t489_l559; 
            _t546_l559 = A[_t485_l559][_t544_l559]; 
            _t548_l559 = y_1[_t544_l559]; 
            _t549_l559 = _t546_l559 * _t548_l559; 
            _t500_l559 = 6; 
            _t501_l559 = _t500_l559 + _t489_l559; 
            _t505_l559 = y_1[_t501_l559]; 
            j_l559 = _t491_l559; 
            _t486_l559 = 1; 
            _t536_l559 = _t489_l559 + _t486_l559; 
            _t538_l559 = A[_t485_l559][_t536_l559]; 
            _t523_l559 = 4; 
            _t524_l559 = _t523_l559 + _t489_l559; 
            _t513_l559 = y_1[_t509_l559]; 
            _t511_l559 = A[_t485_l559][_t509_l559]; 
            _t514_l559 = _t511_l559 * _t513_l559; 
            _t503_l559 = A[_t485_l559][_t501_l559]; 
            _t506_l559 = _t503_l559 * _t505_l559; 
            _t496_l559 = A[_t485_l559][_t494_l559]; 
            _t499_l559 = _t496_l559 * _t498_l559; 
            _t507_l559 = _t499_l559 + _t506_l559; 
            _t515_l559 = _t507_l559 + _t514_l559; 
            _t517_l559 = _t516_l559 + _t489_l559; 
            _t521_l559 = y_1[_t517_l559]; 
            _t519_l559 = A[_t485_l559][_t517_l559]; 
            _t522_l559 = _t519_l559 * _t521_l559; 
            _t528_l559 = y_1[_t524_l559]; 
            _t526_l559 = A[_t485_l559][_t524_l559]; 
            _t529_l559 = _t526_l559 * _t528_l559; 
            _t530_l559 = _t522_l559 + _t529_l559; 
            _t540_l559 = y_1[_t536_l559]; 
            _t541_l559 = _t538_l559 * _t540_l559; 
            _t534_l559 = y_1[_t489_l559]; 
            _t532_l559 = A[_t485_l559][_t489_l559]; 
            _t535_l559 = _t532_l559 * _t534_l559; 
            _t542_l559 = _t535_l559 + _t541_l559; 
            _t550_l559 = _t542_l559 + _t549_l559; 
            _t551_l559 = _t530_l559 + _t550_l559; 
            _t552_l559 = _t515_l559 + _t551_l559; 
            _t553_l559 = x1[_t485_l559]; 
            _t554_l559 = _t552_l559 + _t553_l559; 
            x1[_t485_l559] = _t554_l559;
        }
    }
}
"
1257,5,2.9692342650378123e-05,2621552,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    int _t651_l725_l674; 
    float _t720_l725_l674; 
    float _t647_l725_l674; 
    int _t609_l725_l674; 
    float _t705_l725_l674; 
    float _t685_l725_l674; 
    int _t638_l725_l674; 
    int _t604_l725_l674; 
    int _t616_l725_l674; 
    int j_l725_l674; 
    float _t669_l725_l674; 
    int _t600_l725_l674; 
    int _t658_l725_l674; 
    float _t636_l725_l674; 
    float _t695_l725_l674; 
    float _t667_l725_l674; 
    float _t613_l725_l674; 
    float _t702_l725_l674; 
    float _t712_l725_l674; 
    float _t703_l725_l674; 
    float _t668_l725_l674; 
    float _t653_l725_l674; 
    float _t650_l725_l674; 
    float _t621_l725_l674; 
    int _t608_l725_l674; 
    float _t687_l725_l674; 
    float _t618_l725_l674; 
    float _t663_l725_l674; 
    float _t664_l725_l674; 
    float _t692_l725_l674; 
    int _t601_l725_l674; 
    int _t601_l727_l677; 
    int _t615_l725_l674; 
    int _t605_l725_l674; 
    float _t698_l725_l674; 
    float _t611_l725_l674; 
    float _t641_l725_l674; 
    float _t714_l725_l674; 
    float _t655_l725_l674; 
    int _t602_l727_l677; 
    float _t704_l725_l674; 
    float _t622_l725_l674; 
    float _t657_l725_l674; 
    float _t709_l725_l674; 
    float _t643_l725_l674; 
    float _t665_l725_l674; 
    float _t629_l725_l674; 
    int _t631_l725_l674; 
    float _t614_l725_l674; 
    float _t628_l725_l674; 
    float _t708_l725_l674; 
    float _t707_l725_l674; 
    float _t722_l725_l674; 
    float _t626_l725_l674; 
    float _t656_l725_l674; 
    float _t683_l725_l674; 
    int _t632_l725_l674; 
    float _t716_l725_l674; 
    float _t690_l725_l674; 
    float _t717_l725_l674; 
    float _t713_l725_l674; 
    float _t644_l725_l674; 
    float _t684_l725_l674; 
    float _t637_l725_l674; 
    float _t645_l725_l674; 
    float _t649_l725_l674; 
    float _t711_l725_l674; 
    int _t606_l725_l674; 
    float _t661_l725_l674; 
    int _t659_l725_l674; 
    int _t639_l725_l674; 
    float _t688_l725_l674; 
    int _t623_l725_l674; 
    float _t620_l725_l674; 
    int _t624_l725_l674; 
    int _t596_l725_l674; 
    float _t694_l725_l674; 
    int i_l725_l674; 
    float _t634_l725_l674; 
    int _t596_l727_l677; 
    float _t721_l725_l674; 
    float _t693_l725_l674; 
    int _t600_l727_l677; 
    float _t689_l725_l674; 
    float _t630_l725_l674; 
    float _t666_l725_l674; 
    float _t719_l725_l674; 
    float _t699_l725_l674; 
    int i_l727_l677; 
    float _t697_l725_l674; 
    float _t718_l725_l674; 
    float _t700_l725_l674; 
    _t596_l727_l677 = 0; 
    i_l727_l677 = _t596_l727_l677; 
    while (i_l727_l677 < 1024) {
        _t600_l727_l677 = i_l727_l677; 
        _t601_l727_l677 = 1; 
        _t602_l727_l677 = _t600_l727_l677 + _t601_l727_l677; 
        i_l727_l677 = _t602_l727_l677; 
        _t600_l725_l674 = _t600_l727_l677; 
        i_l725_l674 = _t600_l725_l674; 
        _t596_l725_l674 = 0; 
        j_l725_l674 = _t596_l725_l674; 
        while (j_l725_l674 < 1024) {
            _t604_l725_l674 = j_l725_l674; 
            _t615_l725_l674 = 6; 
            _t616_l725_l674 = _t615_l725_l674 + _t604_l725_l674; 
            _t600_l725_l674 = i_l725_l674; 
            _t668_l725_l674 = x1[_t600_l725_l674]; 
            _t631_l725_l674 = 2; 
            _t632_l725_l674 = _t631_l725_l674 + _t604_l725_l674; 
            _t634_l725_l674 = A[_t600_l725_l674][_t632_l725_l674]; 
            _t636_l725_l674 = y_1[_t632_l725_l674]; 
            _t637_l725_l674 = _t634_l725_l674 * _t636_l725_l674; 
            _t638_l725_l674 = 4; 
            _t639_l725_l674 = _t638_l725_l674 + _t604_l725_l674; 
            _t643_l725_l674 = y_1[_t639_l725_l674]; 
            _t641_l725_l674 = A[_t600_l725_l674][_t639_l725_l674]; 
            _t644_l725_l674 = _t641_l725_l674 * _t643_l725_l674; 
            _t645_l725_l674 = _t637_l725_l674 + _t644_l725_l674; 
            _t658_l725_l674 = 3; 
            _t659_l725_l674 = _t658_l725_l674 + _t604_l725_l674; 
            _t661_l725_l674 = A[_t600_l725_l674][_t659_l725_l674]; 
            _t663_l725_l674 = y_1[_t659_l725_l674]; 
            _t664_l725_l674 = _t661_l725_l674 * _t663_l725_l674; 
            _t649_l725_l674 = y_1[_t604_l725_l674]; 
            _t647_l725_l674 = A[_t600_l725_l674][_t604_l725_l674]; 
            _t650_l725_l674 = _t647_l725_l674 * _t649_l725_l674; 
            _t601_l725_l674 = 1; 
            _t651_l725_l674 = _t604_l725_l674 + _t601_l725_l674; 
            _t653_l725_l674 = A[_t600_l725_l674][_t651_l725_l674]; 
            _t655_l725_l674 = y_1[_t651_l725_l674]; 
            _t656_l725_l674 = _t653_l725_l674 * _t655_l725_l674; 
            _t657_l725_l674 = _t650_l725_l674 + _t656_l725_l674; 
            _t665_l725_l674 = _t657_l725_l674 + _t664_l725_l674; 
            _t666_l725_l674 = _t645_l725_l674 + _t665_l725_l674; 
            _t623_l725_l674 = 7; 
            _t624_l725_l674 = _t623_l725_l674 + _t604_l725_l674; 
            _t626_l725_l674 = A[_t600_l725_l674][_t624_l725_l674]; 
            _t628_l725_l674 = y_1[_t624_l725_l674]; 
            _t629_l725_l674 = _t626_l725_l674 * _t628_l725_l674; 
            _t618_l725_l674 = A[_t600_l725_l674][_t616_l725_l674]; 
            _t620_l725_l674 = y_1[_t616_l725_l674]; 
            _t621_l725_l674 = _t618_l725_l674 * _t620_l725_l674; 
            _t608_l725_l674 = 5; 
            _t609_l725_l674 = _t608_l725_l674 + _t604_l725_l674; 
            _t613_l725_l674 = y_1[_t609_l725_l674]; 
            _t611_l725_l674 = A[_t600_l725_l674][_t609_l725_l674]; 
            _t614_l725_l674 = _t611_l725_l674 * _t613_l725_l674; 
            _t622_l725_l674 = _t614_l725_l674 + _t621_l725_l674; 
            _t630_l725_l674 = _t622_l725_l674 + _t629_l725_l674; 
            _t667_l725_l674 = _t630_l725_l674 + _t666_l725_l674; 
            _t669_l725_l674 = _t667_l725_l674 + _t668_l725_l674; 
            x1[_t600_l725_l674] = _t669_l725_l674; 
            _t721_l725_l674 = x2[_t600_l725_l674]; 
            _t703_l725_l674 = y_2[_t624_l725_l674]; 
            _t605_l725_l674 = 8; 
            _t606_l725_l674 = _t604_l725_l674 + _t605_l725_l674; 
            j_l725_l674 = _t606_l725_l674; 
            _t712_l725_l674 = y_2[_t609_l725_l674]; 
            _t711_l725_l674 = A[_t609_l725_l674][_t600_l725_l674]; 
            _t713_l725_l674 = _t711_l725_l674 * _t712_l725_l674; 
            _t683_l725_l674 = A[_t604_l725_l674][_t600_l725_l674]; 
            _t684_l725_l674 = y_2[_t604_l725_l674]; 
            _t685_l725_l674 = _t683_l725_l674 * _t684_l725_l674; 
            _t688_l725_l674 = y_2[_t632_l725_l674]; 
            _t687_l725_l674 = A[_t632_l725_l674][_t600_l725_l674]; 
            _t689_l725_l674 = _t687_l725_l674 * _t688_l725_l674; 
            _t690_l725_l674 = _t685_l725_l674 + _t689_l725_l674; 
            _t693_l725_l674 = y_2[_t659_l725_l674]; 
            _t692_l725_l674 = A[_t659_l725_l674][_t600_l725_l674]; 
            _t694_l725_l674 = _t692_l725_l674 * _t693_l725_l674; 
            _t695_l725_l674 = _t690_l725_l674 + _t694_l725_l674; 
            _t716_l725_l674 = A[_t616_l725_l674][_t600_l725_l674]; 
            _t698_l725_l674 = y_2[_t651_l725_l674]; 
            _t702_l725_l674 = A[_t624_l725_l674][_t600_l725_l674]; 
            _t704_l725_l674 = _t702_l725_l674 * _t703_l725_l674; 
            _t697_l725_l674 = A[_t651_l725_l674][_t600_l725_l674]; 
            _t699_l725_l674 = _t697_l725_l674 * _t698_l725_l674; 
            _t700_l725_l674 = _t695_l725_l674 + _t699_l725_l674; 
            _t705_l725_l674 = _t700_l725_l674 + _t704_l725_l674; 
            _t708_l725_l674 = y_2[_t639_l725_l674]; 
            _t707_l725_l674 = A[_t639_l725_l674][_t600_l725_l674]; 
            _t709_l725_l674 = _t707_l725_l674 * _t708_l725_l674; 
            _t714_l725_l674 = _t709_l725_l674 + _t713_l725_l674; 
            _t717_l725_l674 = y_2[_t616_l725_l674]; 
            _t718_l725_l674 = _t716_l725_l674 * _t717_l725_l674; 
            _t719_l725_l674 = _t714_l725_l674 + _t718_l725_l674; 
            _t720_l725_l674 = _t705_l725_l674 + _t719_l725_l674; 
            _t722_l725_l674 = _t720_l725_l674 + _t721_l725_l674; 
            i_l725_l674 = _t600_l725_l674; 
            x2[_t600_l725_l674] = _t722_l725_l674;
        }
    }
}
"
2093,13,2.7437732569524087e-05,2066432,"void kernel_mvt(float x1[1024], float x2[1024], float y_1[1024], float y_2[1024], float A[1024][1024]) {
    #pragma np_opt input float x1[1024] = [0.0, 1.0], float x2[1024] = [0.0, 1.0], float y_1[1024] = [0.0, 1.0], float y_2[1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output x1, x2 
    float _t838_l917_l845; 
    int _t790_l908_l833; 
    float _t901_l908_l833; 
    float _t902_l908_l833; 
    int _t735_l908_l833; 
    float _t911_l917_l845; 
    float _t780_l908_l833; 
    float _t856_l908_l833; 
    float _t748_l908_l833; 
    int _t809_l908_l833; 
    int _t740_l908_l833; 
    float _t840_l917_l845; 
    int _t735_l917_l845; 
    float _t852_l908_l833; 
    float _t772_l908_l833; 
    float _t798_l908_l833; 
    float _t761_l908_l833; 
    float _t827_l908_l833; 
    float _t913_l917_l845; 
    float _t855_l908_l833; 
    float _t914_l917_l845; 
    float _t909_l917_l845; 
    int _t759_l908_l833; 
    float _t826_l908_l833; 
    int _t758_l908_l833; 
    float _t795_l908_l833; 
    int j_l908_l833; 
    float _t884_l908_l833; 
    float _t867_l908_l833; 
    float _t801_l908_l833; 
    float _t863_l908_l833; 
    int _t731_l917_l845; 
    float _t860_l908_l833; 
    float _t823_l908_l833; 
    int _t737_l917_l845; 
    float _t882_l908_l833; 
    float _t871_l908_l833; 
    int _t741_l908_l833; 
    int _t767_l908_l833; 
    float _t815_l908_l833; 
    int _t751_l908_l833; 
    float _t824_l908_l833; 
    float _t792_l908_l833; 
    float _t800_l908_l833; 
    float _t858_l908_l833; 
    int _t775_l908_l833; 
    int _t782_l908_l833; 
    float _t753_l908_l833; 
    float _t903_l908_l833; 
    float _t773_l908_l833; 
    int _t744_l908_l833; 
    float _t872_l908_l833; 
    float _t814_l908_l833; 
    float _t895_l908_l833; 
    float _t892_l908_l833; 
    float _t897_l908_l833; 
    int i_l917_l845; 
    int _t731_l908_l833; 
    int _t750_l908_l833; 
    float _t912_l917_l845; 
    float _t781_l908_l833; 
    float _t879_l908_l833; 
    int _t819_l908_l833; 
    float _t749_l908_l833; 
    float _t821_l908_l833; 
    int _t774_l908_l833; 
    float _t853_l908_l833; 
    float _t804_l908_l833; 
    float _t808_l908_l833; 
    float _t887_l908_l833; 
    float _t764_l908_l833; 
    float _t894_l908_l833; 
    int _t736_l917_l845; 
    float _t891_l908_l833; 
    float _t896_l908_l833; 
    float _t866_l908_l833; 
    float _t900_l908_l833; 
    float _t763_l908_l833; 
    float _t796_l908_l833; 
    float _t769_l908_l833; 
    int _t802_l908_l833; 
    float _t886_l908_l833; 
    float _t885_l908_l833; 
    float _t851_l908_l833; 
    float _t905_l908_l833; 
    float _t788_l908_l833; 
    float _t771_l908_l833; 
    float _t889_l908_l833; 
    float _t873_l908_l833; 
    int _t810_l908_l833; 
    float _t817_l908_l833; 
    float _t857_l908_l833; 
    int _t739_l908_l833; 
    float _t777_l908_l833; 
    float _t779_l908_l833; 
    float _t812_l908_l833; 
    int i_l908_l833; 
    float _t756_l908_l833; 
    float _t890_l908_l833; 
    int _t766_l908_l833; 
    float _t816_l908_l833; 
    float _t834_l917_l845; 
    float _t746_l908_l833; 
    int _t789_l908_l833; 
    float _t807_l908_l833; 
    float _t899_l908_l833; 
    float _t828_l908_l833; 
    float _t861_l908_l833; 
    float _t868_l908_l833; 
    float _t881_l908_l833; 
    int _t736_l908_l833; 
    float _t825_l908_l833; 
    float _t836_l917_l845; 
    float _t877_l908_l833; 
    float _t865_l908_l833; 
    float _t794_l908_l833; 
    int _t783_l908_l833; 
    float _t806_l908_l833; 
    int _t831_l917_l845; 
    float _t765_l908_l833; 
    float _t757_l908_l833; 
    float _t785_l908_l833; 
    int _t743_l908_l833; 
    float _t875_l908_l833; 
    float _t787_l908_l833; 
    float _t904_l908_l833; 
    float _t876_l908_l833; 
    float _t839_l917_l845; 
    int _t818_l908_l833; 
    float _t862_l908_l833; 
    float _t880_l908_l833; 
    float _t870_l908_l833; 
    float _t755_l908_l833; 
    _t731_l917_l845 = 0; 
    i_l917_l845 = _t731_l917_l845; 
    while (i_l917_l845 < 1024) {
        _t735_l917_l845 = i_l917_l845; 
        _t735_l908_l833 = _t735_l917_l845; 
        i_l908_l833 = _t735_l908_l833; 
        _t731_l908_l833 = 0; 
        j_l908_l833 = _t731_l908_l833; 
        while (j_l908_l833 < 1023) {
            _t739_l908_l833 = j_l908_l833; 
            _t743_l908_l833 = 5; 
            _t744_l908_l833 = _t743_l908_l833 + _t739_l908_l833; 
            _t735_l908_l833 = i_l908_l833; 
            _t746_l908_l833 = A[_t735_l908_l833][_t744_l908_l833]; 
            _t748_l908_l833 = y_1[_t744_l908_l833]; 
            _t749_l908_l833 = _t746_l908_l833 * _t748_l908_l833; 
            _t750_l908_l833 = 6; 
            _t751_l908_l833 = _t750_l908_l833 + _t739_l908_l833; 
            _t755_l908_l833 = y_1[_t751_l908_l833]; 
            _t753_l908_l833 = A[_t735_l908_l833][_t751_l908_l833]; 
            _t756_l908_l833 = _t753_l908_l833 * _t755_l908_l833; 
            _t757_l908_l833 = _t749_l908_l833 + _t756_l908_l833; 
            _t758_l908_l833 = 8; 
            _t759_l908_l833 = _t758_l908_l833 + _t739_l908_l833; 
            _t763_l908_l833 = y_1[_t759_l908_l833]; 
            _t761_l908_l833 = A[_t735_l908_l833][_t759_l908_l833]; 
            _t764_l908_l833 = _t761_l908_l833 * _t763_l908_l833; 
            _t765_l908_l833 = _t757_l908_l833 + _t764_l908_l833; 
            _t800_l908_l833 = y_1[_t739_l908_l833]; 
            _t798_l908_l833 = A[_t735_l908_l833][_t739_l908_l833]; 
            _t801_l908_l833 = _t798_l908_l833 * _t800_l908_l833; 
            _t736_l908_l833 = 1; 
            _t802_l908_l833 = _t739_l908_l833 + _t736_l908_l833; 
            _t806_l908_l833 = y_1[_t802_l908_l833]; 
            _t804_l908_l833 = A[_t735_l908_l833][_t802_l908_l833]; 
            _t807_l908_l833 = _t804_l908_l833 * _t806_l908_l833; 
            _t808_l908_l833 = _t801_l908_l833 + _t807_l908_l833; 
            _t809_l908_l833 = 3; 
            _t810_l908_l833 = _t809_l908_l833 + _t739_l908_l833; 
            _t814_l908_l833 = y_1[_t810_l908_l833]; 
            _t812_l908_l833 = A[_t735_l908_l833][_t810_l908_l833]; 
            _t815_l908_l833 = _t812_l908_l833 * _t814_l908_l833; 
            _t816_l908_l833 = _t808_l908_l833 + _t815_l908_l833; 
            _t875_l908_l833 = A[_t739_l908_l833][_t735_l908_l833]; 
            _t766_l908_l833 = 9; 
            _t767_l908_l833 = _t766_l908_l833 + _t739_l908_l833; 
            _t771_l908_l833 = y_1[_t767_l908_l833]; 
            _t769_l908_l833 = A[_t735_l908_l833][_t767_l908_l833]; 
            _t772_l908_l833 = _t769_l908_l833 * _t771_l908_l833; 
            _t856_l908_l833 = y_2[_t744_l908_l833]; 
            _t889_l908_l833 = A[_t802_l908_l833][_t735_l908_l833]; 
            _t740_l908_l833 = 11; 
            _t741_l908_l833 = _t739_l908_l833 + _t740_l908_l833; 
            j_l908_l833 = _t741_l908_l833; 
            _t789_l908_l833 = 4; 
            _t790_l908_l833 = _t789_l908_l833 + _t739_l908_l833; 
            _t794_l908_l833 = y_1[_t790_l908_l833]; 
            _t818_l908_l833 = 7; 
            _t819_l908_l833 = _t818_l908_l833 + _t739_l908_l833; 
            _t894_l908_l833 = A[_t819_l908_l833][_t735_l908_l833]; 
            _t895_l908_l833 = y_2[_t819_l908_l833]; 
            _t896_l908_l833 = _t894_l908_l833 * _t895_l908_l833; 
            _t827_l908_l833 = x1[_t735_l908_l833]; 
            _t782_l908_l833 = 2; 
            _t783_l908_l833 = _t782_l908_l833 + _t739_l908_l833; 
            i_l908_l833 = _t735_l908_l833; 
            _t866_l908_l833 = y_2[_t767_l908_l833]; 
            _t865_l908_l833 = A[_t767_l908_l833][_t735_l908_l833]; 
            _t867_l908_l833 = _t865_l908_l833 * _t866_l908_l833; 
            _t890_l908_l833 = y_2[_t802_l908_l833]; 
            _t891_l908_l833 = _t889_l908_l833 * _t890_l908_l833; 
            _t876_l908_l833 = y_2[_t739_l908_l833]; 
            _t877_l908_l833 = _t875_l908_l833 * _t876_l908_l833; 
            _t880_l908_l833 = y_2[_t783_l908_l833]; 
            _t879_l908_l833 = A[_t783_l908_l833][_t735_l908_l833]; 
            _t881_l908_l833 = _t879_l908_l833 * _t880_l908_l833; 
            _t882_l908_l833 = _t877_l908_l833 + _t881_l908_l833; 
            _t885_l908_l833 = y_2[_t810_l908_l833]; 
            _t884_l908_l833 = A[_t810_l908_l833][_t735_l908_l833]; 
            _t886_l908_l833 = _t884_l908_l833 * _t885_l908_l833; 
            _t887_l908_l833 = _t882_l908_l833 + _t886_l908_l833; 
            _t892_l908_l833 = _t887_l908_l833 + _t891_l908_l833; 
            _t773_l908_l833 = _t765_l908_l833 + _t772_l908_l833; 
            _t774_l908_l833 = 10; 
            _t775_l908_l833 = _t774_l908_l833 + _t739_l908_l833; 
            _t779_l908_l833 = y_1[_t775_l908_l833]; 
            _t777_l908_l833 = A[_t735_l908_l833][_t775_l908_l833]; 
            _t780_l908_l833 = _t777_l908_l833 * _t779_l908_l833; 
            _t781_l908_l833 = _t773_l908_l833 + _t780_l908_l833; 
            _t821_l908_l833 = A[_t735_l908_l833][_t819_l908_l833]; 
            _t823_l908_l833 = y_1[_t819_l908_l833]; 
            _t824_l908_l833 = _t821_l908_l833 * _t823_l908_l833; 
            _t792_l908_l833 = A[_t735_l908_l833][_t790_l908_l833]; 
            _t795_l908_l833 = _t792_l908_l833 * _t794_l908_l833; 
            _t787_l908_l833 = y_1[_t783_l908_l833]; 
            _t785_l908_l833 = A[_t735_l908_l833][_t783_l908_l833]; 
            _t788_l908_l833 = _t785_l908_l833 * _t787_l908_l833; 
            _t796_l908_l833 = _t788_l908_l833 + _t795_l908_l833; 
            _t817_l908_l833 = _t796_l908_l833 + _t816_l908_l833; 
            _t825_l908_l833 = _t817_l908_l833 + _t824_l908_l833; 
            _t826_l908_l833 = _t781_l908_l833 + _t825_l908_l833; 
            _t828_l908_l833 = _t826_l908_l833 + _t827_l908_l833; 
            x1[_t735_l908_l833] = _t828_l908_l833; 
            _t904_l908_l833 = x2[_t735_l908_l833]; 
            _t899_l908_l833 = A[_t759_l908_l833][_t735_l908_l833]; 
            _t900_l908_l833 = y_2[_t759_l908_l833]; 
            _t901_l908_l833 = _t899_l908_l833 * _t900_l908_l833; 
            _t897_l908_l833 = _t892_l908_l833 + _t896_l908_l833; 
            _t902_l908_l833 = _t897_l908_l833 + _t901_l908_l833; 
            _t870_l908_l833 = A[_t775_l908_l833][_t735_l908_l833]; 
            _t871_l908_l833 = y_2[_t775_l908_l833]; 
            _t872_l908_l833 = _t870_l908_l833 * _t871_l908_l833; 
            _t851_l908_l833 = A[_t790_l908_l833][_t735_l908_l833]; 
            _t852_l908_l833 = y_2[_t790_l908_l833]; 
            _t853_l908_l833 = _t851_l908_l833 * _t852_l908_l833; 
            _t855_l908_l833 = A[_t744_l908_l833][_t735_l908_l833]; 
            _t857_l908_l833 = _t855_l908_l833 * _t856_l908_l833; 
            _t858_l908_l833 = _t853_l908_l833 + _t857_l908_l833; 
            _t861_l908_l833 = y_2[_t751_l908_l833]; 
            _t860_l908_l833 = A[_t751_l908_l833][_t735_l908_l833]; 
            _t862_l908_l833 = _t860_l908_l833 * _t861_l908_l833; 
            _t863_l908_l833 = _t858_l908_l833 + _t862_l908_l833; 
            _t868_l908_l833 = _t863_l908_l833 + _t867_l908_l833; 
            _t873_l908_l833 = _t868_l908_l833 + _t872_l908_l833; 
            _t903_l908_l833 = _t873_l908_l833 + _t902_l908_l833; 
            _t905_l908_l833 = _t903_l908_l833 + _t904_l908_l833; 
            x2[_t735_l908_l833] = _t905_l908_l833;
        } 
        _t909_l917_l845 = x2[_t735_l917_l845]; 
        _t831_l917_l845 = 1023; 
        _t912_l917_l845 = y_2[_t831_l917_l845]; 
        _t911_l917_l845 = A[_t831_l917_l845][_t735_l917_l845]; 
        _t913_l917_l845 = _t911_l917_l845 * _t912_l917_l845; 
        _t914_l917_l845 = _t909_l917_l845 + _t913_l917_l845; 
        x2[_t735_l917_l845] = _t914_l917_l845; 
        _t736_l917_l845 = 1; 
        _t737_l917_l845 = _t735_l917_l845 + _t736_l917_l845; 
        i_l917_l845 = _t737_l917_l845; 
        _t836_l917_l845 = A[_t735_l917_l845][_t831_l917_l845]; 
        _t838_l917_l845 = y_1[_t831_l917_l845]; 
        _t834_l917_l845 = x1[_t735_l917_l845]; 
        _t839_l917_l845 = _t836_l917_l845 * _t838_l917_l845; 
        _t840_l917_l845 = _t834_l917_l845 + _t839_l917_l845; 
        x1[_t735_l917_l845] = _t840_l917_l845;
    }
}
"
