lut,dsp,error,latency,expression
413,5,0.0009260271908715367,40969,"// livermore inner_product

#define N 4096

#pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0]
#pragma np_opt output q
float q = 0.0;
for (int k = 0; k < N; k++) {
    q = q + z[k] * x[k];
}
"
777,5,0.00016405248607043177,5170,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    float _t44_l68; 
    float _t42_l68; 
    float _t32_l68; 
    float _t3_l68; 
    int _t36_l68; 
    int _t7_l68; 
    float _t34_l68; 
    float _t40_l68; 
    float _t22_l68; 
    int _t11_l68; 
    float _t26_l68; 
    int _t10_l68; 
    float _t68; 
    float _t57_l68; 
    int _t8_l68; 
    int k_l68; 
    float _t46_l68; 
    int _t47_l68; 
    float _t27_l68; 
    float _t33_l68; 
    float _t64_l68; 
    float _t58_l68; 
    float _t15_l68; 
    float _t21_l68; 
    int _t29_l68; 
    float _t14_l68; 
    float _t50_l68; 
    float _t62_l68; 
    float _t53_l68; 
    int _t55_l68; 
    float _t51_l68; 
    float _t19_l68; 
    float _t28_l68; 
    float q_l68; 
    float _t39_l68; 
    int _t48_l68; 
    float _t35_l68; 
    float _t61_l68; 
    float _t63_l68; 
    int _t9_l68; 
    float _t60_l68; 
    float _t13_l68; 
    int _t37_l68; 
    int _t17_l68; 
    float _t20_l68; 
    int _t2_l68; 
    int _t54_l68; 
    float _t52_l68; 
    int _t23_l68; 
    float q; 
    int _t16_l68; 
    float _t45_l68; 
    float _t59_l68; 
    int _t30_l68; 
    int _t24_l68; 
    float _t41_l68; 
    _t2_l68 = 0; 
    k_l68 = _t2_l68; 
    _t3_l68 = 0.0; 
    q_l68 = _t3_l68; 
    while (k_l68 < 4096) {
        _t7_l68 = k_l68; 
        _t23_l68 = 4; 
        _t24_l68 = _t23_l68 + _t7_l68; 
        _t45_l68 = x[_t7_l68]; 
        _t44_l68 = z[_t7_l68]; 
        _t46_l68 = _t44_l68 * _t45_l68; 
        _t54_l68 = 2; 
        _t55_l68 = _t54_l68 + _t7_l68; 
        _t29_l68 = 3; 
        _t30_l68 = _t29_l68 + _t7_l68; 
        _t33_l68 = x[_t30_l68]; 
        _t10_l68 = 6; 
        _t11_l68 = _t10_l68 + _t7_l68; 
        _t16_l68 = 7; 
        _t17_l68 = _t16_l68 + _t7_l68; 
        _t19_l68 = z[_t17_l68]; 
        _t20_l68 = x[_t17_l68]; 
        _t21_l68 = _t19_l68 * _t20_l68; 
        _t14_l68 = x[_t11_l68]; 
        _t13_l68 = z[_t11_l68]; 
        _t15_l68 = _t13_l68 * _t14_l68; 
        _t22_l68 = _t15_l68 + _t21_l68; 
        _t36_l68 = 5; 
        _t37_l68 = _t36_l68 + _t7_l68; 
        _t40_l68 = x[_t37_l68]; 
        _t39_l68 = z[_t37_l68]; 
        _t41_l68 = _t39_l68 * _t40_l68; 
        _t32_l68 = z[_t30_l68]; 
        _t34_l68 = _t32_l68 * _t33_l68; 
        _t27_l68 = x[_t24_l68]; 
        _t26_l68 = z[_t24_l68]; 
        _t28_l68 = _t26_l68 * _t27_l68; 
        _t35_l68 = _t28_l68 + _t34_l68; 
        _t42_l68 = _t35_l68 + _t41_l68; 
        _t57_l68 = z[_t55_l68]; 
        _t58_l68 = x[_t55_l68]; 
        _t59_l68 = _t57_l68 * _t58_l68; 
        _t47_l68 = 1; 
        _t48_l68 = _t7_l68 + _t47_l68; 
        _t51_l68 = x[_t48_l68]; 
        _t50_l68 = z[_t48_l68]; 
        _t52_l68 = _t50_l68 * _t51_l68; 
        _t53_l68 = _t46_l68 + _t52_l68; 
        _t60_l68 = _t53_l68 + _t59_l68; 
        _t61_l68 = _t42_l68 + _t60_l68; 
        _t62_l68 = _t22_l68 + _t61_l68; 
        _t63_l68 = q_l68; 
        _t64_l68 = _t62_l68 + _t63_l68; 
        _t8_l68 = 8; 
        _t9_l68 = _t7_l68 + _t8_l68; 
        k_l68 = _t9_l68; 
        q_l68 = _t64_l68;
    } 
    _t68 = q_l68; 
    q = _t68;
    return q;
}
"
1541,13,0.00012703455286100507,3230,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    float _t157_l172; 
    int _t77_l172; 
    int _t99_l172; 
    float _t117_l172; 
    float _t116_l172; 
    int _t79_l172; 
    float _t136_l172; 
    float _t119_l172; 
    float _t83_l172; 
    float _t156_l172; 
    float _t131_l172; 
    float _t176; 
    int k_l172; 
    float _t82_l172; 
    int _t71_l172; 
    float _t129_l172; 
    float _t96_l172; 
    float q_l172; 
    float _t109_l172; 
    float _t105_l172; 
    float _t72_l172; 
    int _t76_l172; 
    int _t170; 
    float _t111_l172; 
    float _t148_l172; 
    int _t78_l172; 
    float _t130_l172; 
    float _t155_l172; 
    float _t103_l172; 
    float _t162_l172; 
    int _t127_l172; 
    float _t90_l172; 
    float _t177; 
    int _t114_l172; 
    float _t141_l172; 
    float _t91_l172; 
    float _t137_l172; 
    float _t89_l172; 
    float _t163_l172; 
    float q; 
    float _t172; 
    float _t118_l172; 
    int _t133_l172; 
    float _t88_l172; 
    float _t175; 
    float _t168_l172; 
    float _t84_l172; 
    int _t93_l172; 
    float _t149_l172; 
    int _t113_l172; 
    int _t151_l172; 
    float _t98_l172; 
    float _t139_l172; 
    int _t120_l172; 
    float _t174; 
    float _t102_l172; 
    int _t144_l172; 
    float _t112_l172; 
    int _t86_l172; 
    float _t147_l172; 
    int _t100_l172; 
    float _t164_l172; 
    float _t165_l172; 
    float _t125_l172; 
    float _t104_l172; 
    int _t160_l172; 
    int _t92_l172; 
    int _t80_l172; 
    float _t142_l172; 
    int _t134_l172; 
    int _t107_l172; 
    float _t95_l172; 
    float _t150_l172; 
    float _t154_l172; 
    float _t158_l172; 
    float _t97_l172; 
    float _t110_l172; 
    int _t159_l172; 
    float _t124_l172; 
    int _t126_l172; 
    int _t145_l172; 
    float _t166_l172; 
    float _t167_l172; 
    float _t132_l172; 
    int _t85_l172; 
    float _t143_l172; 
    int _t152_l172; 
    float _t138_l172; 
    float _t123_l172; 
    int _t121_l172; 
    int _t106_l172; 
    _t170 = 4095; 
    _t174 = z[_t170]; 
    _t175 = x[_t170]; 
    _t176 = _t174 * _t175; 
    _t71_l172 = 0; 
    k_l172 = _t71_l172; 
    _t72_l172 = 0.0; 
    q_l172 = _t72_l172; 
    while (k_l172 < 4095) {
        _t99_l172 = 8; 
        _t126_l172 = 3; 
        _t76_l172 = k_l172; 
        _t127_l172 = _t126_l172 + _t76_l172; 
        _t130_l172 = x[_t127_l172]; 
        _t85_l172 = 7; 
        _t86_l172 = _t85_l172 + _t76_l172; 
        _t159_l172 = 10; 
        _t160_l172 = _t159_l172 + _t76_l172; 
        _t113_l172 = 12; 
        _t114_l172 = _t113_l172 + _t76_l172; 
        _t117_l172 = x[_t114_l172]; 
        _t116_l172 = z[_t114_l172]; 
        _t118_l172 = _t116_l172 * _t117_l172; 
        _t144_l172 = 1; 
        _t145_l172 = _t76_l172 + _t144_l172; 
        _t147_l172 = z[_t145_l172]; 
        _t148_l172 = x[_t145_l172]; 
        _t149_l172 = _t147_l172 * _t148_l172; 
        _t100_l172 = _t99_l172 + _t76_l172; 
        _t102_l172 = z[_t100_l172]; 
        _t103_l172 = x[_t100_l172]; 
        _t104_l172 = _t102_l172 * _t103_l172; 
        _t133_l172 = 5; 
        _t134_l172 = _t133_l172 + _t76_l172; 
        _t92_l172 = 9; 
        _t137_l172 = x[_t134_l172]; 
        _t136_l172 = z[_t134_l172]; 
        _t138_l172 = _t136_l172 * _t137_l172; 
        _t129_l172 = z[_t127_l172]; 
        _t131_l172 = _t129_l172 * _t130_l172; 
        _t120_l172 = 4; 
        _t121_l172 = _t120_l172 + _t76_l172; 
        _t123_l172 = z[_t121_l172]; 
        _t124_l172 = x[_t121_l172]; 
        _t125_l172 = _t123_l172 * _t124_l172; 
        _t132_l172 = _t125_l172 + _t131_l172; 
        _t139_l172 = _t132_l172 + _t138_l172; 
        _t142_l172 = x[_t76_l172]; 
        _t141_l172 = z[_t76_l172]; 
        _t143_l172 = _t141_l172 * _t142_l172; 
        _t150_l172 = _t143_l172 + _t149_l172; 
        _t151_l172 = 2; 
        _t152_l172 = _t151_l172 + _t76_l172; 
        _t155_l172 = x[_t152_l172]; 
        _t154_l172 = z[_t152_l172]; 
        _t156_l172 = _t154_l172 * _t155_l172; 
        _t157_l172 = _t150_l172 + _t156_l172; 
        _t158_l172 = _t139_l172 + _t157_l172; 
        _t163_l172 = x[_t160_l172]; 
        _t162_l172 = z[_t160_l172]; 
        _t164_l172 = _t162_l172 * _t163_l172; 
        _t165_l172 = _t158_l172 + _t164_l172; 
        _t93_l172 = _t92_l172 + _t76_l172; 
        _t96_l172 = x[_t93_l172]; 
        _t95_l172 = z[_t93_l172]; 
        _t97_l172 = _t95_l172 * _t96_l172; 
        _t89_l172 = x[_t86_l172]; 
        _t88_l172 = z[_t86_l172]; 
        _t90_l172 = _t88_l172 * _t89_l172; 
        _t79_l172 = 6; 
        _t80_l172 = _t79_l172 + _t76_l172; 
        _t83_l172 = x[_t80_l172]; 
        _t82_l172 = z[_t80_l172]; 
        _t84_l172 = _t82_l172 * _t83_l172; 
        _t91_l172 = _t84_l172 + _t90_l172; 
        _t98_l172 = _t91_l172 + _t97_l172; 
        _t105_l172 = _t98_l172 + _t104_l172; 
        _t106_l172 = 11; 
        _t107_l172 = _t106_l172 + _t76_l172; 
        _t110_l172 = x[_t107_l172]; 
        _t109_l172 = z[_t107_l172]; 
        _t111_l172 = _t109_l172 * _t110_l172; 
        _t112_l172 = _t105_l172 + _t111_l172; 
        _t119_l172 = _t112_l172 + _t118_l172; 
        _t166_l172 = _t119_l172 + _t165_l172; 
        _t77_l172 = 13; 
        _t78_l172 = _t76_l172 + _t77_l172; 
        _t167_l172 = q_l172; 
        _t168_l172 = _t166_l172 + _t167_l172; 
        q_l172 = _t168_l172; 
        k_l172 = _t78_l172;
    } 
    _t172 = q_l172; 
    _t177 = _t172 + _t176; 
    q = _t177;
    return q;
}
"
1485,13,0.00014996324898675084,4150,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    int _t224_l294; 
    float _t189; 
    float _t291_l294; 
    float _t248_l294; 
    int _t197; 
    float _t279_l294; 
    float _t183; 
    float _t266_l294; 
    float _t194; 
    int _t230_l294; 
    float _t210; 
    int _t243_l294; 
    float _t273_l294; 
    float _t288_l294; 
    int _t237_l294; 
    float _t287_l294; 
    float _t247_l294; 
    float _t201; 
    float _t255_l294; 
    float _t191; 
    float _t284_l294; 
    float _t213; 
    float _t289_l294; 
    float _t233_l294; 
    float _t208; 
    float _t215; 
    float _t241_l294; 
    int _t257_l294; 
    float _t277_l294; 
    float _t242_l294; 
    int _t221_l294; 
    float _t240_l294; 
    float _t235_l294; 
    float _t278_l294; 
    int _t217_l294; 
    float _t200; 
    int _t203; 
    float _t195; 
    float _t268_l294; 
    float _t261_l294; 
    float _t290_l294; 
    int _t211; 
    int _t256_l294; 
    float _t216; 
    float _t280_l294; 
    float _t209; 
    float _t214; 
    float q; 
    int _t220_l294; 
    float _t205; 
    int _t187; 
    float _t260_l294; 
    float _t199; 
    float _t206; 
    float _t285_l294; 
    int _t281_l294; 
    float _t186; 
    float _t218_l294; 
    float _t262_l294; 
    float _t295; 
    float _t239_l294; 
    float _t207; 
    float _t232_l294; 
    float _t254_l294; 
    float _t269_l294; 
    int _t229_l294; 
    float _t226_l294; 
    float _t228_l294; 
    float _t259_l294; 
    float _t202; 
    float _t271_l294; 
    float _t185; 
    float _t253_l294; 
    int _t181; 
    float _t234_l294; 
    int _t264_l294; 
    float _t286_l294; 
    int _t251_l294; 
    int _t250_l294; 
    int _t192; 
    int _t274_l294; 
    float _t196; 
    int _t275_l294; 
    float _t294; 
    float _t272_l294; 
    int _t263_l294; 
    float _t249_l294; 
    int _t236_l294; 
    int k_l294; 
    float q_l294; 
    int _t223_l294; 
    float _t246_l294; 
    int _t244_l294; 
    int _t282_l294; 
    float _t227_l294; 
    int _t222_l294; 
    float _t190; 
    float _t267_l294; 
    _t217_l294 = 0; 
    k_l294 = _t217_l294; 
    _t218_l294 = 0.0; 
    q_l294 = _t218_l294; 
    while (k_l294 < 4090) {
        _t281_l294 = 2; 
        _t223_l294 = 6; 
        _t220_l294 = k_l294; 
        _t224_l294 = _t223_l294 + _t220_l294; 
        _t227_l294 = x[_t224_l294]; 
        _t256_l294 = 3; 
        _t257_l294 = _t256_l294 + _t220_l294; 
        _t236_l294 = 8; 
        _t243_l294 = 9; 
        _t244_l294 = _t243_l294 + _t220_l294; 
        _t246_l294 = z[_t244_l294]; 
        _t247_l294 = x[_t244_l294]; 
        _t248_l294 = _t246_l294 * _t247_l294; 
        _t237_l294 = _t236_l294 + _t220_l294; 
        _t240_l294 = x[_t237_l294]; 
        _t239_l294 = z[_t237_l294]; 
        _t241_l294 = _t239_l294 * _t240_l294; 
        _t229_l294 = 7; 
        _t230_l294 = _t229_l294 + _t220_l294; 
        _t233_l294 = x[_t230_l294]; 
        _t232_l294 = z[_t230_l294]; 
        _t234_l294 = _t232_l294 * _t233_l294; 
        _t226_l294 = z[_t224_l294]; 
        _t228_l294 = _t226_l294 * _t227_l294; 
        _t235_l294 = _t228_l294 + _t234_l294; 
        _t242_l294 = _t235_l294 + _t241_l294; 
        _t249_l294 = _t242_l294 + _t248_l294; 
        _t259_l294 = z[_t257_l294]; 
        _t260_l294 = x[_t257_l294]; 
        _t261_l294 = _t259_l294 * _t260_l294; 
        _t250_l294 = 4; 
        _t251_l294 = _t250_l294 + _t220_l294; 
        _t254_l294 = x[_t251_l294]; 
        _t253_l294 = z[_t251_l294]; 
        _t255_l294 = _t253_l294 * _t254_l294; 
        _t262_l294 = _t255_l294 + _t261_l294; 
        _t263_l294 = 5; 
        _t264_l294 = _t263_l294 + _t220_l294; 
        _t267_l294 = x[_t264_l294]; 
        _t266_l294 = z[_t264_l294]; 
        _t268_l294 = _t266_l294 * _t267_l294; 
        _t269_l294 = _t262_l294 + _t268_l294; 
        _t282_l294 = _t281_l294 + _t220_l294; 
        _t285_l294 = x[_t282_l294]; 
        _t284_l294 = z[_t282_l294]; 
        _t286_l294 = _t284_l294 * _t285_l294; 
        _t272_l294 = x[_t220_l294]; 
        _t271_l294 = z[_t220_l294]; 
        _t273_l294 = _t271_l294 * _t272_l294; 
        _t274_l294 = 1; 
        _t275_l294 = _t220_l294 + _t274_l294; 
        _t278_l294 = x[_t275_l294]; 
        _t277_l294 = z[_t275_l294]; 
        _t279_l294 = _t277_l294 * _t278_l294; 
        _t280_l294 = _t273_l294 + _t279_l294; 
        _t287_l294 = _t280_l294 + _t286_l294; 
        _t288_l294 = _t269_l294 + _t287_l294; 
        _t289_l294 = _t249_l294 + _t288_l294; 
        _t290_l294 = q_l294; 
        _t221_l294 = 10; 
        _t291_l294 = _t289_l294 + _t290_l294; 
        q_l294 = _t291_l294; 
        _t222_l294 = _t220_l294 + _t221_l294; 
        k_l294 = _t222_l294;
    } 
    _t294 = q_l294; 
    _t197 = 4092; 
    _t200 = x[_t197]; 
    _t199 = z[_t197]; 
    _t201 = _t199 * _t200; 
    _t192 = 4090; 
    _t195 = x[_t192]; 
    _t194 = z[_t192]; 
    _t196 = _t194 * _t195; 
    _t202 = _t196 + _t201; 
    _t203 = 4091; 
    _t206 = x[_t203]; 
    _t205 = z[_t203]; 
    _t207 = _t205 * _t206; 
    _t208 = _t202 + _t207; 
    _t187 = 4093; 
    _t190 = x[_t187]; 
    _t189 = z[_t187]; 
    _t191 = _t189 * _t190; 
    _t209 = _t191 + _t208; 
    _t181 = 4095; 
    _t185 = x[_t181]; 
    _t183 = z[_t181]; 
    _t186 = _t183 * _t185; 
    _t210 = _t186 + _t209; 
    _t211 = 4094; 
    _t214 = x[_t211]; 
    _t213 = z[_t211]; 
    _t215 = _t213 * _t214; 
    _t216 = _t210 + _t215; 
    _t295 = _t216 + _t294; 
    q = _t295;
    return q;
}
"
569,5,0.00027459117700345814,10270,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    float _t299_l336; 
    int _t323_l336; 
    int _t305_l336; 
    int _t303_l336; 
    float _t331_l336; 
    int _t324_l336; 
    int _t306_l336; 
    float _t332_l336; 
    float _t322_l336; 
    float _t326_l336; 
    float _t320_l336; 
    float _t316_l336; 
    float _t321_l336; 
    float _t317_l336; 
    int _t312_l336; 
    float _t310_l336; 
    float q; 
    int _t307_l336; 
    float _t328_l336; 
    float _t330_l336; 
    int _t304_l336; 
    float q_l336; 
    float _t315_l336; 
    float _t318_l336; 
    float _t309_l336; 
    int _t298_l336; 
    float _t311_l336; 
    float _t327_l336; 
    float _t329_l336; 
    int _t313_l336; 
    int k_l336; 
    float _t336; 
    _t299_l336 = 0.0; 
    q_l336 = _t299_l336; 
    _t298_l336 = 0; 
    k_l336 = _t298_l336; 
    while (k_l336 < 4096) {
        _t312_l336 = 3; 
        _t303_l336 = k_l336; 
        _t321_l336 = x[_t303_l336]; 
        _t320_l336 = z[_t303_l336]; 
        _t322_l336 = _t320_l336 * _t321_l336; 
        _t306_l336 = 2; 
        _t307_l336 = _t306_l336 + _t303_l336; 
        _t310_l336 = x[_t307_l336]; 
        _t331_l336 = q_l336; 
        _t323_l336 = 1; 
        _t324_l336 = _t303_l336 + _t323_l336; 
        _t326_l336 = z[_t324_l336]; 
        _t327_l336 = x[_t324_l336]; 
        _t328_l336 = _t326_l336 * _t327_l336; 
        _t329_l336 = _t322_l336 + _t328_l336; 
        _t313_l336 = _t312_l336 + _t303_l336; 
        _t315_l336 = z[_t313_l336]; 
        _t316_l336 = x[_t313_l336]; 
        _t317_l336 = _t315_l336 * _t316_l336; 
        _t304_l336 = 4; 
        _t309_l336 = z[_t307_l336]; 
        _t311_l336 = _t309_l336 * _t310_l336; 
        _t318_l336 = _t311_l336 + _t317_l336; 
        _t330_l336 = _t318_l336 + _t329_l336; 
        _t332_l336 = _t330_l336 + _t331_l336; 
        _t305_l336 = _t303_l336 + _t304_l336; 
        k_l336 = _t305_l336; 
        q_l336 = _t332_l336;
    } 
    _t336 = q_l336; 
    q = _t336;
    return q;
}
"
972,8,0.00015026333858259022,4610,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    float _t365_l412; 
    float _t402_l412; 
    float _t412; 
    int _t381_l412; 
    int _t398_l412; 
    int _t353_l412; 
    int _t392_l412; 
    float _t386_l412; 
    int _t391_l412; 
    int _t339_l412; 
    float _t359_l412; 
    float _t395_l412; 
    int _t348_l412; 
    float _t401_l412; 
    float _t364_l412; 
    int _t380_l412; 
    float _t414; 
    float _t379_l412; 
    int _t346_l412; 
    int k_l412; 
    float _t406_l412; 
    int _t347_l412; 
    float _t383_l412; 
    float _t390_l412; 
    int _t399_l412; 
    int _t374_l412; 
    float _t385_l412; 
    float _t397_l412; 
    float _t371_l412; 
    int _t373_l412; 
    float _t408_l412; 
    float _t389_l412; 
    float _t370_l412; 
    float _t357_l412; 
    float q_l412; 
    float _t352_l412; 
    float _t340_l412; 
    int _t360_l412; 
    int _t344_l412; 
    float _t378_l412; 
    float _t415; 
    float _t384_l412; 
    float _t351_l412; 
    float _t363_l412; 
    float _t405_l412; 
    float _t376_l412; 
    float _t366_l412; 
    float _t404_l412; 
    float _t403_l412; 
    float _t394_l412; 
    float _t350_l412; 
    float _t388_l412; 
    float q; 
    float _t377_l412; 
    int _t354_l412; 
    float _t356_l412; 
    float _t358_l412; 
    int _t345_l412; 
    float _t417; 
    float _t416; 
    int _t368_l412; 
    int _t367_l412; 
    float _t372_l412; 
    int _t410; 
    float _t396_l412; 
    float _t407_l412; 
    int _t361_l412; 
    _t410 = 4095; 
    _t414 = z[_t410]; 
    _t415 = x[_t410]; 
    _t416 = _t414 * _t415; 
    _t339_l412 = 0; 
    k_l412 = _t339_l412; 
    _t340_l412 = 0.0; 
    q_l412 = _t340_l412; 
    while (k_l412 < 4095) {
        _t353_l412 = 7; 
        _t344_l412 = k_l412; 
        _t354_l412 = _t353_l412 + _t344_l412; 
        _t347_l412 = 6; 
        _t348_l412 = _t347_l412 + _t344_l412; 
        _t350_l412 = z[_t348_l412]; 
        _t351_l412 = x[_t348_l412]; 
        _t352_l412 = _t350_l412 * _t351_l412; 
        _t380_l412 = 5; 
        _t381_l412 = _t380_l412 + _t344_l412; 
        _t384_l412 = x[_t381_l412]; 
        _t383_l412 = z[_t381_l412]; 
        _t385_l412 = _t383_l412 * _t384_l412; 
        _t373_l412 = 3; 
        _t374_l412 = _t373_l412 + _t344_l412; 
        _t377_l412 = x[_t374_l412]; 
        _t376_l412 = z[_t374_l412]; 
        _t378_l412 = _t376_l412 * _t377_l412; 
        _t367_l412 = 4; 
        _t368_l412 = _t367_l412 + _t344_l412; 
        _t371_l412 = x[_t368_l412]; 
        _t370_l412 = z[_t368_l412]; 
        _t372_l412 = _t370_l412 * _t371_l412; 
        _t379_l412 = _t372_l412 + _t378_l412; 
        _t386_l412 = _t379_l412 + _t385_l412; 
        _t360_l412 = 8; 
        _t361_l412 = _t360_l412 + _t344_l412; 
        _t364_l412 = x[_t361_l412]; 
        _t391_l412 = 1; 
        _t392_l412 = _t344_l412 + _t391_l412; 
        _t395_l412 = x[_t392_l412]; 
        _t398_l412 = 2; 
        _t399_l412 = _t398_l412 + _t344_l412; 
        _t401_l412 = z[_t399_l412]; 
        _t402_l412 = x[_t399_l412]; 
        _t403_l412 = _t401_l412 * _t402_l412; 
        _t389_l412 = x[_t344_l412]; 
        _t388_l412 = z[_t344_l412]; 
        _t390_l412 = _t388_l412 * _t389_l412; 
        _t394_l412 = z[_t392_l412]; 
        _t396_l412 = _t394_l412 * _t395_l412; 
        _t397_l412 = _t390_l412 + _t396_l412; 
        _t404_l412 = _t397_l412 + _t403_l412; 
        _t405_l412 = _t386_l412 + _t404_l412; 
        _t356_l412 = z[_t354_l412]; 
        _t363_l412 = z[_t361_l412]; 
        _t365_l412 = _t363_l412 * _t364_l412; 
        _t357_l412 = x[_t354_l412]; 
        _t358_l412 = _t356_l412 * _t357_l412; 
        _t359_l412 = _t352_l412 + _t358_l412; 
        _t366_l412 = _t359_l412 + _t365_l412; 
        _t406_l412 = _t366_l412 + _t405_l412; 
        _t345_l412 = 9; 
        _t346_l412 = _t344_l412 + _t345_l412; 
        k_l412 = _t346_l412; 
        _t407_l412 = q_l412; 
        _t408_l412 = _t406_l412 + _t407_l412; 
        q_l412 = _t408_l412;
    } 
    _t412 = q_l412; 
    _t417 = _t412 + _t416; 
    q = _t417;
    return q;
}
"
465,5,0.0004874251608271152,20500,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    float _t421_l444; 
    int _t432_l444; 
    int _t425_l444; 
    float q; 
    float q_l444; 
    float _t435_l444; 
    float _t429_l444; 
    int _t420_l444; 
    float _t440_l444; 
    int k_l444; 
    int _t426_l444; 
    float _t430_l444; 
    int _t427_l444; 
    int _t433_l444; 
    float _t438_l444; 
    float _t437_l444; 
    float _t431_l444; 
    float _t444; 
    float _t436_l444; 
    float _t439_l444; 
    _t421_l444 = 0.0; 
    q_l444 = _t421_l444; 
    _t420_l444 = 0; 
    k_l444 = _t420_l444; 
    while (k_l444 < 4096) {
        _t425_l444 = k_l444; 
        _t430_l444 = x[_t425_l444]; 
        _t432_l444 = 1; 
        _t433_l444 = _t425_l444 + _t432_l444; 
        _t435_l444 = z[_t433_l444]; 
        _t436_l444 = x[_t433_l444]; 
        _t437_l444 = _t435_l444 * _t436_l444; 
        _t429_l444 = z[_t425_l444]; 
        _t431_l444 = _t429_l444 * _t430_l444; 
        _t438_l444 = _t431_l444 + _t437_l444; 
        _t439_l444 = q_l444; 
        _t440_l444 = _t438_l444 + _t439_l444; 
        _t426_l444 = 2; 
        _t427_l444 = _t425_l444 + _t426_l444; 
        k_l444 = _t427_l444; 
        q_l444 = _t440_l444;
    } 
    _t444 = q_l444; 
    q = _t444;
    return q;
}
"
413,5,0.0009260271908715367,40969,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    float _t458_l464; 
    int _t447_l464; 
    float q_l464; 
    int _t452_l464; 
    int _t454_l464; 
    float q; 
    float _t448_l464; 
    float _t455_l464; 
    float _t457_l464; 
    float _t460_l464; 
    float _t464; 
    int _t453_l464; 
    int k_l464; 
    float _t459_l464; 
    _t448_l464 = 0.0; 
    q_l464 = _t448_l464; 
    _t447_l464 = 0; 
    k_l464 = _t447_l464; 
    while (k_l464 < 4096) {
        _t452_l464 = k_l464; 
        _t457_l464 = z[_t452_l464]; 
        _t458_l464 = x[_t452_l464]; 
        _t459_l464 = _t457_l464 * _t458_l464; 
        _t455_l464 = q_l464; 
        _t460_l464 = _t455_l464 + _t459_l464; 
        _t453_l464 = 1; 
        _t454_l464 = _t452_l464 + _t453_l464; 
        k_l464 = _t454_l464; 
        q_l464 = _t460_l464;
    } 
    _t464 = q_l464; 
    q = _t464;
    return q;
}
"
1124,8,0.0001871565473265946,4200,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    float _t506_l547; 
    int _t526_l547; 
    float _t563; 
    int _t472_l547; 
    float _t573; 
    float _t513_l547; 
    float _t519_l547; 
    float _t580; 
    float _t570; 
    float _t505_l547; 
    int k_l547; 
    int _t571; 
    int _t545; 
    int _t476_l547; 
    float _t537_l547; 
    float _t501_l547; 
    float _t479_l547; 
    int _t516_l547; 
    float _t498_l547; 
    float _t564; 
    int _t496_l547; 
    float _t524_l547; 
    float q_l547; 
    float _t520_l547; 
    float _t551; 
    float _t549; 
    float _t511_l547; 
    float _t556; 
    float _t491_l547; 
    int _t533_l547; 
    float _t542_l547; 
    float _t531_l547; 
    int _t509_l547; 
    float _t500_l547; 
    float q; 
    int _t473_l547; 
    float _t540_l547; 
    int _t502_l547; 
    int _t475_l547; 
    float _t547; 
    float _t532_l547; 
    float _t525_l547; 
    float _t536_l547; 
    float _t499_l547; 
    int _t508_l547; 
    int _t577; 
    float _t568; 
    float _t576; 
    float _t569; 
    float _t487_l547; 
    float _t492_l547; 
    float _t581; 
    float _t518_l547; 
    float _t538_l547; 
    float _t539_l547; 
    float _t543_l547; 
    float _t562; 
    int _t488_l547; 
    float _t485_l547; 
    float _t541_l547; 
    float _t567; 
    int _t474_l547; 
    float _t514_l547; 
    int _t467_l547; 
    float _t494_l547; 
    float _t579; 
    float _t550; 
    int _t503_l547; 
    float _t582; 
    float _t478_l547; 
    float _t480_l547; 
    float _t575; 
    int _t565; 
    float _t530_l547; 
    int _t559; 
    float _t507_l547; 
    float _t561; 
    float _t484_l547; 
    int _t495_l547; 
    int _t534_l547; 
    int _t515_l547; 
    int _t481_l547; 
    int _t489_l547; 
    int _t482_l547; 
    float _t468_l547; 
    float _t557; 
    float _t558; 
    int _t553; 
    float _t555; 
    float _t512_l547; 
    float _t552; 
    float _t529_l547; 
    float _t521_l547; 
    float _t523_l547; 
    float _t493_l547; 
    int _t527_l547; 
    float _t574; 
    float _t486_l547; 
    _t565 = 4093; 
    _t568 = x[_t565]; 
    _t567 = z[_t565]; 
    _t569 = _t567 * _t568; 
    _t467_l547 = 0; 
    k_l547 = _t467_l547; 
    _t468_l547 = 0.0; 
    q_l547 = _t468_l547; 
    while (k_l547 < 4090) {
        _t472_l547 = k_l547; 
        _t533_l547 = 2; 
        _t534_l547 = _t533_l547 + _t472_l547; 
        _t537_l547 = x[_t534_l547]; 
        _t481_l547 = 7; 
        _t482_l547 = _t481_l547 + _t472_l547; 
        _t473_l547 = 10; 
        _t474_l547 = _t472_l547 + _t473_l547; 
        k_l547 = _t474_l547; 
        _t508_l547 = 3; 
        _t509_l547 = _t508_l547 + _t472_l547; 
        _t512_l547 = x[_t509_l547]; 
        _t511_l547 = z[_t509_l547]; 
        _t513_l547 = _t511_l547 * _t512_l547; 
        _t502_l547 = 4; 
        _t503_l547 = _t502_l547 + _t472_l547; 
        _t505_l547 = z[_t503_l547]; 
        _t506_l547 = x[_t503_l547]; 
        _t507_l547 = _t505_l547 * _t506_l547; 
        _t514_l547 = _t507_l547 + _t513_l547; 
        _t488_l547 = 8; 
        _t489_l547 = _t488_l547 + _t472_l547; 
        _t492_l547 = x[_t489_l547]; 
        _t523_l547 = z[_t472_l547]; 
        _t542_l547 = q_l547; 
        _t495_l547 = 9; 
        _t496_l547 = _t495_l547 + _t472_l547; 
        _t498_l547 = z[_t496_l547]; 
        _t515_l547 = 5; 
        _t516_l547 = _t515_l547 + _t472_l547; 
        _t519_l547 = x[_t516_l547]; 
        _t475_l547 = 6; 
        _t476_l547 = _t475_l547 + _t472_l547; 
        _t526_l547 = 1; 
        _t527_l547 = _t472_l547 + _t526_l547; 
        _t529_l547 = z[_t527_l547]; 
        _t536_l547 = z[_t534_l547]; 
        _t538_l547 = _t536_l547 * _t537_l547; 
        _t484_l547 = z[_t482_l547]; 
        _t491_l547 = z[_t489_l547]; 
        _t493_l547 = _t491_l547 * _t492_l547; 
        _t524_l547 = x[_t472_l547]; 
        _t478_l547 = z[_t476_l547]; 
        _t479_l547 = x[_t476_l547]; 
        _t480_l547 = _t478_l547 * _t479_l547; 
        _t485_l547 = x[_t482_l547]; 
        _t486_l547 = _t484_l547 * _t485_l547; 
        _t487_l547 = _t480_l547 + _t486_l547; 
        _t494_l547 = _t487_l547 + _t493_l547; 
        _t499_l547 = x[_t496_l547]; 
        _t500_l547 = _t498_l547 * _t499_l547; 
        _t501_l547 = _t494_l547 + _t500_l547; 
        _t518_l547 = z[_t516_l547]; 
        _t520_l547 = _t518_l547 * _t519_l547; 
        _t521_l547 = _t514_l547 + _t520_l547; 
        _t530_l547 = x[_t527_l547]; 
        _t531_l547 = _t529_l547 * _t530_l547; 
        _t525_l547 = _t523_l547 * _t524_l547; 
        _t532_l547 = _t525_l547 + _t531_l547; 
        _t539_l547 = _t532_l547 + _t538_l547; 
        _t540_l547 = _t521_l547 + _t539_l547; 
        _t541_l547 = _t501_l547 + _t540_l547; 
        _t543_l547 = _t541_l547 + _t542_l547; 
        q_l547 = _t543_l547;
    } 
    _t547 = q_l547; 
    _t545 = 4090; 
    _t550 = x[_t545]; 
    _t549 = z[_t545]; 
    _t551 = _t549 * _t550; 
    _t552 = _t547 + _t551; 
    _t553 = 4091; 
    _t555 = z[_t553]; 
    _t556 = x[_t553]; 
    _t557 = _t555 * _t556; 
    _t558 = _t552 + _t557; 
    _t559 = 4092; 
    _t561 = z[_t559]; 
    _t562 = x[_t559]; 
    _t563 = _t561 * _t562; 
    _t564 = _t558 + _t563; 
    _t570 = _t564 + _t569; 
    _t571 = 4094; 
    _t574 = x[_t571]; 
    _t573 = z[_t571]; 
    _t575 = _t573 * _t574; 
    _t576 = _t570 + _t575; 
    _t577 = 4095; 
    _t579 = z[_t577]; 
    _t580 = x[_t577]; 
    _t581 = _t579 * _t580; 
    _t582 = _t576 + _t581; 
    q = _t582;
    return q;
}
"
1497,13,0.00016312318621203303,3820,"float kernel_inner_product(float x[100], float z[100]) {
    #pragma np_opt input float x[100] = [0.0, 1.0], float z[100] = [0.0, 1.0] 
    #pragma np_opt output q 
    int _t645_l672; 
    float _t651_l672; 
    float _t662_l672; 
    float _t692; 
    float q_l672; 
    float _t694; 
    float _t586_l672; 
    int _t599_l672; 
    int _t624_l672; 
    float _t630_l672; 
    float _t596_l672; 
    int _t591_l672; 
    int _t653_l672; 
    int _t585_l672; 
    int k_l672; 
    float _t603_l672; 
    float _t672; 
    float _t638_l672; 
    float _t621_l672; 
    float _t642_l672; 
    int _t617_l672; 
    int _t646_l672; 
    float _t656_l672; 
    float _t677; 
    float _t648_l672; 
    float _t689; 
    float _t616_l672; 
    float _t598_l672; 
    float _t629_l672; 
    float _t604_l672; 
    int _t639_l672; 
    int _t670; 
    int _t592_l672; 
    float _t649_l672; 
    float _t597_l672; 
    int _t606_l672; 
    float _t636_l672; 
    int _t690; 
    float _t605_l672; 
    float _t681; 
    float q; 
    float _t614_l672; 
    float _t693; 
    float _t687; 
    float _t627_l672; 
    int _t594_l672; 
    float _t637_l672; 
    float _t615_l672; 
    float _t631_l672; 
    float _t680; 
    float _t610_l672; 
    float _t665_l672; 
    float _t695; 
    float _t674; 
    float _t612_l672; 
    int _t652_l672; 
    float _t628_l672; 
    float _t622_l672; 
    float _t609_l672; 
    int _t684; 
    int _t633_l672; 
    float _t643_l672; 
    float _t682; 
    float _t657_l672; 
    int _t640_l672; 
    int _t678; 
    float _t650_l672; 
    float _t688; 
    float _t667_l672; 
    float _t663_l672; 
    float _t683; 
    int _t607_l672; 
    int _t659_l672; 
    float _t676; 
    float _t611_l672; 
    float _t602_l672; 
    int _t600_l672; 
    int _t625_l672; 
    float _t620_l672; 
    float _t635_l672; 
    int _t660_l672; 
    int _t593_l672; 
    float _t686; 
    float _t644_l672; 
    float _t666_l672; 
    float _t675; 
    float _t664_l672; 
    float _t623_l672; 
    int _t632_l672; 
    float _t668_l672; 
    float _t655_l672; 
    float _t658_l672; 
    int _t618_l672; 
    int _t590_l672; 
    _t585_l672 = 0; 
    k_l672 = _t585_l672; 
    _t586_l672 = 0.0; 
    q_l672 = _t586_l672; 
    while (k_l672 < 4092) {
        _t590_l672 = k_l672; 
        _t659_l672 = 8; 
        _t660_l672 = _t659_l672 + _t590_l672; 
        _t662_l672 = z[_t660_l672]; 
        _t663_l672 = x[_t660_l672]; 
        _t664_l672 = _t662_l672 * _t663_l672; 
        _t652_l672 = 9; 
        _t653_l672 = _t652_l672 + _t590_l672; 
        _t656_l672 = x[_t653_l672]; 
        _t655_l672 = z[_t653_l672]; 
        _t657_l672 = _t655_l672 * _t656_l672; 
        _t645_l672 = 7; 
        _t646_l672 = _t645_l672 + _t590_l672; 
        _t649_l672 = x[_t646_l672]; 
        _t648_l672 = z[_t646_l672]; 
        _t650_l672 = _t648_l672 * _t649_l672; 
        _t639_l672 = 6; 
        _t640_l672 = _t639_l672 + _t590_l672; 
        _t643_l672 = x[_t640_l672]; 
        _t642_l672 = z[_t640_l672]; 
        _t644_l672 = _t642_l672 * _t643_l672; 
        _t651_l672 = _t644_l672 + _t650_l672; 
        _t658_l672 = _t651_l672 + _t657_l672; 
        _t665_l672 = _t658_l672 + _t664_l672; 
        _t606_l672 = 5; 
        _t607_l672 = _t606_l672 + _t590_l672; 
        _t609_l672 = z[_t607_l672]; 
        _t610_l672 = x[_t607_l672]; 
        _t611_l672 = _t609_l672 * _t610_l672; 
        _t591_l672 = 11; 
        _t592_l672 = _t590_l672 + _t591_l672; 
        k_l672 = _t592_l672; 
        _t599_l672 = 3; 
        _t617_l672 = 1; 
        _t618_l672 = _t590_l672 + _t617_l672; 
        _t620_l672 = z[_t618_l672]; 
        _t624_l672 = 2; 
        _t625_l672 = _t624_l672 + _t590_l672; 
        _t627_l672 = z[_t625_l672]; 
        _t628_l672 = x[_t625_l672]; 
        _t629_l672 = _t627_l672 * _t628_l672; 
        _t621_l672 = x[_t618_l672]; 
        _t622_l672 = _t620_l672 * _t621_l672; 
        _t614_l672 = z[_t590_l672]; 
        _t615_l672 = x[_t590_l672]; 
        _t616_l672 = _t614_l672 * _t615_l672; 
        _t623_l672 = _t616_l672 + _t622_l672; 
        _t630_l672 = _t623_l672 + _t629_l672; 
        _t593_l672 = 4; 
        _t594_l672 = _t593_l672 + _t590_l672; 
        _t600_l672 = _t599_l672 + _t590_l672; 
        _t603_l672 = x[_t600_l672]; 
        _t602_l672 = z[_t600_l672]; 
        _t604_l672 = _t602_l672 * _t603_l672; 
        _t632_l672 = 10; 
        _t633_l672 = _t632_l672 + _t590_l672; 
        _t635_l672 = z[_t633_l672]; 
        _t636_l672 = x[_t633_l672]; 
        _t637_l672 = _t635_l672 * _t636_l672; 
        _t597_l672 = x[_t594_l672]; 
        _t596_l672 = z[_t594_l672]; 
        _t598_l672 = _t596_l672 * _t597_l672; 
        _t605_l672 = _t598_l672 + _t604_l672; 
        _t612_l672 = _t605_l672 + _t611_l672; 
        _t631_l672 = _t612_l672 + _t630_l672; 
        _t638_l672 = _t631_l672 + _t637_l672; 
        _t666_l672 = _t638_l672 + _t665_l672; 
        _t667_l672 = q_l672; 
        _t668_l672 = _t666_l672 + _t667_l672; 
        q_l672 = _t668_l672;
    } 
    _t672 = q_l672; 
    _t670 = 4092; 
    _t675 = x[_t670]; 
    _t674 = z[_t670]; 
    _t676 = _t674 * _t675; 
    _t677 = _t672 + _t676; 
    _t678 = 4093; 
    _t681 = x[_t678]; 
    _t680 = z[_t678]; 
    _t682 = _t680 * _t681; 
    _t683 = _t677 + _t682; 
    _t684 = 4094; 
    _t686 = z[_t684]; 
    _t687 = x[_t684]; 
    _t688 = _t686 * _t687; 
    _t689 = _t683 + _t688; 
    _t690 = 4095; 
    _t693 = x[_t690]; 
    _t692 = z[_t690]; 
    _t694 = _t692 * _t693; 
    _t695 = _t689 + _t694; 
    q = _t695;
    return q;
}
"
