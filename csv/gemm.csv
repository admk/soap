lut,dsp,error,latency,expression
497,5,1.9917012453079224,10765729792,"// C := alpha*A*B + beta*C

#define N 1024
#define _PB_NI N
#define _PB_NJ N
#define _PB_NK N

#pragma np_opt input \
    float C[_PB_NI][_PB_NJ] = [0.0, 1.0][0, 0], \
    float A[_PB_NI][_PB_NK] = [0.0, 1.0][0, 0], \
    float B[_PB_NK][_PB_NJ] = [0.0, 1.0][0, 0]
#pragma np_opt output C

int i; int j; int k;
float alpha = 32412;
float beta = 2123;

for (i = 0; i < _PB_NI; i++)
    for (j = 0; j < _PB_NJ; j++)
    {
        C[i][j] *= beta;
        for (k = 0; k < _PB_NK; ++k)
            C[i][j] += alpha * A[i][k] * B[k][j];
    }
"
653,5,0.7587394714355469,2745171968,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    int _t41_l57; 
    float _t9_l57; 
    int _t33_l57; 
    int j_l61; 
    int _t11_l57; 
    int k_l57; 
    float _t31_l57; 
    float _t49_l57; 
    float _t28_l57; 
    float _t24_l57; 
    int _t13_l57; 
    float _t47_l57; 
    float _t21_l57; 
    float _t50_l57; 
    int i_l61; 
    int _t5_l65; 
    int _t34_l57; 
    int _t11_l65; 
    float alpha_l57; 
    int _t62_l65; 
    int _t42_l57; 
    float alpha_l65; 
    float _t9_l65; 
    int _t25_l65; 
    float _t38_l57; 
    int i_l57; 
    int _t13_l61; 
    float _t48_l57; 
    float _t23_l57; 
    int _t58_l61; 
    float _t16_l57; 
    float _t30_l57; 
    float _t10_l57; 
    int _t25_l57; 
    int _t25_l61; 
    float _t44_l57; 
    int _t11_l61; 
    int _t52_l57; 
    int i_l65; 
    float _t10_l65; 
    float _t39_l57; 
    float _t36_l57; 
    float _t32_l57; 
    float alpha_l61; 
    float beta_l65; 
    float _t10_l61; 
    float _t9_l61; 
    int _t7_l65; 
    float _t40_l57; 
    float _t15_l57; 
    int _t53_l57; 
    int _t19_l57; 
    int _t26_l57; 
    float beta_l61; 
    float _t46_l57; 
    int j_l57; 
    int _t7_l61; 
    int _t6_l65; 
    int _t7_l57; 
    _t6_l65 = 2123; 
    beta_l65 = _t6_l65; 
    _t7_l65 = 0; 
    i_l65 = _t7_l65; 
    _t5_l65 = 32412; 
    alpha_l65 = _t5_l65; 
    while (i_l65 < 1024) {
        _t10_l65 = beta_l65; 
        beta_l65 = _t10_l65; 
        _t9_l65 = alpha_l65; 
        _t11_l65 = i_l65; 
        beta_l61 = _t10_l65; 
        _t7_l61 = 0; 
        j_l61 = _t7_l61; 
        _t11_l61 = _t11_l65; 
        i_l61 = _t11_l61; 
        alpha_l61 = _t9_l65; 
        while (j_l61 < 1024) {
            _t10_l61 = beta_l61; 
            beta_l61 = _t10_l61; 
            _t13_l61 = j_l61; 
            _t9_l61 = alpha_l61; 
            _t11_l61 = i_l61; 
            _t7_l57 = 0; 
            k_l57 = _t7_l57; 
            _t13_l57 = _t13_l61; 
            _t11_l57 = _t11_l61; 
            _t15_l57 = C[_t11_l57][_t13_l57]; 
            _t10_l57 = _t10_l61; 
            _t16_l57 = _t15_l57 * _t10_l57; 
            C[_t11_l57][_t13_l57] = _t16_l57; 
            j_l57 = _t13_l57; 
            i_l57 = _t11_l61; 
            alpha_l57 = _t9_l61; 
            while (k_l57 < 1024) {
                _t25_l57 = 1; 
                _t19_l57 = k_l57; 
                _t26_l57 = _t19_l57 + _t25_l57; 
                _t11_l57 = i_l57; 
                _t28_l57 = A[_t11_l57][_t26_l57]; 
                _t9_l57 = alpha_l57; 
                _t41_l57 = 3; 
                _t42_l57 = _t41_l57 + _t19_l57; 
                _t13_l57 = j_l57; 
                _t46_l57 = B[_t42_l57][_t13_l57]; 
                _t44_l57 = A[_t11_l57][_t42_l57]; 
                _t47_l57 = _t44_l57 * _t46_l57; 
                _t33_l57 = 2; 
                _t34_l57 = _t33_l57 + _t19_l57; 
                _t38_l57 = B[_t34_l57][_t13_l57]; 
                _t36_l57 = A[_t11_l57][_t34_l57]; 
                _t39_l57 = _t36_l57 * _t38_l57; 
                _t30_l57 = B[_t26_l57][_t13_l57]; 
                _t31_l57 = _t28_l57 * _t30_l57; 
                _t23_l57 = B[_t19_l57][_t13_l57]; 
                _t21_l57 = A[_t11_l57][_t19_l57]; 
                _t24_l57 = _t21_l57 * _t23_l57; 
                _t32_l57 = _t24_l57 + _t31_l57; 
                _t40_l57 = _t32_l57 + _t39_l57; 
                _t48_l57 = _t40_l57 + _t47_l57; 
                _t49_l57 = _t48_l57 * _t9_l57; 
                _t15_l57 = C[_t11_l57][_t13_l57]; 
                _t50_l57 = _t49_l57 + _t15_l57; 
                j_l57 = _t13_l57; 
                i_l57 = _t11_l57; 
                _t52_l57 = 4; 
                _t53_l57 = _t19_l57 + _t52_l57; 
                k_l57 = _t53_l57; 
                C[_t11_l57][_t13_l57] = _t50_l57; 
                alpha_l57 = _t9_l57;
            } 
            i_l61 = _t11_l61; 
            _t25_l61 = 1; 
            _t58_l61 = _t13_l61 + _t25_l61; 
            j_l61 = _t58_l61; 
            alpha_l61 = _t9_l61;
        } 
        _t25_l65 = 1; 
        _t62_l65 = _t11_l65 + _t25_l65; 
        i_l65 = _t62_l65; 
        alpha_l65 = _t9_l65;
    }
}
"
1581,13,0.6711592674255371,1081081856,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    float _t91_l184; 
    float _t162_l184; 
    int _t135_l202; 
    float _t110_l184; 
    float _t134_l184; 
    float _t129_l184; 
    float _t106_l184; 
    float beta_l198; 
    float _t97_l184; 
    float alpha_l202; 
    int _t122_l184; 
    float _t176_l184; 
    float _t101_l184; 
    int _t79_l198; 
    float _t93_l184; 
    int _t86_l184; 
    float _t188_l198; 
    int _t87_l184; 
    int _t182_l198; 
    float _t156_l184; 
    int _t168_l184; 
    float _t75_l184; 
    int _t143_l184; 
    int i_l198; 
    float _t131_l184; 
    float _t127_l184; 
    float beta_l202; 
    int _t194_l198; 
    int _t160_l184; 
    float _t172_l184; 
    float _t191_l198; 
    int _t135_l184; 
    float _t175_l184; 
    float _t76_l184; 
    float _t109_l184; 
    int _t152_l184; 
    float _t164_l184; 
    int i_l184; 
    int _t151_l184; 
    int _t167_l184; 
    int _t103_l184; 
    float _t187_l198; 
    float alpha_l184; 
    float _t92_l184; 
    float _t89_l184; 
    float _t192_l198; 
    int _t79_l184; 
    int _t94_l184; 
    int _t179_l184; 
    int _t112_l184; 
    float _t76_l198; 
    int k_l184; 
    float _t75_l198; 
    float _t148_l184; 
    float _t128_l184; 
    float _t138_l184; 
    float _t133_l184; 
    int _t73_l184; 
    int _t121_l184; 
    float _t146_l184; 
    int _t77_l202; 
    float _t119_l184; 
    float _t102_l184; 
    float _t157_l184; 
    float _t150_l184; 
    float _t126_l184; 
    float _t158_l184; 
    int _t77_l184; 
    float _t185_l198; 
    float _t75_l202; 
    float _t108_l184; 
    float _t170_l184; 
    float _t166_l184; 
    float _t115_l184; 
    int _t144_l184; 
    float _t124_l184; 
    float _t82_l184; 
    int _t77_l198; 
    float _t120_l184; 
    float _t190_l198; 
    float _t142_l184; 
    float alpha_l198; 
    float _t76_l202; 
    float _t177_l184; 
    int _t136_l184; 
    float _t140_l184; 
    float _t141_l184; 
    float _t117_l184; 
    int _t135_l198; 
    int _t85_l184; 
    int _t95_l184; 
    int _t180_l184; 
    float _t174_l184; 
    int j_l198; 
    int _t71_l202; 
    float _t173_l184; 
    float _t81_l184; 
    float _t118_l184; 
    float _t149_l184; 
    int _t159_l184; 
    int j_l184; 
    int _t199_l202; 
    float _t100_l184; 
    int _t73_l198; 
    int i_l202; 
    int _t113_l184; 
    float _t99_l184; 
    int _t73_l202; 
    int _t72_l202; 
    float _t165_l184; 
    float _t154_l184; 
    int _t104_l184; 
    float _t111_l184; 
    _t72_l202 = 2123; 
    beta_l202 = _t72_l202; 
    _t73_l202 = 0; 
    i_l202 = _t73_l202; 
    _t71_l202 = 32412; 
    alpha_l202 = _t71_l202; 
    while (i_l202 < 1024) {
        _t76_l202 = beta_l202; 
        _t77_l202 = i_l202; 
        _t75_l202 = alpha_l202; 
        beta_l198 = _t76_l202; 
        _t73_l198 = 0; 
        j_l198 = _t73_l198; 
        _t77_l198 = _t77_l202; 
        i_l198 = _t77_l198; 
        alpha_l198 = _t75_l202; 
        while (j_l198 < 1024) {
            _t79_l198 = j_l198; 
            _t77_l198 = i_l198; 
            _t135_l198 = 1; 
            _t76_l198 = beta_l198; 
            _t75_l198 = alpha_l198; 
            _t73_l184 = 0; 
            k_l184 = _t73_l184; 
            _t79_l184 = _t79_l198; 
            _t77_l184 = _t77_l198; 
            _t81_l184 = C[_t77_l184][_t79_l184]; 
            _t76_l184 = _t76_l198; 
            _t82_l184 = _t81_l184 * _t76_l184; 
            C[_t77_l184][_t79_l184] = _t82_l184; 
            j_l184 = _t79_l184; 
            i_l184 = _t77_l198; 
            alpha_l184 = _t75_l198; 
            while (k_l184 < 1023) {
                _t86_l184 = k_l184; 
                _t85_l184 = 6; 
                _t87_l184 = _t85_l184 + _t86_l184; 
                _t77_l184 = i_l184; 
                _t89_l184 = A[_t77_l184][_t87_l184]; 
                _t79_l184 = j_l184; 
                _t91_l184 = B[_t87_l184][_t79_l184]; 
                _t92_l184 = _t89_l184 * _t91_l184; 
                _t75_l184 = alpha_l184; 
                _t93_l184 = _t92_l184 * _t75_l184; 
                _t94_l184 = 7; 
                _t95_l184 = _t94_l184 + _t86_l184; 
                _t97_l184 = A[_t77_l184][_t95_l184]; 
                _t99_l184 = B[_t95_l184][_t79_l184]; 
                _t100_l184 = _t97_l184 * _t99_l184; 
                _t101_l184 = _t100_l184 * _t75_l184; 
                _t102_l184 = _t93_l184 + _t101_l184; 
                _t81_l184 = C[_t77_l184][_t79_l184]; 
                _t121_l184 = 10; 
                _t122_l184 = _t121_l184 + _t86_l184; 
                _t126_l184 = B[_t122_l184][_t79_l184]; 
                _t124_l184 = A[_t77_l184][_t122_l184]; 
                _t127_l184 = _t124_l184 * _t126_l184; 
                _t128_l184 = _t127_l184 * _t75_l184; 
                _t112_l184 = 9; 
                _t113_l184 = _t112_l184 + _t86_l184; 
                _t117_l184 = B[_t113_l184][_t79_l184]; 
                _t115_l184 = A[_t77_l184][_t113_l184]; 
                _t118_l184 = _t115_l184 * _t117_l184; 
                _t119_l184 = _t118_l184 * _t75_l184; 
                _t103_l184 = 8; 
                _t104_l184 = _t103_l184 + _t86_l184; 
                _t108_l184 = B[_t104_l184][_t79_l184]; 
                _t106_l184 = A[_t77_l184][_t104_l184]; 
                _t109_l184 = _t106_l184 * _t108_l184; 
                _t110_l184 = _t109_l184 * _t75_l184; 
                _t111_l184 = _t102_l184 + _t110_l184; 
                _t120_l184 = _t111_l184 + _t119_l184; 
                _t129_l184 = _t120_l184 + _t128_l184; 
                _t133_l184 = B[_t86_l184][_t79_l184]; 
                _t131_l184 = A[_t77_l184][_t86_l184]; 
                _t134_l184 = _t131_l184 * _t133_l184; 
                _t135_l184 = 1; 
                _t136_l184 = _t86_l184 + _t135_l184; 
                _t140_l184 = B[_t136_l184][_t79_l184]; 
                _t138_l184 = A[_t77_l184][_t136_l184]; 
                _t141_l184 = _t138_l184 * _t140_l184; 
                _t142_l184 = _t134_l184 + _t141_l184; 
                _t143_l184 = 2; 
                _t144_l184 = _t143_l184 + _t86_l184; 
                _t148_l184 = B[_t144_l184][_t79_l184]; 
                _t146_l184 = A[_t77_l184][_t144_l184]; 
                _t149_l184 = _t146_l184 * _t148_l184; 
                _t150_l184 = _t142_l184 + _t149_l184; 
                _t151_l184 = 3; 
                _t152_l184 = _t151_l184 + _t86_l184; 
                _t156_l184 = B[_t152_l184][_t79_l184]; 
                _t154_l184 = A[_t77_l184][_t152_l184]; 
                _t157_l184 = _t154_l184 * _t156_l184; 
                _t158_l184 = _t150_l184 + _t157_l184; 
                _t159_l184 = 4; 
                _t160_l184 = _t159_l184 + _t86_l184; 
                _t164_l184 = B[_t160_l184][_t79_l184]; 
                _t162_l184 = A[_t77_l184][_t160_l184]; 
                _t165_l184 = _t162_l184 * _t164_l184; 
                _t166_l184 = _t158_l184 + _t165_l184; 
                _t167_l184 = 5; 
                _t168_l184 = _t167_l184 + _t86_l184; 
                _t172_l184 = B[_t168_l184][_t79_l184]; 
                _t170_l184 = A[_t77_l184][_t168_l184]; 
                _t173_l184 = _t170_l184 * _t172_l184; 
                _t174_l184 = _t166_l184 + _t173_l184; 
                _t175_l184 = _t174_l184 * _t75_l184; 
                _t176_l184 = _t129_l184 + _t175_l184; 
                _t177_l184 = _t176_l184 + _t81_l184; 
                C[_t77_l184][_t79_l184] = _t177_l184; 
                _t179_l184 = 11; 
                _t180_l184 = _t86_l184 + _t179_l184; 
                k_l184 = _t180_l184; 
                alpha_l184 = _t75_l184; 
                j_l184 = _t79_l184; 
                i_l184 = _t77_l184;
            } 
            _t185_l198 = C[_t77_l198][_t79_l198]; 
            _t182_l198 = 1023; 
            _t190_l198 = B[_t182_l198][_t79_l198]; 
            _t187_l198 = A[_t77_l198][_t182_l198]; 
            _t188_l198 = _t75_l198 * _t187_l198; 
            _t191_l198 = _t188_l198 * _t190_l198; 
            _t192_l198 = _t185_l198 + _t191_l198; 
            C[_t77_l198][_t79_l198] = _t192_l198; 
            _t194_l198 = _t79_l198 + _t135_l198; 
            alpha_l198 = _t75_l198; 
            beta_l198 = _t76_l198; 
            j_l198 = _t194_l198; 
            i_l198 = _t77_l198;
        } 
        _t135_l202 = 1; 
        beta_l202 = _t76_l202; 
        _t199_l202 = _t77_l202 + _t135_l202; 
        i_l202 = _t199_l202; 
        alpha_l202 = _t75_l202;
    }
}
"
497,5,2.041185140609741,10765729792,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    float _t219_l236; 
    int _t216_l236; 
    int _t237_l240; 
    int _t231_l240; 
    int _t231_l244; 
    int _t214_l236; 
    float _t224_l236; 
    float _t213_l236; 
    int k_l236; 
    float beta_l244; 
    int j_l240; 
    float _t229_l236; 
    int i_l240; 
    float _t212_l236; 
    float _t228_l236; 
    float _t227_l236; 
    float _t226_l236; 
    int _t214_l240; 
    int _t214_l244; 
    int _t210_l244; 
    int j_l236; 
    int i_l244; 
    float alpha_l244; 
    float _t213_l244; 
    int i_l236; 
    float alpha_l236; 
    int _t222_l236; 
    float beta_l240; 
    float alpha_l240; 
    float _t212_l244; 
    int _t210_l236; 
    int _t232_l236; 
    int _t231_l236; 
    float _t212_l240; 
    int _t209_l244; 
    float _t218_l236; 
    int _t208_l244; 
    float _t213_l240; 
    int _t210_l240; 
    int _t216_l240; 
    int _t241_l244; 
    _t209_l244 = 2123; 
    beta_l244 = _t209_l244; 
    _t210_l244 = 0; 
    i_l244 = _t210_l244; 
    _t208_l244 = 32412; 
    alpha_l244 = _t208_l244; 
    while (i_l244 < 1024) {
        _t214_l244 = i_l244; 
        _t231_l244 = 1; 
        _t241_l244 = _t214_l244 + _t231_l244; 
        _t213_l244 = beta_l244; 
        beta_l244 = _t213_l244; 
        _t212_l244 = alpha_l244; 
        beta_l240 = _t213_l244; 
        _t210_l240 = 0; 
        j_l240 = _t210_l240; 
        _t214_l240 = _t214_l244; 
        i_l240 = _t214_l240; 
        alpha_l240 = _t212_l244; 
        while (j_l240 < 1024) {
            _t213_l240 = beta_l240; 
            beta_l240 = _t213_l240; 
            _t214_l240 = i_l240; 
            _t216_l240 = j_l240; 
            _t212_l240 = alpha_l240; 
            _t210_l236 = 0; 
            k_l236 = _t210_l236; 
            _t214_l236 = _t214_l240; 
            _t216_l236 = _t216_l240; 
            _t218_l236 = C[_t214_l236][_t216_l236]; 
            _t213_l236 = _t213_l240; 
            _t219_l236 = _t218_l236 * _t213_l236; 
            C[_t214_l236][_t216_l236] = _t219_l236; 
            j_l236 = _t216_l236; 
            i_l236 = _t214_l240; 
            alpha_l236 = _t212_l240; 
            while (k_l236 < 1024) {
                _t214_l236 = i_l236; 
                _t216_l236 = j_l236; 
                _t218_l236 = C[_t214_l236][_t216_l236]; 
                _t212_l236 = alpha_l236; 
                _t222_l236 = k_l236; 
                _t226_l236 = B[_t222_l236][_t216_l236]; 
                _t224_l236 = A[_t214_l236][_t222_l236]; 
                _t227_l236 = _t224_l236 * _t226_l236; 
                _t228_l236 = _t227_l236 * _t212_l236; 
                _t229_l236 = _t218_l236 + _t228_l236; 
                C[_t214_l236][_t216_l236] = _t229_l236; 
                _t231_l236 = 1; 
                _t232_l236 = _t222_l236 + _t231_l236; 
                j_l236 = _t216_l236; 
                alpha_l236 = _t212_l236; 
                i_l236 = _t214_l236; 
                k_l236 = _t232_l236;
            } 
            i_l240 = _t214_l240; 
            _t231_l240 = 1; 
            _t237_l240 = _t216_l240 + _t231_l240; 
            j_l240 = _t237_l240; 
            alpha_l240 = _t212_l240;
        } 
        i_l244 = _t241_l244; 
        alpha_l244 = _t212_l244;
    }
}
"
1004,8,0.6632954478263855,1434451968,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    int _t287_l336; 
    int _t266_l336; 
    int _t304_l336; 
    float _t324_l336; 
    int i_l340; 
    float _t260_l336; 
    int _t288_l336; 
    float _t285_l336; 
    int _t252_l344; 
    int _t252_l336; 
    int _t295_l336; 
    float _t310_l336; 
    float _t270_l336; 
    float _t281_l336; 
    float _t314_l336; 
    int i_l336; 
    int j_l340; 
    int _t273_l336; 
    float _t278_l336; 
    int _t341_l344; 
    float alpha_l340; 
    int _t287_l340; 
    float _t292_l336; 
    float beta_l340; 
    float _t318_l336; 
    int _t311_l336; 
    int _t258_l340; 
    int _t250_l344; 
    float _t279_l336; 
    int _t332_l336; 
    float _t294_l336; 
    float _t271_l336; 
    int _t287_l344; 
    float _t255_l336; 
    int i_l344; 
    float _t306_l336; 
    float _t298_l336; 
    int _t303_l336; 
    int _t256_l340; 
    float _t261_l336; 
    float _t325_l336; 
    int _t256_l344; 
    int _t296_l336; 
    float _t316_l336; 
    float beta_l344; 
    float _t283_l336; 
    float _t286_l336; 
    float _t255_l344; 
    float _t268_l336; 
    int _t256_l336; 
    int _t312_l336; 
    float alpha_l344; 
    int _t337_l340; 
    int _t319_l336; 
    int _t264_l336; 
    int k_l336; 
    float _t326_l336; 
    float _t308_l336; 
    float _t280_l336; 
    float _t317_l336; 
    int _t320_l336; 
    int j_l336; 
    float _t254_l336; 
    float _t327_l336; 
    int _t258_l336; 
    float _t290_l336; 
    int _t274_l336; 
    float _t301_l336; 
    float _t254_l344; 
    float _t302_l336; 
    float _t329_l336; 
    float _t300_l336; 
    float _t255_l340; 
    float _t328_l336; 
    int _t265_l336; 
    float _t254_l340; 
    float _t309_l336; 
    int _t252_l340; 
    int _t251_l344; 
    int _t331_l336; 
    float _t272_l336; 
    float _t276_l336; 
    float _t293_l336; 
    float alpha_l336; 
    float _t322_l336; 
    _t251_l344 = 2123; 
    beta_l344 = _t251_l344; 
    _t252_l344 = 0; 
    i_l344 = _t252_l344; 
    _t250_l344 = 32412; 
    alpha_l344 = _t250_l344; 
    while (i_l344 < 1024) {
        _t255_l344 = beta_l344; 
        beta_l344 = _t255_l344; 
        _t254_l344 = alpha_l344; 
        _t256_l344 = i_l344; 
        beta_l340 = _t255_l344; 
        _t252_l340 = 0; 
        j_l340 = _t252_l340; 
        _t256_l340 = _t256_l344; 
        i_l340 = _t256_l340; 
        alpha_l340 = _t254_l344; 
        while (j_l340 < 1024) {
            _t287_l340 = 1; 
            _t258_l340 = j_l340; 
            _t337_l340 = _t258_l340 + _t287_l340; 
            _t255_l340 = beta_l340; 
            beta_l340 = _t255_l340; 
            _t254_l340 = alpha_l340; 
            _t256_l340 = i_l340; 
            _t252_l336 = 0; 
            k_l336 = _t252_l336; 
            _t258_l336 = _t258_l340; 
            _t256_l336 = _t256_l340; 
            _t260_l336 = C[_t256_l336][_t258_l336]; 
            _t255_l336 = _t255_l340; 
            _t261_l336 = _t260_l336 * _t255_l336; 
            C[_t256_l336][_t258_l336] = _t261_l336; 
            j_l336 = _t258_l336; 
            i_l336 = _t256_l340; 
            alpha_l336 = _t254_l340; 
            while (k_l336 < 1024) {
                _t258_l336 = j_l336; 
                _t256_l336 = i_l336; 
                _t260_l336 = C[_t256_l336][_t258_l336]; 
                _t254_l336 = alpha_l336; 
                _t273_l336 = 7; 
                _t265_l336 = k_l336; 
                _t274_l336 = _t273_l336 + _t265_l336; 
                _t278_l336 = B[_t274_l336][_t258_l336]; 
                _t276_l336 = A[_t256_l336][_t274_l336]; 
                _t279_l336 = _t276_l336 * _t278_l336; 
                _t280_l336 = _t279_l336 * _t254_l336; 
                _t264_l336 = 6; 
                _t266_l336 = _t264_l336 + _t265_l336; 
                _t270_l336 = B[_t266_l336][_t258_l336]; 
                _t268_l336 = A[_t256_l336][_t266_l336]; 
                _t271_l336 = _t268_l336 * _t270_l336; 
                _t272_l336 = _t271_l336 * _t254_l336; 
                _t281_l336 = _t272_l336 + _t280_l336; 
                _t285_l336 = B[_t265_l336][_t258_l336]; 
                _t283_l336 = A[_t256_l336][_t265_l336]; 
                _t286_l336 = _t283_l336 * _t285_l336; 
                _t287_l336 = 1; 
                _t288_l336 = _t265_l336 + _t287_l336; 
                _t292_l336 = B[_t288_l336][_t258_l336]; 
                _t290_l336 = A[_t256_l336][_t288_l336]; 
                _t293_l336 = _t290_l336 * _t292_l336; 
                _t294_l336 = _t286_l336 + _t293_l336; 
                _t295_l336 = 2; 
                _t296_l336 = _t295_l336 + _t265_l336; 
                _t300_l336 = B[_t296_l336][_t258_l336]; 
                _t298_l336 = A[_t256_l336][_t296_l336]; 
                _t301_l336 = _t298_l336 * _t300_l336; 
                _t302_l336 = _t294_l336 + _t301_l336; 
                _t303_l336 = 3; 
                _t304_l336 = _t303_l336 + _t265_l336; 
                _t308_l336 = B[_t304_l336][_t258_l336]; 
                _t306_l336 = A[_t256_l336][_t304_l336]; 
                _t309_l336 = _t306_l336 * _t308_l336; 
                _t310_l336 = _t302_l336 + _t309_l336; 
                _t311_l336 = 4; 
                _t312_l336 = _t311_l336 + _t265_l336; 
                _t316_l336 = B[_t312_l336][_t258_l336]; 
                _t314_l336 = A[_t256_l336][_t312_l336]; 
                _t317_l336 = _t314_l336 * _t316_l336; 
                _t318_l336 = _t310_l336 + _t317_l336; 
                _t319_l336 = 5; 
                _t320_l336 = _t319_l336 + _t265_l336; 
                _t324_l336 = B[_t320_l336][_t258_l336]; 
                _t322_l336 = A[_t256_l336][_t320_l336]; 
                _t325_l336 = _t322_l336 * _t324_l336; 
                _t326_l336 = _t318_l336 + _t325_l336; 
                _t327_l336 = _t326_l336 * _t254_l336; 
                _t328_l336 = _t281_l336 + _t327_l336; 
                _t329_l336 = _t328_l336 + _t260_l336; 
                C[_t256_l336][_t258_l336] = _t329_l336; 
                _t331_l336 = 8; 
                j_l336 = _t258_l336; 
                i_l336 = _t256_l336; 
                _t332_l336 = _t265_l336 + _t331_l336; 
                k_l336 = _t332_l336; 
                alpha_l336 = _t254_l336;
            } 
            i_l340 = _t256_l340; 
            j_l340 = _t337_l340; 
            alpha_l340 = _t254_l340;
        } 
        _t287_l344 = 1; 
        _t341_l344 = _t256_l344 + _t287_l344; 
        i_l344 = _t341_l344; 
        alpha_l344 = _t254_l344;
    }
}
"
559,5,1.1138536930084229,5408555008,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    int _t358_l387; 
    float _t355_l395; 
    int _t383_l387; 
    int _t352_l391; 
    int _t358_l391; 
    int i_l395; 
    float _t360_l387; 
    float _t355_l387; 
    float _t361_l387; 
    float beta_l391; 
    int _t388_l391; 
    int _t350_l395; 
    int j_l387; 
    float _t380_l387; 
    int _t356_l387; 
    float _t354_l395; 
    float _t376_l387; 
    float _t355_l391; 
    float _t366_l387; 
    int i_l387; 
    int i_l391; 
    float alpha_l395; 
    float _t370_l387; 
    int k_l387; 
    int _t371_l395; 
    float alpha_l391; 
    float _t354_l391; 
    float _t378_l387; 
    int _t382_l387; 
    float _t369_l387; 
    int _t371_l391; 
    int _t352_l395; 
    int j_l391; 
    float _t354_l387; 
    float _t374_l387; 
    int _t392_l395; 
    int _t371_l387; 
    int _t364_l387; 
    int _t351_l395; 
    float beta_l395; 
    int _t372_l387; 
    float _t377_l387; 
    float alpha_l387; 
    int _t356_l391; 
    float _t379_l387; 
    int _t356_l395; 
    int _t352_l387; 
    float _t368_l387; 
    _t351_l395 = 2123; 
    beta_l395 = _t351_l395; 
    _t352_l395 = 0; 
    i_l395 = _t352_l395; 
    _t350_l395 = 32412; 
    alpha_l395 = _t350_l395; 
    while (i_l395 < 1024) {
        _t355_l395 = beta_l395; 
        beta_l395 = _t355_l395; 
        _t354_l395 = alpha_l395; 
        _t356_l395 = i_l395; 
        beta_l391 = _t355_l395; 
        _t352_l391 = 0; 
        j_l391 = _t352_l391; 
        _t356_l391 = _t356_l395; 
        i_l391 = _t356_l391; 
        alpha_l391 = _t354_l395; 
        while (j_l391 < 1024) {
            _t358_l391 = j_l391; 
            _t355_l391 = beta_l391; 
            beta_l391 = _t355_l391; 
            _t354_l391 = alpha_l391; 
            _t356_l391 = i_l391; 
            _t352_l387 = 0; 
            k_l387 = _t352_l387; 
            _t358_l387 = _t358_l391; 
            _t356_l387 = _t356_l391; 
            _t360_l387 = C[_t356_l387][_t358_l387]; 
            _t355_l387 = _t355_l391; 
            _t361_l387 = _t360_l387 * _t355_l387; 
            C[_t356_l387][_t358_l387] = _t361_l387; 
            j_l387 = _t358_l387; 
            i_l387 = _t356_l391; 
            alpha_l387 = _t354_l391; 
            while (k_l387 < 1024) {
                _t358_l387 = j_l387; 
                _t356_l387 = i_l387; 
                _t360_l387 = C[_t356_l387][_t358_l387]; 
                _t364_l387 = k_l387; 
                _t371_l387 = 1; 
                _t372_l387 = _t364_l387 + _t371_l387; 
                _t374_l387 = A[_t356_l387][_t372_l387]; 
                _t376_l387 = B[_t372_l387][_t358_l387]; 
                _t377_l387 = _t374_l387 * _t376_l387; 
                _t354_l387 = alpha_l387; 
                _t378_l387 = _t377_l387 * _t354_l387; 
                _t366_l387 = A[_t356_l387][_t364_l387]; 
                _t368_l387 = B[_t364_l387][_t358_l387]; 
                _t369_l387 = _t366_l387 * _t368_l387; 
                _t370_l387 = _t369_l387 * _t354_l387; 
                _t379_l387 = _t370_l387 + _t378_l387; 
                _t380_l387 = _t379_l387 + _t360_l387; 
                C[_t356_l387][_t358_l387] = _t380_l387; 
                _t382_l387 = 2; 
                _t383_l387 = _t364_l387 + _t382_l387; 
                j_l387 = _t358_l387; 
                alpha_l387 = _t354_l387; 
                i_l387 = _t356_l387; 
                k_l387 = _t383_l387;
            } 
            _t371_l391 = 1; 
            i_l391 = _t356_l391; 
            _t388_l391 = _t358_l391 + _t371_l391; 
            j_l391 = _t388_l391; 
            alpha_l391 = _t354_l391;
        } 
        _t371_l395 = 1; 
        _t392_l395 = _t356_l395 + _t371_l395; 
        i_l395 = _t392_l395; 
        alpha_l395 = _t354_l395;
    }
}
"
861,5,0.7385287284851074,1444937728,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    int _t407_l493; 
    float _t478_l485; 
    float _t468_l485; 
    float _t472_l485; 
    float _t405_l485; 
    float _t444_l485; 
    float _t459_l485; 
    float _t434_l485; 
    float beta_l489; 
    int _t421_l493; 
    float _t458_l485; 
    int _t421_l489; 
    int j_l485; 
    float _t443_l485; 
    int _t403_l493; 
    int i_l489; 
    float _t476_l485; 
    int _t481_l485; 
    int _t430_l485; 
    int j_l489; 
    int _t407_l489; 
    float _t427_l485; 
    float _t474_l485; 
    float _t435_l485; 
    int _t446_l485; 
    float _t417_l485; 
    int i_l485; 
    float _t406_l485; 
    float alpha_l489; 
    float _t426_l485; 
    int _t437_l485; 
    int _t401_l493; 
    float _t440_l485; 
    float _t456_l485; 
    float _t419_l485; 
    float _t467_l485; 
    float _t405_l489; 
    int _t415_l485; 
    int _t421_l485; 
    int _t490_l493; 
    float _t477_l485; 
    float _t436_l485; 
    int _t422_l485; 
    float beta_l493; 
    float _t451_l485; 
    float _t412_l485; 
    int _t454_l485; 
    float _t448_l485; 
    float _t406_l489; 
    int _t407_l485; 
    int _t429_l485; 
    int k_l485; 
    int _t445_l485; 
    float _t406_l493; 
    float _t420_l485; 
    float _t411_l485; 
    float _t405_l493; 
    int _t403_l489; 
    int i_l493; 
    float alpha_l493; 
    int _t470_l485; 
    float _t452_l485; 
    int _t480_l485; 
    int _t462_l485; 
    float _t460_l485; 
    float _t424_l485; 
    float alpha_l485; 
    float _t450_l485; 
    int _t461_l485; 
    int _t469_l485; 
    float _t428_l485; 
    float _t475_l485; 
    float _t432_l485; 
    float _t442_l485; 
    int _t409_l485; 
    float _t466_l485; 
    int _t403_l485; 
    int _t486_l489; 
    int _t402_l493; 
    int _t409_l489; 
    float _t464_l485; 
    int _t438_l485; 
    int _t453_l485; 
    _t402_l493 = 2123; 
    beta_l493 = _t402_l493; 
    _t403_l493 = 0; 
    i_l493 = _t403_l493; 
    _t401_l493 = 32412; 
    alpha_l493 = _t401_l493; 
    while (i_l493 < 1024) {
        _t405_l493 = alpha_l493; 
        alpha_l493 = _t405_l493; 
        _t406_l493 = beta_l493; 
        beta_l493 = _t406_l493; 
        _t407_l493 = i_l493; 
        beta_l489 = _t406_l493; 
        _t403_l489 = 0; 
        j_l489 = _t403_l489; 
        _t407_l489 = _t407_l493; 
        i_l489 = _t407_l489; 
        alpha_l489 = _t405_l493; 
        while (j_l489 < 1024) {
            _t409_l489 = j_l489; 
            _t421_l489 = 1; 
            _t486_l489 = _t409_l489 + _t421_l489; 
            _t405_l489 = alpha_l489; 
            alpha_l489 = _t405_l489; 
            _t406_l489 = beta_l489; 
            beta_l489 = _t406_l489; 
            _t407_l489 = i_l489; 
            _t403_l485 = 0; 
            k_l485 = _t403_l485; 
            _t406_l485 = _t406_l489; 
            _t409_l485 = _t409_l489; 
            _t407_l485 = _t407_l489; 
            _t411_l485 = C[_t407_l485][_t409_l485]; 
            _t412_l485 = _t411_l485 * _t406_l485; 
            C[_t407_l485][_t409_l485] = _t412_l485; 
            j_l485 = _t409_l485; 
            i_l485 = _t407_l489; 
            alpha_l485 = _t405_l489; 
            while (k_l485 < 1024) {
                _t415_l485 = k_l485; 
                _t461_l485 = 6; 
                _t462_l485 = _t461_l485 + _t415_l485; 
                _t409_l485 = j_l485; 
                _t453_l485 = 5; 
                _t454_l485 = _t453_l485 + _t415_l485; 
                _t407_l485 = i_l485; 
                _t429_l485 = 2; 
                _t430_l485 = _t429_l485 + _t415_l485; 
                _t434_l485 = B[_t430_l485][_t409_l485]; 
                _t421_l485 = 1; 
                _t422_l485 = _t415_l485 + _t421_l485; 
                _t424_l485 = A[_t407_l485][_t422_l485]; 
                _t417_l485 = A[_t407_l485][_t415_l485]; 
                _t419_l485 = B[_t415_l485][_t409_l485]; 
                _t420_l485 = _t417_l485 * _t419_l485; 
                _t426_l485 = B[_t422_l485][_t409_l485]; 
                _t427_l485 = _t424_l485 * _t426_l485; 
                _t428_l485 = _t420_l485 + _t427_l485; 
                _t432_l485 = A[_t407_l485][_t430_l485]; 
                _t435_l485 = _t432_l485 * _t434_l485; 
                _t436_l485 = _t428_l485 + _t435_l485; 
                _t437_l485 = 3; 
                _t438_l485 = _t437_l485 + _t415_l485; 
                _t442_l485 = B[_t438_l485][_t409_l485]; 
                _t440_l485 = A[_t407_l485][_t438_l485]; 
                _t443_l485 = _t440_l485 * _t442_l485; 
                _t444_l485 = _t436_l485 + _t443_l485; 
                _t445_l485 = 4; 
                _t446_l485 = _t445_l485 + _t415_l485; 
                _t450_l485 = B[_t446_l485][_t409_l485]; 
                _t448_l485 = A[_t407_l485][_t446_l485]; 
                _t451_l485 = _t448_l485 * _t450_l485; 
                _t452_l485 = _t444_l485 + _t451_l485; 
                _t458_l485 = B[_t454_l485][_t409_l485]; 
                _t456_l485 = A[_t407_l485][_t454_l485]; 
                _t459_l485 = _t456_l485 * _t458_l485; 
                _t460_l485 = _t452_l485 + _t459_l485; 
                _t466_l485 = B[_t462_l485][_t409_l485]; 
                _t464_l485 = A[_t407_l485][_t462_l485]; 
                _t467_l485 = _t464_l485 * _t466_l485; 
                _t468_l485 = _t460_l485 + _t467_l485; 
                _t469_l485 = 7; 
                _t470_l485 = _t469_l485 + _t415_l485; 
                _t474_l485 = B[_t470_l485][_t409_l485]; 
                _t472_l485 = A[_t407_l485][_t470_l485]; 
                _t475_l485 = _t472_l485 * _t474_l485; 
                _t476_l485 = _t468_l485 + _t475_l485; 
                _t405_l485 = alpha_l485; 
                _t477_l485 = _t476_l485 * _t405_l485; 
                _t411_l485 = C[_t407_l485][_t409_l485]; 
                _t478_l485 = _t477_l485 + _t411_l485; 
                _t480_l485 = 8; 
                _t481_l485 = _t415_l485 + _t480_l485; 
                j_l485 = _t409_l485; 
                i_l485 = _t407_l485; 
                k_l485 = _t481_l485; 
                C[_t407_l485][_t409_l485] = _t478_l485; 
                alpha_l485 = _t405_l485;
            } 
            i_l489 = _t407_l489; 
            j_l489 = _t486_l489;
        } 
        _t421_l493 = 1; 
        _t490_l493 = _t407_l493 + _t421_l493; 
        i_l493 = _t490_l493;
    }
}
"
1531,13,0.8400847315788269,1123024896,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    int _t527_l607; 
    float _t570_l607; 
    float _t598_l607; 
    float _t615_l621; 
    float _t524_l607; 
    int _t505_l625; 
    float _t610_l621; 
    int _t560_l607; 
    float _t613_l621; 
    int i_l607; 
    float _t582_l607; 
    float _t518_l607; 
    float _t573_l607; 
    int _t576_l607; 
    int _t591_l607; 
    float _t572_l607; 
    float _t580_l607; 
    int _t535_l607; 
    float alpha_l625; 
    float _t503_l621; 
    float _t504_l621; 
    float _t503_l607; 
    float _t596_l607; 
    float _t554_l607; 
    float _t515_l607; 
    int _t617_l621; 
    float _t503_l625; 
    float alpha_l607; 
    int _t507_l621; 
    float _t532_l607; 
    int j_l621; 
    int _t507_l607; 
    int _t551_l607; 
    float _t594_l607; 
    int _t602_l607; 
    int j_l607; 
    float _t611_l621; 
    int _t622_l625; 
    float _t564_l607; 
    float _t504_l607; 
    float _t590_l607; 
    float _t566_l607; 
    int _t520_l607; 
    float _t534_l607; 
    float _t578_l607; 
    int _t501_l625; 
    int _t584_l607; 
    int k_l607; 
    float _t522_l607; 
    float _t504_l625; 
    int _t536_l607; 
    float _t517_l607; 
    float _t597_l607; 
    float _t562_l607; 
    int _t559_l607; 
    float _t533_l607; 
    float _t589_l607; 
    float _t538_l607; 
    float _t510_l607; 
    int _t501_l621; 
    float _t600_l607; 
    int _t552_l607; 
    float _t599_l607; 
    float _t586_l607; 
    float _t550_l607; 
    int _t519_l625; 
    int _t575_l607; 
    float _t574_l607; 
    float _t558_l607; 
    float _t581_l607; 
    int _t603_l607; 
    float _t526_l607; 
    int _t568_l607; 
    int _t544_l607; 
    float _t549_l607; 
    float _t588_l607; 
    float _t509_l607; 
    float _t614_l621; 
    int _t528_l607; 
    int _t499_l625; 
    float _t530_l607; 
    int _t567_l607; 
    float _t557_l607; 
    int _t501_l607; 
    int _t505_l607; 
    float _t541_l607; 
    float beta_l625; 
    int _t505_l621; 
    int _t543_l607; 
    int _t583_l607; 
    float _t540_l607; 
    float _t548_l607; 
    int _t592_l607; 
    float _t556_l607; 
    int _t519_l607; 
    int _t605_l621; 
    int _t500_l625; 
    float _t565_l607; 
    float beta_l621; 
    float _t542_l607; 
    int i_l625; 
    float alpha_l621; 
    int i_l621; 
    float _t546_l607; 
    float _t525_l607; 
    int _t513_l607; 
    int _t519_l621; 
    float _t608_l621; 
    _t500_l625 = 2123; 
    beta_l625 = _t500_l625; 
    _t501_l625 = 0; 
    i_l625 = _t501_l625; 
    _t499_l625 = 32412; 
    alpha_l625 = _t499_l625; 
    while (i_l625 < 1024) {
        _t503_l625 = alpha_l625; 
        alpha_l625 = _t503_l625; 
        _t504_l625 = beta_l625; 
        beta_l625 = _t504_l625; 
        _t505_l625 = i_l625; 
        beta_l621 = _t504_l625; 
        _t501_l621 = 0; 
        j_l621 = _t501_l621; 
        _t505_l621 = _t505_l625; 
        i_l621 = _t505_l621; 
        alpha_l621 = _t503_l625; 
        while (j_l621 < 1024) {
            _t605_l621 = 1023; 
            _t507_l621 = j_l621; 
            _t613_l621 = B[_t605_l621][_t507_l621]; 
            _t503_l621 = alpha_l621; 
            _t505_l621 = i_l621; 
            _t610_l621 = A[_t505_l621][_t605_l621]; 
            _t611_l621 = _t503_l621 * _t610_l621; 
            _t614_l621 = _t611_l621 * _t613_l621; 
            _t519_l621 = 1; 
            _t504_l621 = beta_l621; 
            _t501_l607 = 0; 
            k_l607 = _t501_l607; 
            _t505_l607 = _t505_l621; 
            _t507_l607 = _t507_l621; 
            _t509_l607 = C[_t505_l607][_t507_l607]; 
            _t504_l607 = _t504_l621; 
            _t510_l607 = _t509_l607 * _t504_l607; 
            C[_t505_l607][_t507_l607] = _t510_l607; 
            j_l607 = _t507_l607; 
            i_l607 = _t505_l621; 
            alpha_l607 = _t503_l621; 
            while (k_l607 < 1023) {
                _t513_l607 = k_l607; 
                _t535_l607 = 3; 
                _t536_l607 = _t535_l607 + _t513_l607; 
                _t507_l607 = j_l607; 
                _t540_l607 = B[_t536_l607][_t507_l607]; 
                _t583_l607 = 9; 
                _t505_l607 = i_l607; 
                _t509_l607 = C[_t505_l607][_t507_l607]; 
                _t551_l607 = 5; 
                _t552_l607 = _t551_l607 + _t513_l607; 
                _t519_l607 = 1; 
                _t520_l607 = _t513_l607 + _t519_l607; 
                _t591_l607 = 10; 
                _t592_l607 = _t591_l607 + _t513_l607; 
                _t596_l607 = B[_t592_l607][_t507_l607]; 
                _t594_l607 = A[_t505_l607][_t592_l607]; 
                _t597_l607 = _t594_l607 * _t596_l607; 
                _t517_l607 = B[_t513_l607][_t507_l607]; 
                _t515_l607 = A[_t505_l607][_t513_l607]; 
                _t518_l607 = _t515_l607 * _t517_l607; 
                _t524_l607 = B[_t520_l607][_t507_l607]; 
                _t522_l607 = A[_t505_l607][_t520_l607]; 
                _t525_l607 = _t522_l607 * _t524_l607; 
                _t526_l607 = _t518_l607 + _t525_l607; 
                _t527_l607 = 2; 
                _t528_l607 = _t527_l607 + _t513_l607; 
                _t532_l607 = B[_t528_l607][_t507_l607]; 
                _t530_l607 = A[_t505_l607][_t528_l607]; 
                _t533_l607 = _t530_l607 * _t532_l607; 
                _t534_l607 = _t526_l607 + _t533_l607; 
                _t538_l607 = A[_t505_l607][_t536_l607]; 
                _t541_l607 = _t538_l607 * _t540_l607; 
                _t542_l607 = _t534_l607 + _t541_l607; 
                _t543_l607 = 4; 
                _t544_l607 = _t543_l607 + _t513_l607; 
                _t548_l607 = B[_t544_l607][_t507_l607]; 
                _t546_l607 = A[_t505_l607][_t544_l607]; 
                _t549_l607 = _t546_l607 * _t548_l607; 
                _t550_l607 = _t542_l607 + _t549_l607; 
                _t556_l607 = B[_t552_l607][_t507_l607]; 
                _t554_l607 = A[_t505_l607][_t552_l607]; 
                _t557_l607 = _t554_l607 * _t556_l607; 
                _t558_l607 = _t550_l607 + _t557_l607; 
                _t559_l607 = 6; 
                _t560_l607 = _t559_l607 + _t513_l607; 
                _t564_l607 = B[_t560_l607][_t507_l607]; 
                _t562_l607 = A[_t505_l607][_t560_l607]; 
                _t565_l607 = _t562_l607 * _t564_l607; 
                _t566_l607 = _t558_l607 + _t565_l607; 
                _t575_l607 = 8; 
                _t576_l607 = _t575_l607 + _t513_l607; 
                _t578_l607 = A[_t505_l607][_t576_l607]; 
                _t567_l607 = 7; 
                _t568_l607 = _t567_l607 + _t513_l607; 
                _t572_l607 = B[_t568_l607][_t507_l607]; 
                _t570_l607 = A[_t505_l607][_t568_l607]; 
                _t573_l607 = _t570_l607 * _t572_l607; 
                _t574_l607 = _t566_l607 + _t573_l607; 
                _t584_l607 = _t583_l607 + _t513_l607; 
                _t586_l607 = A[_t505_l607][_t584_l607]; 
                _t602_l607 = 11; 
                _t603_l607 = _t513_l607 + _t602_l607; 
                k_l607 = _t603_l607; 
                _t580_l607 = B[_t576_l607][_t507_l607]; 
                _t581_l607 = _t578_l607 * _t580_l607; 
                _t582_l607 = _t574_l607 + _t581_l607; 
                _t588_l607 = B[_t584_l607][_t507_l607]; 
                _t589_l607 = _t586_l607 * _t588_l607; 
                _t590_l607 = _t582_l607 + _t589_l607; 
                _t598_l607 = _t590_l607 + _t597_l607; 
                _t503_l607 = alpha_l607; 
                _t599_l607 = _t598_l607 * _t503_l607; 
                _t600_l607 = _t599_l607 + _t509_l607; 
                alpha_l607 = _t503_l607; 
                j_l607 = _t507_l607; 
                C[_t505_l607][_t507_l607] = _t600_l607; 
                i_l607 = _t505_l607;
            } 
            _t608_l621 = C[_t505_l621][_t507_l621]; 
            _t615_l621 = _t608_l621 + _t614_l621; 
            C[_t505_l621][_t507_l621] = _t615_l621; 
            _t617_l621 = _t507_l621 + _t519_l621; 
            j_l621 = _t617_l621; 
            alpha_l621 = _t503_l621; 
            beta_l621 = _t504_l621; 
            i_l621 = _t505_l621;
        } 
        _t519_l625 = 1; 
        _t622_l625 = _t505_l625 + _t519_l625; 
        i_l625 = _t622_l625;
    }
}
"
1034,8,0.6072882413864136,1423966208,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    float _t679_l720; 
    int _t695_l728; 
    float alpha_l720; 
    int _t695_l720; 
    float _t684_l720; 
    float _t642_l720; 
    float _t662_l720; 
    float _t712_l720; 
    float alpha_l724; 
    float _t710_l720; 
    int _t637_l724; 
    float _t687_l720; 
    int _t639_l720; 
    int _t664_l720; 
    float beta_l728; 
    float _t677_l720; 
    float _t700_l720; 
    float _t657_l720; 
    int i_l720; 
    int _t639_l724; 
    int _t681_l720; 
    float _t660_l720; 
    float _t651_l720; 
    float _t711_l720; 
    float _t691_l720; 
    int _t696_l720; 
    float _t693_l720; 
    int _t663_l720; 
    int _t704_l720; 
    float _t635_l724; 
    int _t654_l720; 
    int _t673_l720; 
    int _t631_l728; 
    int i_l728; 
    int _t715_l720; 
    int j_l724; 
    int k_l720; 
    int _t637_l720; 
    float _t713_l720; 
    float _t698_l720; 
    int _t655_l720; 
    float _t661_l720; 
    float _t659_l720; 
    float _t641_l720; 
    float _t675_l720; 
    int _t633_l728; 
    float _t653_l720; 
    int _t695_l724; 
    float _t652_l720; 
    int _t716_l720; 
    float _t636_l720; 
    float _t669_l720; 
    int _t725_l728; 
    float _t689_l720; 
    float _t688_l720; 
    float _t635_l720; 
    float _t701_l720; 
    int _t645_l720; 
    int _t646_l720; 
    float _t635_l728; 
    int _t637_l728; 
    float _t666_l720; 
    float _t709_l720; 
    float _t636_l728; 
    int _t633_l724; 
    float _t649_l720; 
    float _t702_l720; 
    int _t721_l724; 
    float _t670_l720; 
    float _t686_l720; 
    float _t706_l720; 
    float alpha_l728; 
    float _t678_l720; 
    float _t636_l724; 
    float beta_l724; 
    int _t703_l720; 
    float _t680_l720; 
    float _t708_l720; 
    int _t633_l720; 
    int _t647_l720; 
    int i_l724; 
    float _t671_l720; 
    int _t682_l720; 
    float _t694_l720; 
    int _t632_l728; 
    float _t668_l720; 
    int _t672_l720; 
    int j_l720; 
    _t632_l728 = 2123; 
    beta_l728 = _t632_l728; 
    _t633_l728 = 0; 
    i_l728 = _t633_l728; 
    _t631_l728 = 32412; 
    alpha_l728 = _t631_l728; 
    while (i_l728 < 1024) {
        _t636_l728 = beta_l728; 
        beta_l728 = _t636_l728; 
        _t637_l728 = i_l728; 
        _t635_l728 = alpha_l728; 
        beta_l724 = _t636_l728; 
        _t633_l724 = 0; 
        j_l724 = _t633_l724; 
        _t637_l724 = _t637_l728; 
        i_l724 = _t637_l724; 
        alpha_l724 = _t635_l728; 
        while (j_l724 < 1024) {
            _t639_l724 = j_l724; 
            _t695_l724 = 1; 
            _t721_l724 = _t639_l724 + _t695_l724; 
            _t636_l724 = beta_l724; 
            beta_l724 = _t636_l724; 
            _t637_l724 = i_l724; 
            _t635_l724 = alpha_l724; 
            _t633_l720 = 0; 
            k_l720 = _t633_l720; 
            _t639_l720 = _t639_l724; 
            _t637_l720 = _t637_l724; 
            _t641_l720 = C[_t637_l720][_t639_l720]; 
            _t636_l720 = _t636_l724; 
            _t642_l720 = _t641_l720 * _t636_l720; 
            C[_t637_l720][_t639_l720] = _t642_l720; 
            j_l720 = _t639_l720; 
            i_l720 = _t637_l724; 
            alpha_l720 = _t635_l724; 
            while (k_l720 < 1024) {
                _t646_l720 = k_l720; 
                _t637_l720 = i_l720; 
                _t639_l720 = j_l720; 
                _t654_l720 = 4; 
                _t655_l720 = _t654_l720 + _t646_l720; 
                _t659_l720 = B[_t655_l720][_t639_l720]; 
                _t641_l720 = C[_t637_l720][_t639_l720]; 
                _t681_l720 = 7; 
                _t682_l720 = _t681_l720 + _t646_l720; 
                _t686_l720 = B[_t682_l720][_t639_l720]; 
                _t684_l720 = A[_t637_l720][_t682_l720]; 
                _t687_l720 = _t684_l720 * _t686_l720; 
                _t635_l720 = alpha_l720; 
                _t688_l720 = _t687_l720 * _t635_l720; 
                _t672_l720 = 6; 
                _t673_l720 = _t672_l720 + _t646_l720; 
                _t677_l720 = B[_t673_l720][_t639_l720]; 
                _t675_l720 = A[_t637_l720][_t673_l720]; 
                _t678_l720 = _t675_l720 * _t677_l720; 
                _t679_l720 = _t678_l720 * _t635_l720; 
                _t645_l720 = 3; 
                _t647_l720 = _t645_l720 + _t646_l720; 
                _t649_l720 = A[_t637_l720][_t647_l720]; 
                _t651_l720 = B[_t647_l720][_t639_l720]; 
                _t652_l720 = _t649_l720 * _t651_l720; 
                _t653_l720 = _t652_l720 * _t635_l720; 
                _t657_l720 = A[_t637_l720][_t655_l720]; 
                _t660_l720 = _t657_l720 * _t659_l720; 
                _t661_l720 = _t660_l720 * _t635_l720; 
                _t662_l720 = _t653_l720 + _t661_l720; 
                _t663_l720 = 5; 
                _t664_l720 = _t663_l720 + _t646_l720; 
                _t668_l720 = B[_t664_l720][_t639_l720]; 
                _t666_l720 = A[_t637_l720][_t664_l720]; 
                _t669_l720 = _t666_l720 * _t668_l720; 
                _t670_l720 = _t669_l720 * _t635_l720; 
                _t671_l720 = _t662_l720 + _t670_l720; 
                _t680_l720 = _t671_l720 + _t679_l720; 
                _t689_l720 = _t680_l720 + _t688_l720; 
                _t693_l720 = B[_t646_l720][_t639_l720]; 
                _t691_l720 = A[_t637_l720][_t646_l720]; 
                _t694_l720 = _t691_l720 * _t693_l720; 
                _t695_l720 = 1; 
                _t696_l720 = _t646_l720 + _t695_l720; 
                _t700_l720 = B[_t696_l720][_t639_l720]; 
                _t698_l720 = A[_t637_l720][_t696_l720]; 
                _t701_l720 = _t698_l720 * _t700_l720; 
                _t702_l720 = _t694_l720 + _t701_l720; 
                _t703_l720 = 2; 
                _t704_l720 = _t703_l720 + _t646_l720; 
                _t708_l720 = B[_t704_l720][_t639_l720]; 
                _t706_l720 = A[_t637_l720][_t704_l720]; 
                _t709_l720 = _t706_l720 * _t708_l720; 
                _t710_l720 = _t702_l720 + _t709_l720; 
                _t711_l720 = _t710_l720 * _t635_l720; 
                _t712_l720 = _t689_l720 + _t711_l720; 
                _t713_l720 = _t712_l720 + _t641_l720; 
                C[_t637_l720][_t639_l720] = _t713_l720; 
                _t715_l720 = 8; 
                _t716_l720 = _t646_l720 + _t715_l720; 
                k_l720 = _t716_l720; 
                alpha_l720 = _t635_l720; 
                j_l720 = _t639_l720; 
                i_l720 = _t637_l720;
            } 
            i_l724 = _t637_l724; 
            j_l724 = _t721_l724; 
            alpha_l724 = _t635_l724;
        } 
        _t695_l728 = 1; 
        _t725_l728 = _t637_l728 + _t695_l728; 
        i_l728 = _t725_l728; 
        alpha_l728 = _t635_l728;
    }
}
"
663,5,0.7240683436393738,2745171968,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    float beta_l795; 
    float alpha_l787; 
    int _t736_l791; 
    float _t753_l787; 
    int j_l791; 
    float _t779_l787; 
    float _t744_l787; 
    int _t762_l787; 
    float _t774_l787; 
    int _t742_l787; 
    float _t738_l791; 
    int _t736_l795; 
    float beta_l791; 
    float alpha_l791; 
    float _t776_l787; 
    int _t748_l787; 
    int _t792_l795; 
    int _t763_l787; 
    float _t739_l787; 
    int _t740_l787; 
    int _t740_l791; 
    int _t788_l791; 
    int _t754_l791; 
    int i_l795; 
    int _t735_l795; 
    float _t757_l787; 
    int _t772_l787; 
    float _t738_l795; 
    float _t738_l787; 
    float _t770_l787; 
    int j_l787; 
    int _t736_l787; 
    int _t754_l787; 
    float _t761_l787; 
    int _t740_l795; 
    float _t769_l787; 
    int _t771_l787; 
    float _t745_l787; 
    int _t754_l795; 
    float _t780_l787; 
    int i_l787; 
    float _t767_l787; 
    int _t742_l791; 
    float _t778_l787; 
    float _t760_l787; 
    float _t750_l787; 
    float _t739_l791; 
    int i_l791; 
    int _t755_l787; 
    float _t752_l787; 
    int k_l787; 
    float _t759_l787; 
    float alpha_l795; 
    int _t782_l787; 
    int _t783_l787; 
    int _t734_l795; 
    float _t765_l787; 
    float _t768_l787; 
    float _t739_l795; 
    float _t777_l787; 
    _t735_l795 = 2123; 
    beta_l795 = _t735_l795; 
    _t736_l795 = 0; 
    i_l795 = _t736_l795; 
    _t734_l795 = 32412; 
    alpha_l795 = _t734_l795; 
    while (i_l795 < 1024) {
        _t739_l795 = beta_l795; 
        beta_l795 = _t739_l795; 
        _t738_l795 = alpha_l795; 
        _t740_l795 = i_l795; 
        beta_l791 = _t739_l795; 
        _t736_l791 = 0; 
        j_l791 = _t736_l791; 
        _t740_l791 = _t740_l795; 
        i_l791 = _t740_l791; 
        alpha_l791 = _t738_l795; 
        while (j_l791 < 1024) {
            _t742_l791 = j_l791; 
            _t739_l791 = beta_l791; 
            beta_l791 = _t739_l791; 
            _t738_l791 = alpha_l791; 
            _t740_l791 = i_l791; 
            _t736_l787 = 0; 
            k_l787 = _t736_l787; 
            _t742_l787 = _t742_l791; 
            _t740_l787 = _t740_l791; 
            _t744_l787 = C[_t740_l787][_t742_l787]; 
            _t739_l787 = _t739_l791; 
            _t745_l787 = _t744_l787 * _t739_l787; 
            C[_t740_l787][_t742_l787] = _t745_l787; 
            j_l787 = _t742_l787; 
            i_l787 = _t740_l791; 
            alpha_l787 = _t738_l791; 
            while (k_l787 < 1024) {
                _t742_l787 = j_l787; 
                j_l787 = _t742_l787; 
                _t740_l787 = i_l787; 
                _t748_l787 = k_l787; 
                _t771_l787 = 3; 
                _t772_l787 = _t771_l787 + _t748_l787; 
                _t774_l787 = A[_t740_l787][_t772_l787]; 
                _t776_l787 = B[_t772_l787][_t742_l787]; 
                _t777_l787 = _t774_l787 * _t776_l787; 
                _t754_l787 = 1; 
                _t755_l787 = _t748_l787 + _t754_l787; 
                _t762_l787 = 2; 
                _t763_l787 = _t762_l787 + _t748_l787; 
                _t767_l787 = B[_t763_l787][_t742_l787]; 
                _t765_l787 = A[_t740_l787][_t763_l787]; 
                _t768_l787 = _t765_l787 * _t767_l787; 
                _t744_l787 = C[_t740_l787][_t742_l787]; 
                _t738_l787 = alpha_l787; 
                _t778_l787 = _t777_l787 * _t738_l787; 
                _t750_l787 = A[_t740_l787][_t748_l787]; 
                _t752_l787 = B[_t748_l787][_t742_l787]; 
                _t753_l787 = _t750_l787 * _t752_l787; 
                _t759_l787 = B[_t755_l787][_t742_l787]; 
                _t757_l787 = A[_t740_l787][_t755_l787]; 
                _t760_l787 = _t757_l787 * _t759_l787; 
                _t761_l787 = _t753_l787 + _t760_l787; 
                _t769_l787 = _t761_l787 + _t768_l787; 
                _t770_l787 = _t769_l787 * _t738_l787; 
                _t779_l787 = _t770_l787 + _t778_l787; 
                _t780_l787 = _t779_l787 + _t744_l787; 
                C[_t740_l787][_t742_l787] = _t780_l787; 
                i_l787 = _t740_l787; 
                _t782_l787 = 4; 
                _t783_l787 = _t748_l787 + _t782_l787; 
                k_l787 = _t783_l787; 
                alpha_l787 = _t738_l787;
            } 
            _t754_l791 = 1; 
            _t788_l791 = _t742_l791 + _t754_l791; 
            i_l791 = _t740_l791; 
            j_l791 = _t788_l791; 
            alpha_l791 = _t738_l791;
        } 
        _t754_l795 = 1; 
        _t792_l795 = _t740_l795 + _t754_l795; 
        i_l795 = _t792_l795; 
        alpha_l795 = _t738_l795;
    }
}
"
549,5,1.1623672246932983,5408555008,"void kernel_gemm(float C[1024][1024], float A[1024][1024], float B[1024][1024]) {
    #pragma np_opt input float C[1024][1024] = [0.0, 1.0], float A[1024][1024] = [0.0, 1.0], float B[1024][1024] = [0.0, 1.0] 
    #pragma np_opt output C 
    int _t807_l837; 
    float _t806_l837; 
    int _t821_l841; 
    int _t807_l845; 
    int _t801_l845; 
    int _t838_l841; 
    int i_l841; 
    float _t828_l837; 
    int i_l845; 
    int _t832_l837; 
    float _t806_l841; 
    int _t833_l837; 
    int _t821_l837; 
    float alpha_l837; 
    float _t830_l837; 
    int _t803_l845; 
    int _t802_l845; 
    float _t812_l837; 
    float _t819_l837; 
    float _t820_l837; 
    float _t827_l837; 
    float _t817_l837; 
    int _t822_l837; 
    int j_l837; 
    float _t829_l837; 
    int _t815_l837; 
    int j_l841; 
    float _t811_l837; 
    float beta_l841; 
    int _t803_l841; 
    int _t809_l837; 
    float _t805_l845; 
    float _t824_l837; 
    float _t805_l841; 
    float _t826_l837; 
    float _t805_l837; 
    int i_l837; 
    float alpha_l841; 
    float alpha_l845; 
    int _t809_l841; 
    int _t803_l837; 
    int _t842_l845; 
    int k_l837; 
    int _t821_l845; 
    float _t806_l845; 
    float beta_l845; 
    int _t807_l841; 
    _t802_l845 = 2123; 
    beta_l845 = _t802_l845; 
    _t803_l845 = 0; 
    i_l845 = _t803_l845; 
    _t801_l845 = 32412; 
    alpha_l845 = _t801_l845; 
    while (i_l845 < 1024) {
        _t806_l845 = beta_l845; 
        beta_l845 = _t806_l845; 
        _t807_l845 = i_l845; 
        _t805_l845 = alpha_l845; 
        beta_l841 = _t806_l845; 
        _t803_l841 = 0; 
        j_l841 = _t803_l841; 
        _t807_l841 = _t807_l845; 
        i_l841 = _t807_l841; 
        alpha_l841 = _t805_l845; 
        while (j_l841 < 1024) {
            _t806_l841 = beta_l841; 
            _t809_l841 = j_l841; 
            _t821_l841 = 1; 
            _t838_l841 = _t809_l841 + _t821_l841; 
            beta_l841 = _t806_l841; 
            _t807_l841 = i_l841; 
            _t805_l841 = alpha_l841; 
            _t803_l837 = 0; 
            k_l837 = _t803_l837; 
            _t806_l837 = _t806_l841; 
            _t809_l837 = _t809_l841; 
            _t807_l837 = _t807_l841; 
            _t811_l837 = C[_t807_l837][_t809_l837]; 
            _t812_l837 = _t811_l837 * _t806_l837; 
            C[_t807_l837][_t809_l837] = _t812_l837; 
            j_l837 = _t809_l837; 
            i_l837 = _t807_l841; 
            alpha_l837 = _t805_l841; 
            while (k_l837 < 1024) {
                _t807_l837 = i_l837; 
                _t815_l837 = k_l837; 
                _t817_l837 = A[_t807_l837][_t815_l837]; 
                _t809_l837 = j_l837; 
                _t819_l837 = B[_t815_l837][_t809_l837]; 
                _t820_l837 = _t817_l837 * _t819_l837; 
                _t821_l837 = 1; 
                _t822_l837 = _t815_l837 + _t821_l837; 
                _t826_l837 = B[_t822_l837][_t809_l837]; 
                _t824_l837 = A[_t807_l837][_t822_l837]; 
                _t827_l837 = _t824_l837 * _t826_l837; 
                _t828_l837 = _t820_l837 + _t827_l837; 
                _t805_l837 = alpha_l837; 
                _t829_l837 = _t828_l837 * _t805_l837; 
                _t811_l837 = C[_t807_l837][_t809_l837]; 
                _t830_l837 = _t829_l837 + _t811_l837; 
                C[_t807_l837][_t809_l837] = _t830_l837; 
                _t832_l837 = 2; 
                j_l837 = _t809_l837; 
                alpha_l837 = _t805_l837; 
                _t833_l837 = _t815_l837 + _t832_l837; 
                i_l837 = _t807_l837; 
                k_l837 = _t833_l837;
            } 
            i_l841 = _t807_l841; 
            j_l841 = _t838_l841; 
            alpha_l841 = _t805_l841;
        } 
        _t821_l845 = 1; 
        _t842_l845 = _t807_l845 + _t821_l845; 
        i_l845 = _t842_l845; 
        alpha_l845 = _t805_l845;
    }
}
"
